#line 2 "scan.cpp"
#line 2 "scan.l"
/*
    scan.l
        sql parser scanner
*/
#include "sqlparser.h"
#include "sql.hpp"



#line 13 "scan.cpp"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 5
#define YY_FLEX_SUBMINOR_VERSION 35
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */
#include <stdio.h>
#include <string.h>
#include <errno.h>
#include <stdlib.h>

/* end standard C headers. */

/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
typedef uint64_t flex_uint64_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;
#endif /* ! C99 */

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#endif /* ! FLEXINT_H */

#ifdef __cplusplus

/* The "const" storage-class-modifier is valid. */
#define YY_USE_CONST

#else	/* ! __cplusplus */

/* C99 requires __STDC__ to be defined as 1. */
#if defined (__STDC__)

#define YY_USE_CONST

#endif	/* defined (__STDC__) */
#endif	/* ! __cplusplus */

#ifdef YY_USE_CONST
#define yyconst const
#else
#define yyconst
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)

/* An opaque pointer. */
#ifndef YY_TYPEDEF_YY_SCANNER_T
#define YY_TYPEDEF_YY_SCANNER_T
typedef void* yyscan_t;
#endif

/* For convenience, these vars (plus the bison vars far below)
   are macros in the reentrant scanner. */
#define yyin yyg->yyin_r
#define yyout yyg->yyout_r
#define yyextra yyg->yyextra_r
#define yyleng yyg->yyleng_r
#define yytext yyg->yytext_r
#define yylineno (YY_CURRENT_BUFFER_LVALUE->yy_bs_lineno)
#define yycolumn (YY_CURRENT_BUFFER_LVALUE->yy_bs_column)
#define yy_flex_debug yyg->yy_flex_debug_r

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN yyg->yy_start = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START ((yyg->yy_start - 1) / 2)
#define YYSTATE YY_START

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE core_yyrestart(yyin ,yyscanner )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#define YY_BUF_SIZE 16384
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

    #define YY_LESS_LINENO(n)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = yyg->yy_hold_char; \
		YY_RESTORE_YY_MORE_OFFSET \
		yyg->yy_c_buf_p = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, yyg->yytext_ptr , yyscanner )

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{
	FILE *yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	yy_size_t yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	yy_size_t yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */
    
	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via core_yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( yyg->yy_buffer_stack \
                          ? yyg->yy_buffer_stack[yyg->yy_buffer_stack_top] \
                          : NULL)

/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE yyg->yy_buffer_stack[yyg->yy_buffer_stack_top]

void core_yyrestart (FILE *input_file ,yyscan_t yyscanner );
void core_yy_switch_to_buffer (YY_BUFFER_STATE new_buffer ,yyscan_t yyscanner );
YY_BUFFER_STATE core_yy_create_buffer (FILE *file,int size ,yyscan_t yyscanner );
void core_yy_delete_buffer (YY_BUFFER_STATE b ,yyscan_t yyscanner );
void core_yy_flush_buffer (YY_BUFFER_STATE b ,yyscan_t yyscanner );
void core_yypush_buffer_state (YY_BUFFER_STATE new_buffer ,yyscan_t yyscanner );
void core_yypop_buffer_state (yyscan_t yyscanner );

static void core_yyensure_buffer_stack (yyscan_t yyscanner );
static void core_yy_load_buffer_state (yyscan_t yyscanner );
static void core_yy_init_buffer (YY_BUFFER_STATE b,FILE *file ,yyscan_t yyscanner );

#define YY_FLUSH_BUFFER core_yy_flush_buffer(YY_CURRENT_BUFFER ,yyscanner)

YY_BUFFER_STATE core_yy_scan_buffer (char *base,yy_size_t size ,yyscan_t yyscanner );
YY_BUFFER_STATE core_yy_scan_string (yyconst char *yy_str ,yyscan_t yyscanner );
YY_BUFFER_STATE core_yy_scan_bytes (yyconst char *bytes,yy_size_t len ,yyscan_t yyscanner );

void *core_yyalloc (yy_size_t ,yyscan_t yyscanner );
void *core_yyrealloc (void *,yy_size_t ,yyscan_t yyscanner );
void core_yyfree (void * ,yyscan_t yyscanner );

#define yy_new_buffer core_yy_create_buffer

#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        core_yyensure_buffer_stack (yyscanner); \
		YY_CURRENT_BUFFER_LVALUE =    \
            core_yy_create_buffer(yyin,YY_BUF_SIZE ,yyscanner); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}

#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        core_yyensure_buffer_stack (yyscanner); \
		YY_CURRENT_BUFFER_LVALUE =    \
            core_yy_create_buffer(yyin,YY_BUF_SIZE ,yyscanner); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}

#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* Begin user sect3 */

#define core_yywrap(n) 1
#define YY_SKIP_YYWRAP

typedef unsigned char YY_CHAR;

typedef yyconst struct yy_trans_info *yy_state_type;

#define yytext_ptr yytext_r

static yy_state_type yy_get_previous_state (yyscan_t yyscanner );
static yy_state_type yy_try_NUL_trans (yy_state_type current_state  ,yyscan_t yyscanner);
static int yy_get_next_buffer (yyscan_t yyscanner );
static void yy_fatal_error (yyconst char msg[] ,yyscan_t yyscanner );

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	yyg->yytext_ptr = yy_bp; \
	yyleng = (yy_size_t) (yy_cp - yy_bp); \
	yyg->yy_hold_char = *yy_cp; \
	*yy_cp = '\0'; \
	yyg->yy_c_buf_p = yy_cp;

#define YY_NUM_RULES 43
#define YY_END_OF_BUFFER 44
struct yy_trans_info
	{
	flex_int16_t yy_verify;
	flex_int16_t yy_nxt;
	};
static yyconst struct yy_trans_info yy_transition[17339] =
    {
 {   0,   0 }, {   0,17083 }, {   0,   0 }, {   0,17081 }, {   1,3096 },
 {   2,3096 }, {   3,3096 }, {   4,3096 }, {   5,3096 }, {   6,3096 },
 {   7,3096 }, {   8,3096 }, {   9,3098 }, {  10,3103 }, {  11,3096 },
 {  12,3098 }, {  13,3098 }, {  14,3096 }, {  15,3096 }, {  16,3096 },
 {  17,3096 }, {  18,3096 }, {  19,3096 }, {  20,3096 }, {  21,3096 },
 {  22,3096 }, {  23,3096 }, {  24,3096 }, {  25,3096 }, {  26,3096 },
 {  27,3096 }, {  28,3096 }, {  29,3096 }, {  30,3096 }, {  31,3096 },
 {  32,3098 }, {  33,3105 }, {  34,3100 }, {  35,3145 }, {  36,3162 },
 {  37,3195 }, {  38,3145 }, {  39,3118 }, {  40,3120 }, {  41,3120 },
 {  42,3195 }, {  43,3195 }, {  44,3120 }, {  45,3235 }, {  46,3254 },

 {  47,3285 }, {  48,3287 }, {  49,3287 }, {  50,3287 }, {  51,3287 },
 {  52,3287 }, {  53,3287 }, {  54,3287 }, {  55,3287 }, {  56,3287 },
 {  57,3287 }, {  58,3120 }, {  59,3120 }, {  60,3352 }, {  61,3195 },
 {  62,3363 }, {  63,3145 }, {  64,3145 }, {  65,3443 }, {  66,3700 },
 {  67,3443 }, {  68,3443 }, {  69,3443 }, {  70,3443 }, {  71,3443 },
 {  72,3443 }, {  73,3443 }, {  74,3443 }, {  75,3443 }, {  76,3443 },
 {  77,3443 }, {  78,3443 }, {  79,3443 }, {  80,3443 }, {  81,3443 },
 {  82,3443 }, {  83,3443 }, {  84,3443 }, {  85,3443 }, {  86,3443 },
 {  87,3443 }, {  88,3957 }, {  89,3443 }, {  90,3443 }, {  91,3120 },
 {  92,3096 }, {  93,3120 }, {  94,3195 }, {  95,3443 }, {  96,3145 },

 {  97,3443 }, {  98,3700 }, {  99,3443 }, { 100,3443 }, { 101,3443 },
 { 102,3443 }, { 103,3443 }, { 104,3443 }, { 105,3443 }, { 106,3443 },
 { 107,3443 }, { 108,3443 }, { 109,3443 }, { 110,3443 }, { 111,3443 },
 { 112,3443 }, { 113,3443 }, { 114,3443 }, { 115,3443 }, { 116,3443 },
 { 117,3443 }, { 118,3443 }, { 119,3443 }, { 120,3957 }, { 121,3443 },
 { 122,3443 }, { 123,3096 }, { 124,3145 }, { 125,3096 }, { 126,3145 },
 { 127,3096 }, { 128,3443 }, { 129,3443 }, { 130,3443 }, { 131,3443 },
 { 132,3443 }, { 133,3443 }, { 134,3443 }, { 135,3443 }, { 136,3443 },
 { 137,3443 }, { 138,3443 }, { 139,3443 }, { 140,3443 }, { 141,3443 },
 { 142,3443 }, { 143,3443 }, { 144,3443 }, { 145,3443 }, { 146,3443 },

 { 147,3443 }, { 148,3443 }, { 149,3443 }, { 150,3443 }, { 151,3443 },
 { 152,3443 }, { 153,3443 }, { 154,3443 }, { 155,3443 }, { 156,3443 },
 { 157,3443 }, { 158,3443 }, { 159,3443 }, { 160,3443 }, { 161,3443 },
 { 162,3443 }, { 163,3443 }, { 164,3443 }, { 165,3443 }, { 166,3443 },
 { 167,3443 }, { 168,3443 }, { 169,3443 }, { 170,3443 }, { 171,3443 },
 { 172,3443 }, { 173,3443 }, { 174,3443 }, { 175,3443 }, { 176,3443 },
 { 177,3443 }, { 178,3443 }, { 179,3443 }, { 180,3443 }, { 181,3443 },
 { 182,3443 }, { 183,3443 }, { 184,3443 }, { 185,3443 }, { 186,3443 },
 { 187,3443 }, { 188,3443 }, { 189,3443 }, { 190,3443 }, { 191,3443 },
 { 192,3443 }, { 193,3443 }, { 194,3443 }, { 195,3443 }, { 196,3443 },

 { 197,3443 }, { 198,3443 }, { 199,3443 }, { 200,3443 }, { 201,3443 },
 { 202,3443 }, { 203,3443 }, { 204,3443 }, { 205,3443 }, { 206,3443 },
 { 207,3443 }, { 208,3443 }, { 209,3443 }, { 210,3443 }, { 211,3443 },
 { 212,3443 }, { 213,3443 }, { 214,3443 }, { 215,3443 }, { 216,3443 },
 { 217,3443 }, { 218,3443 }, { 219,3443 }, { 220,3443 }, { 221,3443 },
 { 222,3443 }, { 223,3443 }, { 224,3443 }, { 225,3443 }, { 226,3443 },
 { 227,3443 }, { 228,3443 }, { 229,3443 }, { 230,3443 }, { 231,3443 },
 { 232,3443 }, { 233,3443 }, { 234,3443 }, { 235,3443 }, { 236,3443 },
 { 237,3443 }, { 238,3443 }, { 239,3443 }, { 240,3443 }, { 241,3443 },
 { 242,3443 }, { 243,3443 }, { 244,3443 }, { 245,3443 }, { 246,3443 },

 { 247,3443 }, { 248,3443 }, { 249,3443 }, { 250,3443 }, { 251,3443 },
 { 252,3443 }, { 253,3443 }, { 254,3443 }, { 255,3443 }, { 256,3096 },
 {   0,   0 }, {   0,16823 }, {   1,2838 }, {   2,2838 }, {   3,2838 },
 {   4,2838 }, {   5,2838 }, {   6,2838 }, {   7,2838 }, {   8,2838 },
 {   9,2840 }, {  10,2845 }, {  11,2838 }, {  12,2840 }, {  13,2840 },
 {  14,2838 }, {  15,2838 }, {  16,2838 }, {  17,2838 }, {  18,2838 },
 {  19,2838 }, {  20,2838 }, {  21,2838 }, {  22,2838 }, {  23,2838 },
 {  24,2838 }, {  25,2838 }, {  26,2838 }, {  27,2838 }, {  28,2838 },
 {  29,2838 }, {  30,2838 }, {  31,2838 }, {  32,2840 }, {  33,2847 },
 {  34,2842 }, {  35,2887 }, {  36,2904 }, {  37,2937 }, {  38,2887 },

 {  39,2860 }, {  40,2862 }, {  41,2862 }, {  42,2937 }, {  43,2937 },
 {  44,2862 }, {  45,2977 }, {  46,2996 }, {  47,3027 }, {  48,3029 },
 {  49,3029 }, {  50,3029 }, {  51,3029 }, {  52,3029 }, {  53,3029 },
 {  54,3029 }, {  55,3029 }, {  56,3029 }, {  57,3029 }, {  58,2862 },
 {  59,2862 }, {  60,3094 }, {  61,2937 }, {  62,3105 }, {  63,2887 },
 {  64,2887 }, {  65,3185 }, {  66,3442 }, {  67,3185 }, {  68,3185 },
 {  69,3185 }, {  70,3185 }, {  71,3185 }, {  72,3185 }, {  73,3185 },
 {  74,3185 }, {  75,3185 }, {  76,3185 }, {  77,3185 }, {  78,3185 },
 {  79,3185 }, {  80,3185 }, {  81,3185 }, {  82,3185 }, {  83,3185 },
 {  84,3185 }, {  85,3185 }, {  86,3185 }, {  87,3185 }, {  88,3699 },

 {  89,3185 }, {  90,3185 }, {  91,2862 }, {  92,2838 }, {  93,2862 },
 {  94,2937 }, {  95,3185 }, {  96,2887 }, {  97,3185 }, {  98,3442 },
 {  99,3185 }, { 100,3185 }, { 101,3185 }, { 102,3185 }, { 103,3185 },
 { 104,3185 }, { 105,3185 }, { 106,3185 }, { 107,3185 }, { 108,3185 },
 { 109,3185 }, { 110,3185 }, { 111,3185 }, { 112,3185 }, { 113,3185 },
 { 114,3185 }, { 115,3185 }, { 116,3185 }, { 117,3185 }, { 118,3185 },
 { 119,3185 }, { 120,3699 }, { 121,3185 }, { 122,3185 }, { 123,2838 },
 { 124,2887 }, { 125,2838 }, { 126,2887 }, { 127,2838 }, { 128,3185 },
 { 129,3185 }, { 130,3185 }, { 131,3185 }, { 132,3185 }, { 133,3185 },
 { 134,3185 }, { 135,3185 }, { 136,3185 }, { 137,3185 }, { 138,3185 },

 { 139,3185 }, { 140,3185 }, { 141,3185 }, { 142,3185 }, { 143,3185 },
 { 144,3185 }, { 145,3185 }, { 146,3185 }, { 147,3185 }, { 148,3185 },
 { 149,3185 }, { 150,3185 }, { 151,3185 }, { 152,3185 }, { 153,3185 },
 { 154,3185 }, { 155,3185 }, { 156,3185 }, { 157,3185 }, { 158,3185 },
 { 159,3185 }, { 160,3185 }, { 161,3185 }, { 162,3185 }, { 163,3185 },
 { 164,3185 }, { 165,3185 }, { 166,3185 }, { 167,3185 }, { 168,3185 },
 { 169,3185 }, { 170,3185 }, { 171,3185 }, { 172,3185 }, { 173,3185 },
 { 174,3185 }, { 175,3185 }, { 176,3185 }, { 177,3185 }, { 178,3185 },
 { 179,3185 }, { 180,3185 }, { 181,3185 }, { 182,3185 }, { 183,3185 },
 { 184,3185 }, { 185,3185 }, { 186,3185 }, { 187,3185 }, { 188,3185 },

 { 189,3185 }, { 190,3185 }, { 191,3185 }, { 192,3185 }, { 193,3185 },
 { 194,3185 }, { 195,3185 }, { 196,3185 }, { 197,3185 }, { 198,3185 },
 { 199,3185 }, { 200,3185 }, { 201,3185 }, { 202,3185 }, { 203,3185 },
 { 204,3185 }, { 205,3185 }, { 206,3185 }, { 207,3185 }, { 208,3185 },
 { 209,3185 }, { 210,3185 }, { 211,3185 }, { 212,3185 }, { 213,3185 },
 { 214,3185 }, { 215,3185 }, { 216,3185 }, { 217,3185 }, { 218,3185 },
 { 219,3185 }, { 220,3185 }, { 221,3185 }, { 222,3185 }, { 223,3185 },
 { 224,3185 }, { 225,3185 }, { 226,3185 }, { 227,3185 }, { 228,3185 },
 { 229,3185 }, { 230,3185 }, { 231,3185 }, { 232,3185 }, { 233,3185 },
 { 234,3185 }, { 235,3185 }, { 236,3185 }, { 237,3185 }, { 238,3185 },

 { 239,3185 }, { 240,3185 }, { 241,3185 }, { 242,3185 }, { 243,3185 },
 { 244,3185 }, { 245,3185 }, { 246,3185 }, { 247,3185 }, { 248,3185 },
 { 249,3185 }, { 250,3185 }, { 251,3185 }, { 252,3185 }, { 253,3185 },
 { 254,3185 }, { 255,3185 }, { 256,2838 }, {   0,  12 }, {   0,16565 },
 {   1,3698 }, {   2,3698 }, {   3,3698 }, {   4,3698 }, {   5,3698 },
 {   6,3698 }, {   7,3698 }, {   8,3698 }, {   9,3698 }, {  10,3698 },
 {  11,3698 }, {  12,3698 }, {  13,3698 }, {  14,3698 }, {  15,3698 },
 {  16,3698 }, {  17,3698 }, {  18,3698 }, {  19,3698 }, {  20,3698 },
 {  21,3698 }, {  22,3698 }, {  23,3698 }, {  24,3698 }, {  25,3698 },
 {  26,3698 }, {  27,3698 }, {  28,3698 }, {  29,3698 }, {  30,3698 },

 {  31,3698 }, {  32,3698 }, {  33,3698 }, {  34,3698 }, {  35,3698 },
 {  36,3698 }, {  37,3698 }, {  38,3698 }, {  39,3956 }, {  40,3698 },
 {  41,3698 }, {  42,3698 }, {  43,3698 }, {  44,3698 }, {  45,3698 },
 {  46,3698 }, {  47,3698 }, {  48,3698 }, {  49,3698 }, {  50,3698 },
 {  51,3698 }, {  52,3698 }, {  53,3698 }, {  54,3698 }, {  55,3698 },
 {  56,3698 }, {  57,3698 }, {  58,3698 }, {  59,3698 }, {  60,3698 },
 {  61,3698 }, {  62,3698 }, {  63,3698 }, {  64,3698 }, {  65,3698 },
 {  66,3698 }, {  67,3698 }, {  68,3698 }, {  69,3698 }, {  70,3698 },
 {  71,3698 }, {  72,3698 }, {  73,3698 }, {  74,3698 }, {  75,3698 },
 {  76,3698 }, {  77,3698 }, {  78,3698 }, {  79,3698 }, {  80,3698 },

 {  81,3698 }, {  82,3698 }, {  83,3698 }, {  84,3698 }, {  85,3698 },
 {  86,3698 }, {  87,3698 }, {  88,3698 }, {  89,3698 }, {  90,3698 },
 {  91,3698 }, {  92,3698 }, {  93,3698 }, {  94,3698 }, {  95,3698 },
 {  96,3698 }, {  97,3698 }, {  98,3698 }, {  99,3698 }, { 100,3698 },
 { 101,3698 }, { 102,3698 }, { 103,3698 }, { 104,3698 }, { 105,3698 },
 { 106,3698 }, { 107,3698 }, { 108,3698 }, { 109,3698 }, { 110,3698 },
 { 111,3698 }, { 112,3698 }, { 113,3698 }, { 114,3698 }, { 115,3698 },
 { 116,3698 }, { 117,3698 }, { 118,3698 }, { 119,3698 }, { 120,3698 },
 { 121,3698 }, { 122,3698 }, { 123,3698 }, { 124,3698 }, { 125,3698 },
 { 126,3698 }, { 127,3698 }, { 128,3698 }, { 129,3698 }, { 130,3698 },

 { 131,3698 }, { 132,3698 }, { 133,3698 }, { 134,3698 }, { 135,3698 },
 { 136,3698 }, { 137,3698 }, { 138,3698 }, { 139,3698 }, { 140,3698 },
 { 141,3698 }, { 142,3698 }, { 143,3698 }, { 144,3698 }, { 145,3698 },
 { 146,3698 }, { 147,3698 }, { 148,3698 }, { 149,3698 }, { 150,3698 },
 { 151,3698 }, { 152,3698 }, { 153,3698 }, { 154,3698 }, { 155,3698 },
 { 156,3698 }, { 157,3698 }, { 158,3698 }, { 159,3698 }, { 160,3698 },
 { 161,3698 }, { 162,3698 }, { 163,3698 }, { 164,3698 }, { 165,3698 },
 { 166,3698 }, { 167,3698 }, { 168,3698 }, { 169,3698 }, { 170,3698 },
 { 171,3698 }, { 172,3698 }, { 173,3698 }, { 174,3698 }, { 175,3698 },
 { 176,3698 }, { 177,3698 }, { 178,3698 }, { 179,3698 }, { 180,3698 },

 { 181,3698 }, { 182,3698 }, { 183,3698 }, { 184,3698 }, { 185,3698 },
 { 186,3698 }, { 187,3698 }, { 188,3698 }, { 189,3698 }, { 190,3698 },
 { 191,3698 }, { 192,3698 }, { 193,3698 }, { 194,3698 }, { 195,3698 },
 { 196,3698 }, { 197,3698 }, { 198,3698 }, { 199,3698 }, { 200,3698 },
 { 201,3698 }, { 202,3698 }, { 203,3698 }, { 204,3698 }, { 205,3698 },
 { 206,3698 }, { 207,3698 }, { 208,3698 }, { 209,3698 }, { 210,3698 },
 { 211,3698 }, { 212,3698 }, { 213,3698 }, { 214,3698 }, { 215,3698 },
 { 216,3698 }, { 217,3698 }, { 218,3698 }, { 219,3698 }, { 220,3698 },
 { 221,3698 }, { 222,3698 }, { 223,3698 }, { 224,3698 }, { 225,3698 },
 { 226,3698 }, { 227,3698 }, { 228,3698 }, { 229,3698 }, { 230,3698 },

 { 231,3698 }, { 232,3698 }, { 233,3698 }, { 234,3698 }, { 235,3698 },
 { 236,3698 }, { 237,3698 }, { 238,3698 }, { 239,3698 }, { 240,3698 },
 { 241,3698 }, { 242,3698 }, { 243,3698 }, { 244,3698 }, { 245,3698 },
 { 246,3698 }, { 247,3698 }, { 248,3698 }, { 249,3698 }, { 250,3698 },
 { 251,3698 }, { 252,3698 }, { 253,3698 }, { 254,3698 }, { 255,3698 },
 { 256,3698 }, {   0,  12 }, {   0,16307 }, {   1,3440 }, {   2,3440 },
 {   3,3440 }, {   4,3440 }, {   5,3440 }, {   6,3440 }, {   7,3440 },
 {   8,3440 }, {   9,3440 }, {  10,3440 }, {  11,3440 }, {  12,3440 },
 {  13,3440 }, {  14,3440 }, {  15,3440 }, {  16,3440 }, {  17,3440 },
 {  18,3440 }, {  19,3440 }, {  20,3440 }, {  21,3440 }, {  22,3440 },

 {  23,3440 }, {  24,3440 }, {  25,3440 }, {  26,3440 }, {  27,3440 },
 {  28,3440 }, {  29,3440 }, {  30,3440 }, {  31,3440 }, {  32,3440 },
 {  33,3440 }, {  34,3440 }, {  35,3440 }, {  36,3440 }, {  37,3440 },
 {  38,3440 }, {  39,3698 }, {  40,3440 }, {  41,3440 }, {  42,3440 },
 {  43,3440 }, {  44,3440 }, {  45,3440 }, {  46,3440 }, {  47,3440 },
 {  48,3440 }, {  49,3440 }, {  50,3440 }, {  51,3440 }, {  52,3440 },
 {  53,3440 }, {  54,3440 }, {  55,3440 }, {  56,3440 }, {  57,3440 },
 {  58,3440 }, {  59,3440 }, {  60,3440 }, {  61,3440 }, {  62,3440 },
 {  63,3440 }, {  64,3440 }, {  65,3440 }, {  66,3440 }, {  67,3440 },
 {  68,3440 }, {  69,3440 }, {  70,3440 }, {  71,3440 }, {  72,3440 },

 {  73,3440 }, {  74,3440 }, {  75,3440 }, {  76,3440 }, {  77,3440 },
 {  78,3440 }, {  79,3440 }, {  80,3440 }, {  81,3440 }, {  82,3440 },
 {  83,3440 }, {  84,3440 }, {  85,3440 }, {  86,3440 }, {  87,3440 },
 {  88,3440 }, {  89,3440 }, {  90,3440 }, {  91,3440 }, {  92,3440 },
 {  93,3440 }, {  94,3440 }, {  95,3440 }, {  96,3440 }, {  97,3440 },
 {  98,3440 }, {  99,3440 }, { 100,3440 }, { 101,3440 }, { 102,3440 },
 { 103,3440 }, { 104,3440 }, { 105,3440 }, { 106,3440 }, { 107,3440 },
 { 108,3440 }, { 109,3440 }, { 110,3440 }, { 111,3440 }, { 112,3440 },
 { 113,3440 }, { 114,3440 }, { 115,3440 }, { 116,3440 }, { 117,3440 },
 { 118,3440 }, { 119,3440 }, { 120,3440 }, { 121,3440 }, { 122,3440 },

 { 123,3440 }, { 124,3440 }, { 125,3440 }, { 126,3440 }, { 127,3440 },
 { 128,3440 }, { 129,3440 }, { 130,3440 }, { 131,3440 }, { 132,3440 },
 { 133,3440 }, { 134,3440 }, { 135,3440 }, { 136,3440 }, { 137,3440 },
 { 138,3440 }, { 139,3440 }, { 140,3440 }, { 141,3440 }, { 142,3440 },
 { 143,3440 }, { 144,3440 }, { 145,3440 }, { 146,3440 }, { 147,3440 },
 { 148,3440 }, { 149,3440 }, { 150,3440 }, { 151,3440 }, { 152,3440 },
 { 153,3440 }, { 154,3440 }, { 155,3440 }, { 156,3440 }, { 157,3440 },
 { 158,3440 }, { 159,3440 }, { 160,3440 }, { 161,3440 }, { 162,3440 },
 { 163,3440 }, { 164,3440 }, { 165,3440 }, { 166,3440 }, { 167,3440 },
 { 168,3440 }, { 169,3440 }, { 170,3440 }, { 171,3440 }, { 172,3440 },

 { 173,3440 }, { 174,3440 }, { 175,3440 }, { 176,3440 }, { 177,3440 },
 { 178,3440 }, { 179,3440 }, { 180,3440 }, { 181,3440 }, { 182,3440 },
 { 183,3440 }, { 184,3440 }, { 185,3440 }, { 186,3440 }, { 187,3440 },
 { 188,3440 }, { 189,3440 }, { 190,3440 }, { 191,3440 }, { 192,3440 },
 { 193,3440 }, { 194,3440 }, { 195,3440 }, { 196,3440 }, { 197,3440 },
 { 198,3440 }, { 199,3440 }, { 200,3440 }, { 201,3440 }, { 202,3440 },
 { 203,3440 }, { 204,3440 }, { 205,3440 }, { 206,3440 }, { 207,3440 },
 { 208,3440 }, { 209,3440 }, { 210,3440 }, { 211,3440 }, { 212,3440 },
 { 213,3440 }, { 214,3440 }, { 215,3440 }, { 216,3440 }, { 217,3440 },
 { 218,3440 }, { 219,3440 }, { 220,3440 }, { 221,3440 }, { 222,3440 },

 { 223,3440 }, { 224,3440 }, { 225,3440 }, { 226,3440 }, { 227,3440 },
 { 228,3440 }, { 229,3440 }, { 230,3440 }, { 231,3440 }, { 232,3440 },
 { 233,3440 }, { 234,3440 }, { 235,3440 }, { 236,3440 }, { 237,3440 },
 { 238,3440 }, { 239,3440 }, { 240,3440 }, { 241,3440 }, { 242,3440 },
 { 243,3440 }, { 244,3440 }, { 245,3440 }, { 246,3440 }, { 247,3440 },
 { 248,3440 }, { 249,3440 }, { 250,3440 }, { 251,3440 }, { 252,3440 },
 { 253,3440 }, { 254,3440 }, { 255,3440 }, { 256,3440 }, {   0,   0 },
 {   0,16049 }, {   1,3487 }, {   2,3487 }, {   3,3487 }, {   4,3487 },
 {   5,3487 }, {   6,3487 }, {   7,3487 }, {   8,3487 }, {   9,3487 },
 {  10,3487 }, {  11,3487 }, {  12,3487 }, {  13,3487 }, {  14,3487 },

 {  15,3487 }, {  16,3487 }, {  17,3487 }, {  18,3487 }, {  19,3487 },
 {  20,3487 }, {  21,3487 }, {  22,3487 }, {  23,3487 }, {  24,3487 },
 {  25,3487 }, {  26,3487 }, {  27,3487 }, {  28,3487 }, {  29,3487 },
 {  30,3487 }, {  31,3487 }, {  32,3487 }, {  33,3745 }, {  34,3487 },
 {  35,3745 }, {  36,3487 }, {  37,3745 }, {  38,3745 }, {  39,3487 },
 {  40,3487 }, {  41,3487 }, {  42,2096 }, {  43,3745 }, {  44,3487 },
 {  45,3745 }, {  46,3487 }, {  47,2100 }, {  48,3487 }, {  49,3487 },
 {  50,3487 }, {  51,3487 }, {  52,3487 }, {  53,3487 }, {  54,3487 },
 {  55,3487 }, {  56,3487 }, {  57,3487 }, {  58,3487 }, {  59,3487 },
 {  60,3745 }, {  61,3745 }, {  62,3745 }, {  63,3745 }, {  64,3745 },

 {  65,3487 }, {  66,3487 }, {  67,3487 }, {  68,3487 }, {  69,3487 },
 {  70,3487 }, {  71,3487 }, {  72,3487 }, {  73,3487 }, {  74,3487 },
 {  75,3487 }, {  76,3487 }, {  77,3487 }, {  78,3487 }, {  79,3487 },
 {  80,3487 }, {  81,3487 }, {  82,3487 }, {  83,3487 }, {  84,3487 },
 {  85,3487 }, {  86,3487 }, {  87,3487 }, {  88,3487 }, {  89,3487 },
 {  90,3487 }, {  91,3487 }, {  92,3487 }, {  93,3487 }, {  94,3745 },
 {  95,3487 }, {  96,3745 }, {  97,3487 }, {  98,3487 }, {  99,3487 },
 { 100,3487 }, { 101,3487 }, { 102,3487 }, { 103,3487 }, { 104,3487 },
 { 105,3487 }, { 106,3487 }, { 107,3487 }, { 108,3487 }, { 109,3487 },
 { 110,3487 }, { 111,3487 }, { 112,3487 }, { 113,3487 }, { 114,3487 },

 { 115,3487 }, { 116,3487 }, { 117,3487 }, { 118,3487 }, { 119,3487 },
 { 120,3487 }, { 121,3487 }, { 122,3487 }, { 123,3487 }, { 124,3745 },
 { 125,3487 }, { 126,3745 }, { 127,3487 }, { 128,3487 }, { 129,3487 },
 { 130,3487 }, { 131,3487 }, { 132,3487 }, { 133,3487 }, { 134,3487 },
 { 135,3487 }, { 136,3487 }, { 137,3487 }, { 138,3487 }, { 139,3487 },
 { 140,3487 }, { 141,3487 }, { 142,3487 }, { 143,3487 }, { 144,3487 },
 { 145,3487 }, { 146,3487 }, { 147,3487 }, { 148,3487 }, { 149,3487 },
 { 150,3487 }, { 151,3487 }, { 152,3487 }, { 153,3487 }, { 154,3487 },
 { 155,3487 }, { 156,3487 }, { 157,3487 }, { 158,3487 }, { 159,3487 },
 { 160,3487 }, { 161,3487 }, { 162,3487 }, { 163,3487 }, { 164,3487 },

 { 165,3487 }, { 166,3487 }, { 167,3487 }, { 168,3487 }, { 169,3487 },
 { 170,3487 }, { 171,3487 }, { 172,3487 }, { 173,3487 }, { 174,3487 },
 { 175,3487 }, { 176,3487 }, { 177,3487 }, { 178,3487 }, { 179,3487 },
 { 180,3487 }, { 181,3487 }, { 182,3487 }, { 183,3487 }, { 184,3487 },
 { 185,3487 }, { 186,3487 }, { 187,3487 }, { 188,3487 }, { 189,3487 },
 { 190,3487 }, { 191,3487 }, { 192,3487 }, { 193,3487 }, { 194,3487 },
 { 195,3487 }, { 196,3487 }, { 197,3487 }, { 198,3487 }, { 199,3487 },
 { 200,3487 }, { 201,3487 }, { 202,3487 }, { 203,3487 }, { 204,3487 },
 { 205,3487 }, { 206,3487 }, { 207,3487 }, { 208,3487 }, { 209,3487 },
 { 210,3487 }, { 211,3487 }, { 212,3487 }, { 213,3487 }, { 214,3487 },

 { 215,3487 }, { 216,3487 }, { 217,3487 }, { 218,3487 }, { 219,3487 },
 { 220,3487 }, { 221,3487 }, { 222,3487 }, { 223,3487 }, { 224,3487 },
 { 225,3487 }, { 226,3487 }, { 227,3487 }, { 228,3487 }, { 229,3487 },
 { 230,3487 }, { 231,3487 }, { 232,3487 }, { 233,3487 }, { 234,3487 },
 { 235,3487 }, { 236,3487 }, { 237,3487 }, { 238,3487 }, { 239,3487 },
 { 240,3487 }, { 241,3487 }, { 242,3487 }, { 243,3487 }, { 244,3487 },
 { 245,3487 }, { 246,3487 }, { 247,3487 }, { 248,3487 }, { 249,3487 },
 { 250,3487 }, { 251,3487 }, { 252,3487 }, { 253,3487 }, { 254,3487 },
 { 255,3487 }, { 256,3487 }, {   0,   0 }, {   0,15791 }, {   1,3229 },
 {   2,3229 }, {   3,3229 }, {   4,3229 }, {   5,3229 }, {   6,3229 },

 {   7,3229 }, {   8,3229 }, {   9,3229 }, {  10,3229 }, {  11,3229 },
 {  12,3229 }, {  13,3229 }, {  14,3229 }, {  15,3229 }, {  16,3229 },
 {  17,3229 }, {  18,3229 }, {  19,3229 }, {  20,3229 }, {  21,3229 },
 {  22,3229 }, {  23,3229 }, {  24,3229 }, {  25,3229 }, {  26,3229 },
 {  27,3229 }, {  28,3229 }, {  29,3229 }, {  30,3229 }, {  31,3229 },
 {  32,3229 }, {  33,3487 }, {  34,3229 }, {  35,3487 }, {  36,3229 },
 {  37,3487 }, {  38,3487 }, {  39,3229 }, {  40,3229 }, {  41,3229 },
 {  42,1838 }, {  43,3487 }, {  44,3229 }, {  45,3487 }, {  46,3229 },
 {  47,1842 }, {  48,3229 }, {  49,3229 }, {  50,3229 }, {  51,3229 },
 {  52,3229 }, {  53,3229 }, {  54,3229 }, {  55,3229 }, {  56,3229 },

 {  57,3229 }, {  58,3229 }, {  59,3229 }, {  60,3487 }, {  61,3487 },
 {  62,3487 }, {  63,3487 }, {  64,3487 }, {  65,3229 }, {  66,3229 },
 {  67,3229 }, {  68,3229 }, {  69,3229 }, {  70,3229 }, {  71,3229 },
 {  72,3229 }, {  73,3229 }, {  74,3229 }, {  75,3229 }, {  76,3229 },
 {  77,3229 }, {  78,3229 }, {  79,3229 }, {  80,3229 }, {  81,3229 },
 {  82,3229 }, {  83,3229 }, {  84,3229 }, {  85,3229 }, {  86,3229 },
 {  87,3229 }, {  88,3229 }, {  89,3229 }, {  90,3229 }, {  91,3229 },
 {  92,3229 }, {  93,3229 }, {  94,3487 }, {  95,3229 }, {  96,3487 },
 {  97,3229 }, {  98,3229 }, {  99,3229 }, { 100,3229 }, { 101,3229 },
 { 102,3229 }, { 103,3229 }, { 104,3229 }, { 105,3229 }, { 106,3229 },

 { 107,3229 }, { 108,3229 }, { 109,3229 }, { 110,3229 }, { 111,3229 },
 { 112,3229 }, { 113,3229 }, { 114,3229 }, { 115,3229 }, { 116,3229 },
 { 117,3229 }, { 118,3229 }, { 119,3229 }, { 120,3229 }, { 121,3229 },
 { 122,3229 }, { 123,3229 }, { 124,3487 }, { 125,3229 }, { 126,3487 },
 { 127,3229 }, { 128,3229 }, { 129,3229 }, { 130,3229 }, { 131,3229 },
 { 132,3229 }, { 133,3229 }, { 134,3229 }, { 135,3229 }, { 136,3229 },
 { 137,3229 }, { 138,3229 }, { 139,3229 }, { 140,3229 }, { 141,3229 },
 { 142,3229 }, { 143,3229 }, { 144,3229 }, { 145,3229 }, { 146,3229 },
 { 147,3229 }, { 148,3229 }, { 149,3229 }, { 150,3229 }, { 151,3229 },
 { 152,3229 }, { 153,3229 }, { 154,3229 }, { 155,3229 }, { 156,3229 },

 { 157,3229 }, { 158,3229 }, { 159,3229 }, { 160,3229 }, { 161,3229 },
 { 162,3229 }, { 163,3229 }, { 164,3229 }, { 165,3229 }, { 166,3229 },
 { 167,3229 }, { 168,3229 }, { 169,3229 }, { 170,3229 }, { 171,3229 },
 { 172,3229 }, { 173,3229 }, { 174,3229 }, { 175,3229 }, { 176,3229 },
 { 177,3229 }, { 178,3229 }, { 179,3229 }, { 180,3229 }, { 181,3229 },
 { 182,3229 }, { 183,3229 }, { 184,3229 }, { 185,3229 }, { 186,3229 },
 { 187,3229 }, { 188,3229 }, { 189,3229 }, { 190,3229 }, { 191,3229 },
 { 192,3229 }, { 193,3229 }, { 194,3229 }, { 195,3229 }, { 196,3229 },
 { 197,3229 }, { 198,3229 }, { 199,3229 }, { 200,3229 }, { 201,3229 },
 { 202,3229 }, { 203,3229 }, { 204,3229 }, { 205,3229 }, { 206,3229 },

 { 207,3229 }, { 208,3229 }, { 209,3229 }, { 210,3229 }, { 211,3229 },
 { 212,3229 }, { 213,3229 }, { 214,3229 }, { 215,3229 }, { 216,3229 },
 { 217,3229 }, { 218,3229 }, { 219,3229 }, { 220,3229 }, { 221,3229 },
 { 222,3229 }, { 223,3229 }, { 224,3229 }, { 225,3229 }, { 226,3229 },
 { 227,3229 }, { 228,3229 }, { 229,3229 }, { 230,3229 }, { 231,3229 },
 { 232,3229 }, { 233,3229 }, { 234,3229 }, { 235,3229 }, { 236,3229 },
 { 237,3229 }, { 238,3229 }, { 239,3229 }, { 240,3229 }, { 241,3229 },
 { 242,3229 }, { 243,3229 }, { 244,3229 }, { 245,3229 }, { 246,3229 },
 { 247,3229 }, { 248,3229 }, { 249,3229 }, { 250,3229 }, { 251,3229 },
 { 252,3229 }, { 253,3229 }, { 254,3229 }, { 255,3229 }, { 256,3229 },

 {   0,   0 }, {   0,15533 }, {   1,3487 }, {   2,3487 }, {   3,3487 },
 {   4,3487 }, {   5,3487 }, {   6,3487 }, {   7,3487 }, {   8,3487 },
 {   9,3487 }, {  10,3487 }, {  11,3487 }, {  12,3487 }, {  13,3487 },
 {  14,3487 }, {  15,3487 }, {  16,3487 }, {  17,3487 }, {  18,3487 },
 {  19,3487 }, {  20,3487 }, {  21,3487 }, {  22,3487 }, {  23,3487 },
 {  24,3487 }, {  25,3487 }, {  26,3487 }, {  27,3487 }, {  28,3487 },
 {  29,3487 }, {  30,3487 }, {  31,3487 }, {  32,3487 }, {  33,3487 },
 {  34,1589 }, {  35,3487 }, {  36,3487 }, {  37,3487 }, {  38,3487 },
 {  39,3487 }, {  40,3487 }, {  41,3487 }, {  42,3487 }, {  43,3487 },
 {  44,3487 }, {  45,3487 }, {  46,3487 }, {  47,3487 }, {  48,3487 },

 {  49,3487 }, {  50,3487 }, {  51,3487 }, {  52,3487 }, {  53,3487 },
 {  54,3487 }, {  55,3487 }, {  56,3487 }, {  57,3487 }, {  58,3487 },
 {  59,3487 }, {  60,3487 }, {  61,3487 }, {  62,3487 }, {  63,3487 },
 {  64,3487 }, {  65,3487 }, {  66,3487 }, {  67,3487 }, {  68,3487 },
 {  69,3487 }, {  70,3487 }, {  71,3487 }, {  72,3487 }, {  73,3487 },
 {  74,3487 }, {  75,3487 }, {  76,3487 }, {  77,3487 }, {  78,3487 },
 {  79,3487 }, {  80,3487 }, {  81,3487 }, {  82,3487 }, {  83,3487 },
 {  84,3487 }, {  85,3487 }, {  86,3487 }, {  87,3487 }, {  88,3487 },
 {  89,3487 }, {  90,3487 }, {  91,3487 }, {  92,3487 }, {  93,3487 },
 {  94,3487 }, {  95,3487 }, {  96,3487 }, {  97,3487 }, {  98,3487 },

 {  99,3487 }, { 100,3487 }, { 101,3487 }, { 102,3487 }, { 103,3487 },
 { 104,3487 }, { 105,3487 }, { 106,3487 }, { 107,3487 }, { 108,3487 },
 { 109,3487 }, { 110,3487 }, { 111,3487 }, { 112,3487 }, { 113,3487 },
 { 114,3487 }, { 115,3487 }, { 116,3487 }, { 117,3487 }, { 118,3487 },
 { 119,3487 }, { 120,3487 }, { 121,3487 }, { 122,3487 }, { 123,3487 },
 { 124,3487 }, { 125,3487 }, { 126,3487 }, { 127,3487 }, { 128,3487 },
 { 129,3487 }, { 130,3487 }, { 131,3487 }, { 132,3487 }, { 133,3487 },
 { 134,3487 }, { 135,3487 }, { 136,3487 }, { 137,3487 }, { 138,3487 },
 { 139,3487 }, { 140,3487 }, { 141,3487 }, { 142,3487 }, { 143,3487 },
 { 144,3487 }, { 145,3487 }, { 146,3487 }, { 147,3487 }, { 148,3487 },

 { 149,3487 }, { 150,3487 }, { 151,3487 }, { 152,3487 }, { 153,3487 },
 { 154,3487 }, { 155,3487 }, { 156,3487 }, { 157,3487 }, { 158,3487 },
 { 159,3487 }, { 160,3487 }, { 161,3487 }, { 162,3487 }, { 163,3487 },
 { 164,3487 }, { 165,3487 }, { 166,3487 }, { 167,3487 }, { 168,3487 },
 { 169,3487 }, { 170,3487 }, { 171,3487 }, { 172,3487 }, { 173,3487 },
 { 174,3487 }, { 175,3487 }, { 176,3487 }, { 177,3487 }, { 178,3487 },
 { 179,3487 }, { 180,3487 }, { 181,3487 }, { 182,3487 }, { 183,3487 },
 { 184,3487 }, { 185,3487 }, { 186,3487 }, { 187,3487 }, { 188,3487 },
 { 189,3487 }, { 190,3487 }, { 191,3487 }, { 192,3487 }, { 193,3487 },
 { 194,3487 }, { 195,3487 }, { 196,3487 }, { 197,3487 }, { 198,3487 },

 { 199,3487 }, { 200,3487 }, { 201,3487 }, { 202,3487 }, { 203,3487 },
 { 204,3487 }, { 205,3487 }, { 206,3487 }, { 207,3487 }, { 208,3487 },
 { 209,3487 }, { 210,3487 }, { 211,3487 }, { 212,3487 }, { 213,3487 },
 { 214,3487 }, { 215,3487 }, { 216,3487 }, { 217,3487 }, { 218,3487 },
 { 219,3487 }, { 220,3487 }, { 221,3487 }, { 222,3487 }, { 223,3487 },
 { 224,3487 }, { 225,3487 }, { 226,3487 }, { 227,3487 }, { 228,3487 },
 { 229,3487 }, { 230,3487 }, { 231,3487 }, { 232,3487 }, { 233,3487 },
 { 234,3487 }, { 235,3487 }, { 236,3487 }, { 237,3487 }, { 238,3487 },
 { 239,3487 }, { 240,3487 }, { 241,3487 }, { 242,3487 }, { 243,3487 },
 { 244,3487 }, { 245,3487 }, { 246,3487 }, { 247,3487 }, { 248,3487 },

 { 249,3487 }, { 250,3487 }, { 251,3487 }, { 252,3487 }, { 253,3487 },
 { 254,3487 }, { 255,3487 }, { 256,3487 }, {   0,   0 }, {   0,15275 },
 {   1,3229 }, {   2,3229 }, {   3,3229 }, {   4,3229 }, {   5,3229 },
 {   6,3229 }, {   7,3229 }, {   8,3229 }, {   9,3229 }, {  10,3229 },
 {  11,3229 }, {  12,3229 }, {  13,3229 }, {  14,3229 }, {  15,3229 },
 {  16,3229 }, {  17,3229 }, {  18,3229 }, {  19,3229 }, {  20,3229 },
 {  21,3229 }, {  22,3229 }, {  23,3229 }, {  24,3229 }, {  25,3229 },
 {  26,3229 }, {  27,3229 }, {  28,3229 }, {  29,3229 }, {  30,3229 },
 {  31,3229 }, {  32,3229 }, {  33,3229 }, {  34,1331 }, {  35,3229 },
 {  36,3229 }, {  37,3229 }, {  38,3229 }, {  39,3229 }, {  40,3229 },

 {  41,3229 }, {  42,3229 }, {  43,3229 }, {  44,3229 }, {  45,3229 },
 {  46,3229 }, {  47,3229 }, {  48,3229 }, {  49,3229 }, {  50,3229 },
 {  51,3229 }, {  52,3229 }, {  53,3229 }, {  54,3229 }, {  55,3229 },
 {  56,3229 }, {  57,3229 }, {  58,3229 }, {  59,3229 }, {  60,3229 },
 {  61,3229 }, {  62,3229 }, {  63,3229 }, {  64,3229 }, {  65,3229 },
 {  66,3229 }, {  67,3229 }, {  68,3229 }, {  69,3229 }, {  70,3229 },
 {  71,3229 }, {  72,3229 }, {  73,3229 }, {  74,3229 }, {  75,3229 },
 {  76,3229 }, {  77,3229 }, {  78,3229 }, {  79,3229 }, {  80,3229 },
 {  81,3229 }, {  82,3229 }, {  83,3229 }, {  84,3229 }, {  85,3229 },
 {  86,3229 }, {  87,3229 }, {  88,3229 }, {  89,3229 }, {  90,3229 },

 {  91,3229 }, {  92,3229 }, {  93,3229 }, {  94,3229 }, {  95,3229 },
 {  96,3229 }, {  97,3229 }, {  98,3229 }, {  99,3229 }, { 100,3229 },
 { 101,3229 }, { 102,3229 }, { 103,3229 }, { 104,3229 }, { 105,3229 },
 { 106,3229 }, { 107,3229 }, { 108,3229 }, { 109,3229 }, { 110,3229 },
 { 111,3229 }, { 112,3229 }, { 113,3229 }, { 114,3229 }, { 115,3229 },
 { 116,3229 }, { 117,3229 }, { 118,3229 }, { 119,3229 }, { 120,3229 },
 { 121,3229 }, { 122,3229 }, { 123,3229 }, { 124,3229 }, { 125,3229 },
 { 126,3229 }, { 127,3229 }, { 128,3229 }, { 129,3229 }, { 130,3229 },
 { 131,3229 }, { 132,3229 }, { 133,3229 }, { 134,3229 }, { 135,3229 },
 { 136,3229 }, { 137,3229 }, { 138,3229 }, { 139,3229 }, { 140,3229 },

 { 141,3229 }, { 142,3229 }, { 143,3229 }, { 144,3229 }, { 145,3229 },
 { 146,3229 }, { 147,3229 }, { 148,3229 }, { 149,3229 }, { 150,3229 },
 { 151,3229 }, { 152,3229 }, { 153,3229 }, { 154,3229 }, { 155,3229 },
 { 156,3229 }, { 157,3229 }, { 158,3229 }, { 159,3229 }, { 160,3229 },
 { 161,3229 }, { 162,3229 }, { 163,3229 }, { 164,3229 }, { 165,3229 },
 { 166,3229 }, { 167,3229 }, { 168,3229 }, { 169,3229 }, { 170,3229 },
 { 171,3229 }, { 172,3229 }, { 173,3229 }, { 174,3229 }, { 175,3229 },
 { 176,3229 }, { 177,3229 }, { 178,3229 }, { 179,3229 }, { 180,3229 },
 { 181,3229 }, { 182,3229 }, { 183,3229 }, { 184,3229 }, { 185,3229 },
 { 186,3229 }, { 187,3229 }, { 188,3229 }, { 189,3229 }, { 190,3229 },

 { 191,3229 }, { 192,3229 }, { 193,3229 }, { 194,3229 }, { 195,3229 },
 { 196,3229 }, { 197,3229 }, { 198,3229 }, { 199,3229 }, { 200,3229 },
 { 201,3229 }, { 202,3229 }, { 203,3229 }, { 204,3229 }, { 205,3229 },
 { 206,3229 }, { 207,3229 }, { 208,3229 }, { 209,3229 }, { 210,3229 },
 { 211,3229 }, { 212,3229 }, { 213,3229 }, { 214,3229 }, { 215,3229 },
 { 216,3229 }, { 217,3229 }, { 218,3229 }, { 219,3229 }, { 220,3229 },
 { 221,3229 }, { 222,3229 }, { 223,3229 }, { 224,3229 }, { 225,3229 },
 { 226,3229 }, { 227,3229 }, { 228,3229 }, { 229,3229 }, { 230,3229 },
 { 231,3229 }, { 232,3229 }, { 233,3229 }, { 234,3229 }, { 235,3229 },
 { 236,3229 }, { 237,3229 }, { 238,3229 }, { 239,3229 }, { 240,3229 },

 { 241,3229 }, { 242,3229 }, { 243,3229 }, { 244,3229 }, { 245,3229 },
 { 246,3229 }, { 247,3229 }, { 248,3229 }, { 249,3229 }, { 250,3229 },
 { 251,3229 }, { 252,3229 }, { 253,3229 }, { 254,3229 }, { 255,3229 },
 { 256,3229 }, {   0,  11 }, {   0,15017 }, {   1,3229 }, {   2,3229 },
 {   3,3229 }, {   4,3229 }, {   5,3229 }, {   6,3229 }, {   7,3229 },
 {   8,3229 }, {   9,3229 }, {  10,3229 }, {  11,3229 }, {  12,3229 },
 {  13,3229 }, {  14,3229 }, {  15,3229 }, {  16,3229 }, {  17,3229 },
 {  18,3229 }, {  19,3229 }, {  20,3229 }, {  21,3229 }, {  22,3229 },
 {  23,3229 }, {  24,3229 }, {  25,3229 }, {  26,3229 }, {  27,3229 },
 {  28,3229 }, {  29,3229 }, {  30,3229 }, {  31,3229 }, {  32,3229 },

 {  33,3229 }, {  34,3229 }, {  35,3229 }, {  36,3229 }, {  37,3229 },
 {  38,3229 }, {  39,3487 }, {  40,3229 }, {  41,3229 }, {  42,3229 },
 {  43,3229 }, {  44,3229 }, {  45,3229 }, {  46,3229 }, {  47,3229 },
 {  48,3229 }, {  49,3229 }, {  50,3229 }, {  51,3229 }, {  52,3229 },
 {  53,3229 }, {  54,3229 }, {  55,3229 }, {  56,3229 }, {  57,3229 },
 {  58,3229 }, {  59,3229 }, {  60,3229 }, {  61,3229 }, {  62,3229 },
 {  63,3229 }, {  64,3229 }, {  65,3229 }, {  66,3229 }, {  67,3229 },
 {  68,3229 }, {  69,3229 }, {  70,3229 }, {  71,3229 }, {  72,3229 },
 {  73,3229 }, {  74,3229 }, {  75,3229 }, {  76,3229 }, {  77,3229 },
 {  78,3229 }, {  79,3229 }, {  80,3229 }, {  81,3229 }, {  82,3229 },

 {  83,3229 }, {  84,3229 }, {  85,3229 }, {  86,3229 }, {  87,3229 },
 {  88,3229 }, {  89,3229 }, {  90,3229 }, {  91,3229 }, {  92,3229 },
 {  93,3229 }, {  94,3229 }, {  95,3229 }, {  96,3229 }, {  97,3229 },
 {  98,3229 }, {  99,3229 }, { 100,3229 }, { 101,3229 }, { 102,3229 },
 { 103,3229 }, { 104,3229 }, { 105,3229 }, { 106,3229 }, { 107,3229 },
 { 108,3229 }, { 109,3229 }, { 110,3229 }, { 111,3229 }, { 112,3229 },
 { 113,3229 }, { 114,3229 }, { 115,3229 }, { 116,3229 }, { 117,3229 },
 { 118,3229 }, { 119,3229 }, { 120,3229 }, { 121,3229 }, { 122,3229 },
 { 123,3229 }, { 124,3229 }, { 125,3229 }, { 126,3229 }, { 127,3229 },
 { 128,3229 }, { 129,3229 }, { 130,3229 }, { 131,3229 }, { 132,3229 },

 { 133,3229 }, { 134,3229 }, { 135,3229 }, { 136,3229 }, { 137,3229 },
 { 138,3229 }, { 139,3229 }, { 140,3229 }, { 141,3229 }, { 142,3229 },
 { 143,3229 }, { 144,3229 }, { 145,3229 }, { 146,3229 }, { 147,3229 },
 { 148,3229 }, { 149,3229 }, { 150,3229 }, { 151,3229 }, { 152,3229 },
 { 153,3229 }, { 154,3229 }, { 155,3229 }, { 156,3229 }, { 157,3229 },
 { 158,3229 }, { 159,3229 }, { 160,3229 }, { 161,3229 }, { 162,3229 },
 { 163,3229 }, { 164,3229 }, { 165,3229 }, { 166,3229 }, { 167,3229 },
 { 168,3229 }, { 169,3229 }, { 170,3229 }, { 171,3229 }, { 172,3229 },
 { 173,3229 }, { 174,3229 }, { 175,3229 }, { 176,3229 }, { 177,3229 },
 { 178,3229 }, { 179,3229 }, { 180,3229 }, { 181,3229 }, { 182,3229 },

 { 183,3229 }, { 184,3229 }, { 185,3229 }, { 186,3229 }, { 187,3229 },
 { 188,3229 }, { 189,3229 }, { 190,3229 }, { 191,3229 }, { 192,3229 },
 { 193,3229 }, { 194,3229 }, { 195,3229 }, { 196,3229 }, { 197,3229 },
 { 198,3229 }, { 199,3229 }, { 200,3229 }, { 201,3229 }, { 202,3229 },
 { 203,3229 }, { 204,3229 }, { 205,3229 }, { 206,3229 }, { 207,3229 },
 { 208,3229 }, { 209,3229 }, { 210,3229 }, { 211,3229 }, { 212,3229 },
 { 213,3229 }, { 214,3229 }, { 215,3229 }, { 216,3229 }, { 217,3229 },
 { 218,3229 }, { 219,3229 }, { 220,3229 }, { 221,3229 }, { 222,3229 },
 { 223,3229 }, { 224,3229 }, { 225,3229 }, { 226,3229 }, { 227,3229 },
 { 228,3229 }, { 229,3229 }, { 230,3229 }, { 231,3229 }, { 232,3229 },

 { 233,3229 }, { 234,3229 }, { 235,3229 }, { 236,3229 }, { 237,3229 },
 { 238,3229 }, { 239,3229 }, { 240,3229 }, { 241,3229 }, { 242,3229 },
 { 243,3229 }, { 244,3229 }, { 245,3229 }, { 246,3229 }, { 247,3229 },
 { 248,3229 }, { 249,3229 }, { 250,3229 }, { 251,3229 }, { 252,3229 },
 { 253,3229 }, { 254,3229 }, { 255,3229 }, { 256,3229 }, {   0,  11 },
 {   0,14759 }, {   1,2971 }, {   2,2971 }, {   3,2971 }, {   4,2971 },
 {   5,2971 }, {   6,2971 }, {   7,2971 }, {   8,2971 }, {   9,2971 },
 {  10,2971 }, {  11,2971 }, {  12,2971 }, {  13,2971 }, {  14,2971 },
 {  15,2971 }, {  16,2971 }, {  17,2971 }, {  18,2971 }, {  19,2971 },
 {  20,2971 }, {  21,2971 }, {  22,2971 }, {  23,2971 }, {  24,2971 },

 {  25,2971 }, {  26,2971 }, {  27,2971 }, {  28,2971 }, {  29,2971 },
 {  30,2971 }, {  31,2971 }, {  32,2971 }, {  33,2971 }, {  34,2971 },
 {  35,2971 }, {  36,2971 }, {  37,2971 }, {  38,2971 }, {  39,3229 },
 {  40,2971 }, {  41,2971 }, {  42,2971 }, {  43,2971 }, {  44,2971 },
 {  45,2971 }, {  46,2971 }, {  47,2971 }, {  48,2971 }, {  49,2971 },
 {  50,2971 }, {  51,2971 }, {  52,2971 }, {  53,2971 }, {  54,2971 },
 {  55,2971 }, {  56,2971 }, {  57,2971 }, {  58,2971 }, {  59,2971 },
 {  60,2971 }, {  61,2971 }, {  62,2971 }, {  63,2971 }, {  64,2971 },
 {  65,2971 }, {  66,2971 }, {  67,2971 }, {  68,2971 }, {  69,2971 },
 {  70,2971 }, {  71,2971 }, {  72,2971 }, {  73,2971 }, {  74,2971 },

 {  75,2971 }, {  76,2971 }, {  77,2971 }, {  78,2971 }, {  79,2971 },
 {  80,2971 }, {  81,2971 }, {  82,2971 }, {  83,2971 }, {  84,2971 },
 {  85,2971 }, {  86,2971 }, {  87,2971 }, {  88,2971 }, {  89,2971 },
 {  90,2971 }, {  91,2971 }, {  92,2971 }, {  93,2971 }, {  94,2971 },
 {  95,2971 }, {  96,2971 }, {  97,2971 }, {  98,2971 }, {  99,2971 },
 { 100,2971 }, { 101,2971 }, { 102,2971 }, { 103,2971 }, { 104,2971 },
 { 105,2971 }, { 106,2971 }, { 107,2971 }, { 108,2971 }, { 109,2971 },
 { 110,2971 }, { 111,2971 }, { 112,2971 }, { 113,2971 }, { 114,2971 },
 { 115,2971 }, { 116,2971 }, { 117,2971 }, { 118,2971 }, { 119,2971 },
 { 120,2971 }, { 121,2971 }, { 122,2971 }, { 123,2971 }, { 124,2971 },

 { 125,2971 }, { 126,2971 }, { 127,2971 }, { 128,2971 }, { 129,2971 },
 { 130,2971 }, { 131,2971 }, { 132,2971 }, { 133,2971 }, { 134,2971 },
 { 135,2971 }, { 136,2971 }, { 137,2971 }, { 138,2971 }, { 139,2971 },
 { 140,2971 }, { 141,2971 }, { 142,2971 }, { 143,2971 }, { 144,2971 },
 { 145,2971 }, { 146,2971 }, { 147,2971 }, { 148,2971 }, { 149,2971 },
 { 150,2971 }, { 151,2971 }, { 152,2971 }, { 153,2971 }, { 154,2971 },
 { 155,2971 }, { 156,2971 }, { 157,2971 }, { 158,2971 }, { 159,2971 },
 { 160,2971 }, { 161,2971 }, { 162,2971 }, { 163,2971 }, { 164,2971 },
 { 165,2971 }, { 166,2971 }, { 167,2971 }, { 168,2971 }, { 169,2971 },
 { 170,2971 }, { 171,2971 }, { 172,2971 }, { 173,2971 }, { 174,2971 },

 { 175,2971 }, { 176,2971 }, { 177,2971 }, { 178,2971 }, { 179,2971 },
 { 180,2971 }, { 181,2971 }, { 182,2971 }, { 183,2971 }, { 184,2971 },
 { 185,2971 }, { 186,2971 }, { 187,2971 }, { 188,2971 }, { 189,2971 },
 { 190,2971 }, { 191,2971 }, { 192,2971 }, { 193,2971 }, { 194,2971 },
 { 195,2971 }, { 196,2971 }, { 197,2971 }, { 198,2971 }, { 199,2971 },
 { 200,2971 }, { 201,2971 }, { 202,2971 }, { 203,2971 }, { 204,2971 },
 { 205,2971 }, { 206,2971 }, { 207,2971 }, { 208,2971 }, { 209,2971 },
 { 210,2971 }, { 211,2971 }, { 212,2971 }, { 213,2971 }, { 214,2971 },
 { 215,2971 }, { 216,2971 }, { 217,2971 }, { 218,2971 }, { 219,2971 },
 { 220,2971 }, { 221,2971 }, { 222,2971 }, { 223,2971 }, { 224,2971 },

 { 225,2971 }, { 226,2971 }, { 227,2971 }, { 228,2971 }, { 229,2971 },
 { 230,2971 }, { 231,2971 }, { 232,2971 }, { 233,2971 }, { 234,2971 },
 { 235,2971 }, { 236,2971 }, { 237,2971 }, { 238,2971 }, { 239,2971 },
 { 240,2971 }, { 241,2971 }, { 242,2971 }, { 243,2971 }, { 244,2971 },
 { 245,2971 }, { 246,2971 }, { 247,2971 }, { 248,2971 }, { 249,2971 },
 { 250,2971 }, { 251,2971 }, { 252,2971 }, { 253,2971 }, { 254,2971 },
 { 255,2971 }, { 256,2971 }, {   0,   0 }, {   0,14501 }, {   1,3018 },
 {   2,3018 }, {   3,3018 }, {   4,3018 }, {   5,3018 }, {   6,3018 },
 {   7,3018 }, {   8,3018 }, {   9,3018 }, {  10,3018 }, {  11,3018 },
 {  12,3018 }, {  13,3018 }, {  14,3018 }, {  15,3018 }, {  16,3018 },

 {  17,3018 }, {  18,3018 }, {  19,3018 }, {  20,3018 }, {  21,3018 },
 {  22,3018 }, {  23,3018 }, {  24,3018 }, {  25,3018 }, {  26,3018 },
 {  27,3018 }, {  28,3018 }, {  29,3018 }, {  30,3018 }, {  31,3018 },
 {  32,3018 }, {  33,3018 }, {  34,3018 }, {  35,3018 }, {  36,3018 },
 {  37,3018 }, {  38,3018 }, {  39,3276 }, {  40,3018 }, {  41,3018 },
 {  42,3018 }, {  43,3018 }, {  44,3018 }, {  45,3018 }, {  46,3018 },
 {  47,3018 }, {  48,3018 }, {  49,3018 }, {  50,3018 }, {  51,3018 },
 {  52,3018 }, {  53,3018 }, {  54,3018 }, {  55,3018 }, {  56,3018 },
 {  57,3018 }, {  58,3018 }, {  59,3018 }, {  60,3018 }, {  61,3018 },
 {  62,3018 }, {  63,3018 }, {  64,3018 }, {  65,3018 }, {  66,3018 },

 {  67,3018 }, {  68,3018 }, {  69,3018 }, {  70,3018 }, {  71,3018 },
 {  72,3018 }, {  73,3018 }, {  74,3018 }, {  75,3018 }, {  76,3018 },
 {  77,3018 }, {  78,3018 }, {  79,3018 }, {  80,3018 }, {  81,3018 },
 {  82,3018 }, {  83,3018 }, {  84,3018 }, {  85,3018 }, {  86,3018 },
 {  87,3018 }, {  88,3018 }, {  89,3018 }, {  90,3018 }, {  91,3018 },
 {  92,3018 }, {  93,3018 }, {  94,3018 }, {  95,3018 }, {  96,3018 },
 {  97,3018 }, {  98,3018 }, {  99,3018 }, { 100,3018 }, { 101,3018 },
 { 102,3018 }, { 103,3018 }, { 104,3018 }, { 105,3018 }, { 106,3018 },
 { 107,3018 }, { 108,3018 }, { 109,3018 }, { 110,3018 }, { 111,3018 },
 { 112,3018 }, { 113,3018 }, { 114,3018 }, { 115,3018 }, { 116,3018 },

 { 117,3018 }, { 118,3018 }, { 119,3018 }, { 120,3018 }, { 121,3018 },
 { 122,3018 }, { 123,3018 }, { 124,3018 }, { 125,3018 }, { 126,3018 },
 { 127,3018 }, { 128,3018 }, { 129,3018 }, { 130,3018 }, { 131,3018 },
 { 132,3018 }, { 133,3018 }, { 134,3018 }, { 135,3018 }, { 136,3018 },
 { 137,3018 }, { 138,3018 }, { 139,3018 }, { 140,3018 }, { 141,3018 },
 { 142,3018 }, { 143,3018 }, { 144,3018 }, { 145,3018 }, { 146,3018 },
 { 147,3018 }, { 148,3018 }, { 149,3018 }, { 150,3018 }, { 151,3018 },
 { 152,3018 }, { 153,3018 }, { 154,3018 }, { 155,3018 }, { 156,3018 },
 { 157,3018 }, { 158,3018 }, { 159,3018 }, { 160,3018 }, { 161,3018 },
 { 162,3018 }, { 163,3018 }, { 164,3018 }, { 165,3018 }, { 166,3018 },

 { 167,3018 }, { 168,3018 }, { 169,3018 }, { 170,3018 }, { 171,3018 },
 { 172,3018 }, { 173,3018 }, { 174,3018 }, { 175,3018 }, { 176,3018 },
 { 177,3018 }, { 178,3018 }, { 179,3018 }, { 180,3018 }, { 181,3018 },
 { 182,3018 }, { 183,3018 }, { 184,3018 }, { 185,3018 }, { 186,3018 },
 { 187,3018 }, { 188,3018 }, { 189,3018 }, { 190,3018 }, { 191,3018 },
 { 192,3018 }, { 193,3018 }, { 194,3018 }, { 195,3018 }, { 196,3018 },
 { 197,3018 }, { 198,3018 }, { 199,3018 }, { 200,3018 }, { 201,3018 },
 { 202,3018 }, { 203,3018 }, { 204,3018 }, { 205,3018 }, { 206,3018 },
 { 207,3018 }, { 208,3018 }, { 209,3018 }, { 210,3018 }, { 211,3018 },
 { 212,3018 }, { 213,3018 }, { 214,3018 }, { 215,3018 }, { 216,3018 },

 { 217,3018 }, { 218,3018 }, { 219,3018 }, { 220,3018 }, { 221,3018 },
 { 222,3018 }, { 223,3018 }, { 224,3018 }, { 225,3018 }, { 226,3018 },
 { 227,3018 }, { 228,3018 }, { 229,3018 }, { 230,3018 }, { 231,3018 },
 { 232,3018 }, { 233,3018 }, { 234,3018 }, { 235,3018 }, { 236,3018 },
 { 237,3018 }, { 238,3018 }, { 239,3018 }, { 240,3018 }, { 241,3018 },
 { 242,3018 }, { 243,3018 }, { 244,3018 }, { 245,3018 }, { 246,3018 },
 { 247,3018 }, { 248,3018 }, { 249,3018 }, { 250,3018 }, { 251,3018 },
 { 252,3018 }, { 253,3018 }, { 254,3018 }, { 255,3018 }, { 256,3018 },
 {   0,   0 }, {   0,14243 }, {   1,2760 }, {   2,2760 }, {   3,2760 },
 {   4,2760 }, {   5,2760 }, {   6,2760 }, {   7,2760 }, {   8,2760 },

 {   9,2760 }, {  10,2760 }, {  11,2760 }, {  12,2760 }, {  13,2760 },
 {  14,2760 }, {  15,2760 }, {  16,2760 }, {  17,2760 }, {  18,2760 },
 {  19,2760 }, {  20,2760 }, {  21,2760 }, {  22,2760 }, {  23,2760 },
 {  24,2760 }, {  25,2760 }, {  26,2760 }, {  27,2760 }, {  28,2760 },
 {  29,2760 }, {  30,2760 }, {  31,2760 }, {  32,2760 }, {  33,2760 },
 {  34,2760 }, {  35,2760 }, {  36,2760 }, {  37,2760 }, {  38,2760 },
 {  39,3018 }, {  40,2760 }, {  41,2760 }, {  42,2760 }, {  43,2760 },
 {  44,2760 }, {  45,2760 }, {  46,2760 }, {  47,2760 }, {  48,2760 },
 {  49,2760 }, {  50,2760 }, {  51,2760 }, {  52,2760 }, {  53,2760 },
 {  54,2760 }, {  55,2760 }, {  56,2760 }, {  57,2760 }, {  58,2760 },

 {  59,2760 }, {  60,2760 }, {  61,2760 }, {  62,2760 }, {  63,2760 },
 {  64,2760 }, {  65,2760 }, {  66,2760 }, {  67,2760 }, {  68,2760 },
 {  69,2760 }, {  70,2760 }, {  71,2760 }, {  72,2760 }, {  73,2760 },
 {  74,2760 }, {  75,2760 }, {  76,2760 }, {  77,2760 }, {  78,2760 },
 {  79,2760 }, {  80,2760 }, {  81,2760 }, {  82,2760 }, {  83,2760 },
 {  84,2760 }, {  85,2760 }, {  86,2760 }, {  87,2760 }, {  88,2760 },
 {  89,2760 }, {  90,2760 }, {  91,2760 }, {  92,2760 }, {  93,2760 },
 {  94,2760 }, {  95,2760 }, {  96,2760 }, {  97,2760 }, {  98,2760 },
 {  99,2760 }, { 100,2760 }, { 101,2760 }, { 102,2760 }, { 103,2760 },
 { 104,2760 }, { 105,2760 }, { 106,2760 }, { 107,2760 }, { 108,2760 },

 { 109,2760 }, { 110,2760 }, { 111,2760 }, { 112,2760 }, { 113,2760 },
 { 114,2760 }, { 115,2760 }, { 116,2760 }, { 117,2760 }, { 118,2760 },
 { 119,2760 }, { 120,2760 }, { 121,2760 }, { 122,2760 }, { 123,2760 },
 { 124,2760 }, { 125,2760 }, { 126,2760 }, { 127,2760 }, { 128,2760 },
 { 129,2760 }, { 130,2760 }, { 131,2760 }, { 132,2760 }, { 133,2760 },
 { 134,2760 }, { 135,2760 }, { 136,2760 }, { 137,2760 }, { 138,2760 },
 { 139,2760 }, { 140,2760 }, { 141,2760 }, { 142,2760 }, { 143,2760 },
 { 144,2760 }, { 145,2760 }, { 146,2760 }, { 147,2760 }, { 148,2760 },
 { 149,2760 }, { 150,2760 }, { 151,2760 }, { 152,2760 }, { 153,2760 },
 { 154,2760 }, { 155,2760 }, { 156,2760 }, { 157,2760 }, { 158,2760 },

 { 159,2760 }, { 160,2760 }, { 161,2760 }, { 162,2760 }, { 163,2760 },
 { 164,2760 }, { 165,2760 }, { 166,2760 }, { 167,2760 }, { 168,2760 },
 { 169,2760 }, { 170,2760 }, { 171,2760 }, { 172,2760 }, { 173,2760 },
 { 174,2760 }, { 175,2760 }, { 176,2760 }, { 177,2760 }, { 178,2760 },
 { 179,2760 }, { 180,2760 }, { 181,2760 }, { 182,2760 }, { 183,2760 },
 { 184,2760 }, { 185,2760 }, { 186,2760 }, { 187,2760 }, { 188,2760 },
 { 189,2760 }, { 190,2760 }, { 191,2760 }, { 192,2760 }, { 193,2760 },
 { 194,2760 }, { 195,2760 }, { 196,2760 }, { 197,2760 }, { 198,2760 },
 { 199,2760 }, { 200,2760 }, { 201,2760 }, { 202,2760 }, { 203,2760 },
 { 204,2760 }, { 205,2760 }, { 206,2760 }, { 207,2760 }, { 208,2760 },

 { 209,2760 }, { 210,2760 }, { 211,2760 }, { 212,2760 }, { 213,2760 },
 { 214,2760 }, { 215,2760 }, { 216,2760 }, { 217,2760 }, { 218,2760 },
 { 219,2760 }, { 220,2760 }, { 221,2760 }, { 222,2760 }, { 223,2760 },
 { 224,2760 }, { 225,2760 }, { 226,2760 }, { 227,2760 }, { 228,2760 },
 { 229,2760 }, { 230,2760 }, { 231,2760 }, { 232,2760 }, { 233,2760 },
 { 234,2760 }, { 235,2760 }, { 236,2760 }, { 237,2760 }, { 238,2760 },
 { 239,2760 }, { 240,2760 }, { 241,2760 }, { 242,2760 }, { 243,2760 },
 { 244,2760 }, { 245,2760 }, { 246,2760 }, { 247,2760 }, { 248,2760 },
 { 249,2760 }, { 250,2760 }, { 251,2760 }, { 252,2760 }, { 253,2760 },
 { 254,2760 }, { 255,2760 }, { 256,2760 }, {   0,  42 }, {   0,13985 },

 {   0,   1 }, {   0,13983 }, {   0,  24 }, {   0,13981 }, {   0,   0 },
 {   0,   1 }, {   0,13978 }, {   0,  33 }, {   0,13976 }, {   0,   0 },
 {   9,2763 }, {  10,2763 }, {   0,   0 }, {  12,2763 }, {  13,2763 },
 {   9,2758 }, {  10,2758 }, {   0,   0 }, {  12,2758 }, {  13,2758 },
 {   0,  18 }, {   0,13963 }, {   0,  32 }, {   0,13961 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   6 }, {   0,13953 }, {   0,   0 }, {  32,2763 }, {   0,   6 },
 {   0,13949 }, {   0,   0 }, {   0,   0 }, {  32,2758 }, {   0,  25 },
 {   0,13944 }, {  33,2771 }, {   0,   0 }, {  35,2771 }, {   0,   0 },
 {  37,2771 }, {  38,2771 }, {   0,  33 }, {   0,13936 }, {   0,   0 },

 {  42,2771 }, {  43,2771 }, {   0,   0 }, {  45,2771 }, {   0,   0 },
 {  47,2771 }, {   0,  28 }, {   0,13927 }, {   0,   8 }, {   0,13925 },
 {   0,  15 }, {   0,13923 }, {   0,   0 }, {   0,   0 }, {   0,  42 },
 {   0,13919 }, {   0,   0 }, {   0,   0 }, {  60,2771 }, {  61,2782 },
 {  62,2771 }, {  63,2771 }, {  64,2771 }, {  42,  75 }, {  34,  87 },
 {   0,   0 }, {   0,   0 }, {  42,4226 }, {  47,  93 }, {   0,  10 },
 {   0,13904 }, {  33,2731 }, {   0,   0 }, {  35,2731 }, {   0,   0 },
 {  37,2731 }, {  38,2731 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  42,2731 }, {  43,2731 }, {   0,   0 }, {  45,2731 }, {   0,   0 },
 {  47,2731 }, {   0,   0 }, {   0,  32 }, {   0,13886 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {  94,2771 }, {   0,   0 }, {  96,2771 },
 {   0,   7 }, {   0,13878 }, {   0,   0 }, {  60,2731 }, {  61,2731 },
 {  62,2731 }, {  63,2731 }, {  64,2731 }, {  48,2742 }, {  49,2742 },
 {  50,2742 }, {  51,2742 }, {  52,2742 }, {  53,2742 }, {  54,2742 },
 {  55,2742 }, {  56,2742 }, {  57,2742 }, {   0,   4 }, {   0,13860 },
 {  45,5848 }, {   0,  26 }, {   0,13857 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  33,2681 }, { 124,2771 }, {  35,2681 }, { 126,2771 },
 {  37,2681 }, {  38,2681 }, {   0,  32 }, {   0,13846 }, {   0,   0 },
 {  42,2681 }, {  43,2681 }, {  94,2731 }, {  45,2681 }, {  96,2731 },
 {  47,2681 }, {   0,   0 }, {   0,   0 }, {  42,   0 }, {   0,  17 },

 {   0,13834 }, {   0,  21 }, {   0,13832 }, {  47,  18 }, {   0,   0 },
 {   0,   0 }, {   0,  32 }, {   0,13827 }, {  60,2681 }, {  61,2681 },
 {  62,2681 }, {  63,2681 }, {  64,2681 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,  20 },
 {   0,13814 }, {  33,2641 }, { 124,2731 }, {  35,2641 }, { 126,2731 },
 {  37,2641 }, {  38,2641 }, {   0,  37 }, {   0,13806 }, {   0,   0 },
 {  42,2641 }, {  43,2641 }, {   0,   0 }, {  45,2780 }, {   0,   0 },
 {  47,2641 }, {   0,   0 }, {   0,  32 }, {   0,13796 }, {   0,  35 },
 {   0,13794 }, {   0,   0 }, {  94,2681 }, {   0,   0 }, {  96,2681 },
 {  45,6164 }, {   0,  14 }, {   0,13787 }, {  60,2641 }, {  61,2641 },

 {  62,2641 }, {  63,2641 }, {  64,2641 }, {  46,-100 }, {   0,   0 },
 {  48,3019 }, {  49,3019 }, {  50,3019 }, {  51,3019 }, {  52,3019 },
 {  53,3019 }, {  54,3019 }, {  55,3019 }, {  56,3019 }, {  57,3019 },
 {  45,6449 }, {   0,   0 }, {   0,  10 }, {   0,13766 }, {   0,  13 },
 {   0,13764 }, {  33,2591 }, { 124,2681 }, {  35,2591 }, { 126,2681 },
 {  37,2591 }, {  38,2591 }, {   0,  17 }, {   0,13756 }, {   0,   0 },
 {  42,3013 }, {  43,2591 }, {  94,2641 }, {  45,2591 }, {  96,2641 },
 {  47,2591 }, {  46,3013 }, {   0,   0 }, {  48,3077 }, {  49,3077 },
 {  50,3077 }, {  51,3077 }, {  52,3077 }, {  53,3077 }, {  54,3077 },
 {  55,3077 }, {  56,3077 }, {  57,3077 }, {  60,2591 }, {  61,2591 },

 {  62,2591 }, {  63,2591 }, {  64,2591 }, {   0,   0 }, {   0,  32 },
 {   0,13729 }, {   0,  23 }, {   0,13727 }, {   0,   0 }, {  69,3099 },
 {   0,  20 }, {   0,13723 }, { 124,2641 }, {  45,6659 }, { 126,2641 },
 {   0,  32 }, {   0,13718 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  45,7681 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  94,2591 }, {   0,   0 }, {  96,2591 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  33,2524 }, {   0,   0 },
 {  35,2524 }, { 101,3099 }, {  37,2524 }, {  38,2524 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  42,2524 }, {  43,2524 }, {  33,2513 },

 {  45,2524 }, {  35,2513 }, {  47,2524 }, {  37,2513 }, {  38,2513 },
 {   0,   0 }, {  45,8680 }, {   0,   0 }, {  42,2513 }, {  43,2513 },
 {   0,   0 }, {  45,2513 }, { 124,2591 }, {  47,2513 }, { 126,2591 },
 {  60,2524 }, {  61,2524 }, {  62,3074 }, {  63,2524 }, {  64,2524 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  60,2513 }, {  61,3104 }, {  62,2513 }, {  63,2513 },
 {  64,2513 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,  41 }, {   0,13638 }, {   0,   0 }, {   0,   0 }, {  94,2524 },

 {   0,   0 }, {  96,2524 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  94,2513 }, {   0,   0 }, {  96,2513 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, { 124,2524 },
 {   0,   0 }, { 126,2524 }, {  36,3090 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 { 124,2513 }, {   0,   0 }, { 126,2513 }, {   0,   0 }, {  48,3090 },
 {  49,3090 }, {  50,3090 }, {  51,3090 }, {  52,3090 }, {  53,3090 },

 {  54,3090 }, {  55,3090 }, {  56,3090 }, {  57,3090 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  65,3090 }, {  66,3090 }, {  67,3090 }, {  68,3090 },
 {  69,3090 }, {  70,3090 }, {  71,3090 }, {  72,3090 }, {  73,3090 },
 {  74,3090 }, {  75,3090 }, {  76,3090 }, {  77,3090 }, {  78,3090 },
 {  79,3090 }, {  80,3090 }, {  81,3090 }, {  82,3090 }, {  83,3090 },
 {  84,3090 }, {  85,3090 }, {  86,3090 }, {  87,3090 }, {  88,3090 },
 {  89,3090 }, {  90,3090 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  95,3090 }, {   0,   0 }, {  97,3090 }, {  98,3090 },
 {  99,3090 }, { 100,3090 }, { 101,3090 }, { 102,3090 }, { 103,3090 },

 { 104,3090 }, { 105,3090 }, { 106,3090 }, { 107,3090 }, { 108,3090 },
 { 109,3090 }, { 110,3090 }, { 111,3090 }, { 112,3090 }, { 113,3090 },
 { 114,3090 }, { 115,3090 }, { 116,3090 }, { 117,3090 }, { 118,3090 },
 { 119,3090 }, { 120,3090 }, { 121,3090 }, { 122,3090 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, { 128,3090 },
 { 129,3090 }, { 130,3090 }, { 131,3090 }, { 132,3090 }, { 133,3090 },
 { 134,3090 }, { 135,3090 }, { 136,3090 }, { 137,3090 }, { 138,3090 },
 { 139,3090 }, { 140,3090 }, { 141,3090 }, { 142,3090 }, { 143,3090 },
 { 144,3090 }, { 145,3090 }, { 146,3090 }, { 147,3090 }, { 148,3090 },
 { 149,3090 }, { 150,3090 }, { 151,3090 }, { 152,3090 }, { 153,3090 },

 { 154,3090 }, { 155,3090 }, { 156,3090 }, { 157,3090 }, { 158,3090 },
 { 159,3090 }, { 160,3090 }, { 161,3090 }, { 162,3090 }, { 163,3090 },
 { 164,3090 }, { 165,3090 }, { 166,3090 }, { 167,3090 }, { 168,3090 },
 { 169,3090 }, { 170,3090 }, { 171,3090 }, { 172,3090 }, { 173,3090 },
 { 174,3090 }, { 175,3090 }, { 176,3090 }, { 177,3090 }, { 178,3090 },
 { 179,3090 }, { 180,3090 }, { 181,3090 }, { 182,3090 }, { 183,3090 },
 { 184,3090 }, { 185,3090 }, { 186,3090 }, { 187,3090 }, { 188,3090 },
 { 189,3090 }, { 190,3090 }, { 191,3090 }, { 192,3090 }, { 193,3090 },
 { 194,3090 }, { 195,3090 }, { 196,3090 }, { 197,3090 }, { 198,3090 },
 { 199,3090 }, { 200,3090 }, { 201,3090 }, { 202,3090 }, { 203,3090 },

 { 204,3090 }, { 205,3090 }, { 206,3090 }, { 207,3090 }, { 208,3090 },
 { 209,3090 }, { 210,3090 }, { 211,3090 }, { 212,3090 }, { 213,3090 },
 { 214,3090 }, { 215,3090 }, { 216,3090 }, { 217,3090 }, { 218,3090 },
 { 219,3090 }, { 220,3090 }, { 221,3090 }, { 222,3090 }, { 223,3090 },
 { 224,3090 }, { 225,3090 }, { 226,3090 }, { 227,3090 }, { 228,3090 },
 { 229,3090 }, { 230,3090 }, { 231,3090 }, { 232,3090 }, { 233,3090 },
 { 234,3090 }, { 235,3090 }, { 236,3090 }, { 237,3090 }, { 238,3090 },
 { 239,3090 }, { 240,3090 }, { 241,3090 }, { 242,3090 }, { 243,3090 },
 { 244,3090 }, { 245,3090 }, { 246,3090 }, { 247,3090 }, { 248,3090 },
 { 249,3090 }, { 250,3090 }, { 251,3090 }, { 252,3090 }, { 253,3090 },

 { 254,3090 }, { 255,3090 }, {   0,  41 }, {   0,13381 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  36,2833 },
 {   0,   0 }, {   0,   0 }, {  39,-544 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {  48,2833 }, {  49,2833 }, {  50,2833 }, {  51,2833 },
 {  52,2833 }, {  53,2833 }, {  54,2833 }, {  55,2833 }, {  56,2833 },
 {  57,2833 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,2833 }, {  66,2833 },
 {  67,2833 }, {  68,2833 }, {  69,2833 }, {  70,2833 }, {  71,2833 },
 {  72,2833 }, {  73,2833 }, {  74,2833 }, {  75,2833 }, {  76,2833 },
 {  77,2833 }, {  78,2833 }, {  79,2833 }, {  80,2833 }, {  81,2833 },
 {  82,2833 }, {  83,2833 }, {  84,2833 }, {  85,2833 }, {  86,2833 },
 {  87,2833 }, {  88,2833 }, {  89,2833 }, {  90,2833 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  95,2833 }, {   0,   0 },

 {  97,2833 }, {  98,2833 }, {  99,2833 }, { 100,2833 }, { 101,2833 },
 { 102,2833 }, { 103,2833 }, { 104,2833 }, { 105,2833 }, { 106,2833 },
 { 107,2833 }, { 108,2833 }, { 109,2833 }, { 110,2833 }, { 111,2833 },
 { 112,2833 }, { 113,2833 }, { 114,2833 }, { 115,2833 }, { 116,2833 },
 { 117,2833 }, { 118,2833 }, { 119,2833 }, { 120,2833 }, { 121,2833 },
 { 122,2833 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, { 128,2833 }, { 129,2833 }, { 130,2833 }, { 131,2833 },
 { 132,2833 }, { 133,2833 }, { 134,2833 }, { 135,2833 }, { 136,2833 },
 { 137,2833 }, { 138,2833 }, { 139,2833 }, { 140,2833 }, { 141,2833 },
 { 142,2833 }, { 143,2833 }, { 144,2833 }, { 145,2833 }, { 146,2833 },

 { 147,2833 }, { 148,2833 }, { 149,2833 }, { 150,2833 }, { 151,2833 },
 { 152,2833 }, { 153,2833 }, { 154,2833 }, { 155,2833 }, { 156,2833 },
 { 157,2833 }, { 158,2833 }, { 159,2833 }, { 160,2833 }, { 161,2833 },
 { 162,2833 }, { 163,2833 }, { 164,2833 }, { 165,2833 }, { 166,2833 },
 { 167,2833 }, { 168,2833 }, { 169,2833 }, { 170,2833 }, { 171,2833 },
 { 172,2833 }, { 173,2833 }, { 174,2833 }, { 175,2833 }, { 176,2833 },
 { 177,2833 }, { 178,2833 }, { 179,2833 }, { 180,2833 }, { 181,2833 },
 { 182,2833 }, { 183,2833 }, { 184,2833 }, { 185,2833 }, { 186,2833 },
 { 187,2833 }, { 188,2833 }, { 189,2833 }, { 190,2833 }, { 191,2833 },
 { 192,2833 }, { 193,2833 }, { 194,2833 }, { 195,2833 }, { 196,2833 },

 { 197,2833 }, { 198,2833 }, { 199,2833 }, { 200,2833 }, { 201,2833 },
 { 202,2833 }, { 203,2833 }, { 204,2833 }, { 205,2833 }, { 206,2833 },
 { 207,2833 }, { 208,2833 }, { 209,2833 }, { 210,2833 }, { 211,2833 },
 { 212,2833 }, { 213,2833 }, { 214,2833 }, { 215,2833 }, { 216,2833 },
 { 217,2833 }, { 218,2833 }, { 219,2833 }, { 220,2833 }, { 221,2833 },
 { 222,2833 }, { 223,2833 }, { 224,2833 }, { 225,2833 }, { 226,2833 },
 { 227,2833 }, { 228,2833 }, { 229,2833 }, { 230,2833 }, { 231,2833 },
 { 232,2833 }, { 233,2833 }, { 234,2833 }, { 235,2833 }, { 236,2833 },
 { 237,2833 }, { 238,2833 }, { 239,2833 }, { 240,2833 }, { 241,2833 },
 { 242,2833 }, { 243,2833 }, { 244,2833 }, { 245,2833 }, { 246,2833 },

 { 247,2833 }, { 248,2833 }, { 249,2833 }, { 250,2833 }, { 251,2833 },
 { 252,2833 }, { 253,2833 }, { 254,2833 }, { 255,2833 }, {   0,  41 },
 {   0,13124 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  36,2576 }, {   0,   0 }, {   0,   0 }, {  39,-799 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,2576 }, {  49,2576 },
 {  50,2576 }, {  51,2576 }, {  52,2576 }, {  53,2576 }, {  54,2576 },
 {  55,2576 }, {  56,2576 }, {  57,2576 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  65,2576 }, {  66,2576 }, {  67,2576 }, {  68,2576 }, {  69,2576 },
 {  70,2576 }, {  71,2576 }, {  72,2576 }, {  73,2576 }, {  74,2576 },
 {  75,2576 }, {  76,2576 }, {  77,2576 }, {  78,2576 }, {  79,2576 },
 {  80,2576 }, {  81,2576 }, {  82,2576 }, {  83,2576 }, {  84,2576 },
 {  85,2576 }, {  86,2576 }, {  87,2576 }, {  88,2576 }, {  89,2576 },

 {  90,2576 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  95,2576 }, {   0,   0 }, {  97,2576 }, {  98,2576 }, {  99,2576 },
 { 100,2576 }, { 101,2576 }, { 102,2576 }, { 103,2576 }, { 104,2576 },
 { 105,2576 }, { 106,2576 }, { 107,2576 }, { 108,2576 }, { 109,2576 },
 { 110,2576 }, { 111,2576 }, { 112,2576 }, { 113,2576 }, { 114,2576 },
 { 115,2576 }, { 116,2576 }, { 117,2576 }, { 118,2576 }, { 119,2576 },
 { 120,2576 }, { 121,2576 }, { 122,2576 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, { 128,2576 }, { 129,2576 },
 { 130,2576 }, { 131,2576 }, { 132,2576 }, { 133,2576 }, { 134,2576 },
 { 135,2576 }, { 136,2576 }, { 137,2576 }, { 138,2576 }, { 139,2576 },

 { 140,2576 }, { 141,2576 }, { 142,2576 }, { 143,2576 }, { 144,2576 },
 { 145,2576 }, { 146,2576 }, { 147,2576 }, { 148,2576 }, { 149,2576 },
 { 150,2576 }, { 151,2576 }, { 152,2576 }, { 153,2576 }, { 154,2576 },
 { 155,2576 }, { 156,2576 }, { 157,2576 }, { 158,2576 }, { 159,2576 },
 { 160,2576 }, { 161,2576 }, { 162,2576 }, { 163,2576 }, { 164,2576 },
 { 165,2576 }, { 166,2576 }, { 167,2576 }, { 168,2576 }, { 169,2576 },
 { 170,2576 }, { 171,2576 }, { 172,2576 }, { 173,2576 }, { 174,2576 },
 { 175,2576 }, { 176,2576 }, { 177,2576 }, { 178,2576 }, { 179,2576 },
 { 180,2576 }, { 181,2576 }, { 182,2576 }, { 183,2576 }, { 184,2576 },
 { 185,2576 }, { 186,2576 }, { 187,2576 }, { 188,2576 }, { 189,2576 },

 { 190,2576 }, { 191,2576 }, { 192,2576 }, { 193,2576 }, { 194,2576 },
 { 195,2576 }, { 196,2576 }, { 197,2576 }, { 198,2576 }, { 199,2576 },
 { 200,2576 }, { 201,2576 }, { 202,2576 }, { 203,2576 }, { 204,2576 },
 { 205,2576 }, { 206,2576 }, { 207,2576 }, { 208,2576 }, { 209,2576 },
 { 210,2576 }, { 211,2576 }, { 212,2576 }, { 213,2576 }, { 214,2576 },
 { 215,2576 }, { 216,2576 }, { 217,2576 }, { 218,2576 }, { 219,2576 },
 { 220,2576 }, { 221,2576 }, { 222,2576 }, { 223,2576 }, { 224,2576 },
 { 225,2576 }, { 226,2576 }, { 227,2576 }, { 228,2576 }, { 229,2576 },
 { 230,2576 }, { 231,2576 }, { 232,2576 }, { 233,2576 }, { 234,2576 },
 { 235,2576 }, { 236,2576 }, { 237,2576 }, { 238,2576 }, { 239,2576 },

 { 240,2576 }, { 241,2576 }, { 242,2576 }, { 243,2576 }, { 244,2576 },
 { 245,2576 }, { 246,2576 }, { 247,2576 }, { 248,2576 }, { 249,2576 },
 { 250,2576 }, { 251,2576 }, { 252,2576 }, { 253,2576 }, { 254,2576 },
 { 255,2576 }, {   0,  12 }, {   0,12867 }, {   1,2576 }, {   2,2576 },
 {   3,2576 }, {   4,2576 }, {   5,2576 }, {   6,2576 }, {   7,2576 },
 {   8,2576 }, {   9,2576 }, {  10,2576 }, {  11,2576 }, {  12,2576 },
 {  13,2576 }, {  14,2576 }, {  15,2576 }, {  16,2576 }, {  17,2576 },
 {  18,2576 }, {  19,2576 }, {  20,2576 }, {  21,2576 }, {  22,2576 },
 {  23,2576 }, {  24,2576 }, {  25,2576 }, {  26,2576 }, {  27,2576 },
 {  28,2576 }, {  29,2576 }, {  30,2576 }, {  31,2576 }, {  32,2576 },

 {  33,2576 }, {  34,2576 }, {  35,2576 }, {  36,2576 }, {  37,2576 },
 {  38,2576 }, {   0,   0 }, {  40,2576 }, {  41,2576 }, {  42,2576 },
 {  43,2576 }, {  44,2576 }, {  45,2576 }, {  46,2576 }, {  47,2576 },
 {  48,2576 }, {  49,2576 }, {  50,2576 }, {  51,2576 }, {  52,2576 },
 {  53,2576 }, {  54,2576 }, {  55,2576 }, {  56,2576 }, {  57,2576 },
 {  58,2576 }, {  59,2576 }, {  60,2576 }, {  61,2576 }, {  62,2576 },
 {  63,2576 }, {  64,2576 }, {  65,2576 }, {  66,2576 }, {  67,2576 },
 {  68,2576 }, {  69,2576 }, {  70,2576 }, {  71,2576 }, {  72,2576 },
 {  73,2576 }, {  74,2576 }, {  75,2576 }, {  76,2576 }, {  77,2576 },
 {  78,2576 }, {  79,2576 }, {  80,2576 }, {  81,2576 }, {  82,2576 },

 {  83,2576 }, {  84,2576 }, {  85,2576 }, {  86,2576 }, {  87,2576 },
 {  88,2576 }, {  89,2576 }, {  90,2576 }, {  91,2576 }, {  92,2576 },
 {  93,2576 }, {  94,2576 }, {  95,2576 }, {  96,2576 }, {  97,2576 },
 {  98,2576 }, {  99,2576 }, { 100,2576 }, { 101,2576 }, { 102,2576 },
 { 103,2576 }, { 104,2576 }, { 105,2576 }, { 106,2576 }, { 107,2576 },
 { 108,2576 }, { 109,2576 }, { 110,2576 }, { 111,2576 }, { 112,2576 },
 { 113,2576 }, { 114,2576 }, { 115,2576 }, { 116,2576 }, { 117,2576 },
 { 118,2576 }, { 119,2576 }, { 120,2576 }, { 121,2576 }, { 122,2576 },
 { 123,2576 }, { 124,2576 }, { 125,2576 }, { 126,2576 }, { 127,2576 },
 { 128,2576 }, { 129,2576 }, { 130,2576 }, { 131,2576 }, { 132,2576 },

 { 133,2576 }, { 134,2576 }, { 135,2576 }, { 136,2576 }, { 137,2576 },
 { 138,2576 }, { 139,2576 }, { 140,2576 }, { 141,2576 }, { 142,2576 },
 { 143,2576 }, { 144,2576 }, { 145,2576 }, { 146,2576 }, { 147,2576 },
 { 148,2576 }, { 149,2576 }, { 150,2576 }, { 151,2576 }, { 152,2576 },
 { 153,2576 }, { 154,2576 }, { 155,2576 }, { 156,2576 }, { 157,2576 },
 { 158,2576 }, { 159,2576 }, { 160,2576 }, { 161,2576 }, { 162,2576 },
 { 163,2576 }, { 164,2576 }, { 165,2576 }, { 166,2576 }, { 167,2576 },
 { 168,2576 }, { 169,2576 }, { 170,2576 }, { 171,2576 }, { 172,2576 },
 { 173,2576 }, { 174,2576 }, { 175,2576 }, { 176,2576 }, { 177,2576 },
 { 178,2576 }, { 179,2576 }, { 180,2576 }, { 181,2576 }, { 182,2576 },

 { 183,2576 }, { 184,2576 }, { 185,2576 }, { 186,2576 }, { 187,2576 },
 { 188,2576 }, { 189,2576 }, { 190,2576 }, { 191,2576 }, { 192,2576 },
 { 193,2576 }, { 194,2576 }, { 195,2576 }, { 196,2576 }, { 197,2576 },
 { 198,2576 }, { 199,2576 }, { 200,2576 }, { 201,2576 }, { 202,2576 },
 { 203,2576 }, { 204,2576 }, { 205,2576 }, { 206,2576 }, { 207,2576 },
 { 208,2576 }, { 209,2576 }, { 210,2576 }, { 211,2576 }, { 212,2576 },
 { 213,2576 }, { 214,2576 }, { 215,2576 }, { 216,2576 }, { 217,2576 },
 { 218,2576 }, { 219,2576 }, { 220,2576 }, { 221,2576 }, { 222,2576 },
 { 223,2576 }, { 224,2576 }, { 225,2576 }, { 226,2576 }, { 227,2576 },
 { 228,2576 }, { 229,2576 }, { 230,2576 }, { 231,2576 }, { 232,2576 },

 { 233,2576 }, { 234,2576 }, { 235,2576 }, { 236,2576 }, { 237,2576 },
 { 238,2576 }, { 239,2576 }, { 240,2576 }, { 241,2576 }, { 242,2576 },
 { 243,2576 }, { 244,2576 }, { 245,2576 }, { 246,2576 }, { 247,2576 },
 { 248,2576 }, { 249,2576 }, { 250,2576 }, { 251,2576 }, { 252,2576 },
 { 253,2576 }, { 254,2576 }, { 255,2576 }, { 256,2576 }, {   0,   9 },
 {   0,12609 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   9,2576 },
 {  10,2581 }, {   0,   0 }, {  12,2576 }, {  13,2581 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  32,2576 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  45,-1295 }, {   0,   5 }, {   0,12562 }, {   1,2581 }, {   2,2581 },
 {   3,2581 }, {   4,2581 }, {   5,2581 }, {   6,2581 }, {   7,2581 },
 {   8,2581 }, {   9,2581 }, {  10,2581 }, {  11,2581 }, {  12,2581 },
 {  13,2581 }, {  14,2581 }, {  15,2581 }, {  16,2581 }, {  17,2581 },
 {  18,2581 }, {  19,2581 }, {  20,2581 }, {  21,2581 }, {  22,2581 },
 {  23,2581 }, {  24,2581 }, {  25,2581 }, {  26,2581 }, {  27,2581 },

 {  28,2581 }, {  29,2581 }, {  30,2581 }, {  31,2581 }, {  32,2581 },
 {  33,2581 }, {  34,2581 }, {  35,2581 }, {  36,2581 }, {  37,2581 },
 {  38,2581 }, {  39,2581 }, {  40,2581 }, {  41,2581 }, {   0,   0 },
 {  43,2581 }, {  44,2581 }, {  45,2581 }, {  46,2581 }, {   0,   0 },
 {  48,2581 }, {  49,2581 }, {  50,2581 }, {  51,2581 }, {  52,2581 },
 {  53,2581 }, {  54,2581 }, {  55,2581 }, {  56,2581 }, {  57,2581 },
 {  58,2581 }, {  59,2581 }, {  60,2581 }, {  61,2581 }, {  62,2581 },
 {  63,2581 }, {  64,2581 }, {  65,2581 }, {  66,2581 }, {  67,2581 },
 {  68,2581 }, {  69,2581 }, {  70,2581 }, {  71,2581 }, {  72,2581 },
 {  73,2581 }, {  74,2581 }, {  75,2581 }, {  76,2581 }, {  77,2581 },

 {  78,2581 }, {  79,2581 }, {  80,2581 }, {  81,2581 }, {  82,2581 },
 {  83,2581 }, {  84,2581 }, {  85,2581 }, {  86,2581 }, {  87,2581 },
 {  88,2581 }, {  89,2581 }, {  90,2581 }, {  91,2581 }, {  92,2581 },
 {  93,2581 }, {  94,2581 }, {  95,2581 }, {  96,2581 }, {  97,2581 },
 {  98,2581 }, {  99,2581 }, { 100,2581 }, { 101,2581 }, { 102,2581 },
 { 103,2581 }, { 104,2581 }, { 105,2581 }, { 106,2581 }, { 107,2581 },
 { 108,2581 }, { 109,2581 }, { 110,2581 }, { 111,2581 }, { 112,2581 },
 { 113,2581 }, { 114,2581 }, { 115,2581 }, { 116,2581 }, { 117,2581 },
 { 118,2581 }, { 119,2581 }, { 120,2581 }, { 121,2581 }, { 122,2581 },
 { 123,2581 }, { 124,2581 }, { 125,2581 }, { 126,2581 }, { 127,2581 },

 { 128,2581 }, { 129,2581 }, { 130,2581 }, { 131,2581 }, { 132,2581 },
 { 133,2581 }, { 134,2581 }, { 135,2581 }, { 136,2581 }, { 137,2581 },
 { 138,2581 }, { 139,2581 }, { 140,2581 }, { 141,2581 }, { 142,2581 },
 { 143,2581 }, { 144,2581 }, { 145,2581 }, { 146,2581 }, { 147,2581 },
 { 148,2581 }, { 149,2581 }, { 150,2581 }, { 151,2581 }, { 152,2581 },
 { 153,2581 }, { 154,2581 }, { 155,2581 }, { 156,2581 }, { 157,2581 },
 { 158,2581 }, { 159,2581 }, { 160,2581 }, { 161,2581 }, { 162,2581 },
 { 163,2581 }, { 164,2581 }, { 165,2581 }, { 166,2581 }, { 167,2581 },
 { 168,2581 }, { 169,2581 }, { 170,2581 }, { 171,2581 }, { 172,2581 },
 { 173,2581 }, { 174,2581 }, { 175,2581 }, { 176,2581 }, { 177,2581 },

 { 178,2581 }, { 179,2581 }, { 180,2581 }, { 181,2581 }, { 182,2581 },
 { 183,2581 }, { 184,2581 }, { 185,2581 }, { 186,2581 }, { 187,2581 },
 { 188,2581 }, { 189,2581 }, { 190,2581 }, { 191,2581 }, { 192,2581 },
 { 193,2581 }, { 194,2581 }, { 195,2581 }, { 196,2581 }, { 197,2581 },
 { 198,2581 }, { 199,2581 }, { 200,2581 }, { 201,2581 }, { 202,2581 },
 { 203,2581 }, { 204,2581 }, { 205,2581 }, { 206,2581 }, { 207,2581 },
 { 208,2581 }, { 209,2581 }, { 210,2581 }, { 211,2581 }, { 212,2581 },
 { 213,2581 }, { 214,2581 }, { 215,2581 }, { 216,2581 }, { 217,2581 },
 { 218,2581 }, { 219,2581 }, { 220,2581 }, { 221,2581 }, { 222,2581 },
 { 223,2581 }, { 224,2581 }, { 225,2581 }, { 226,2581 }, { 227,2581 },

 { 228,2581 }, { 229,2581 }, { 230,2581 }, { 231,2581 }, { 232,2581 },
 { 233,2581 }, { 234,2581 }, { 235,2581 }, { 236,2581 }, { 237,2581 },
 { 238,2581 }, { 239,2581 }, { 240,2581 }, { 241,2581 }, { 242,2581 },
 { 243,2581 }, { 244,2581 }, { 245,2581 }, { 246,2581 }, { 247,2581 },
 { 248,2581 }, { 249,2581 }, { 250,2581 }, { 251,2581 }, { 252,2581 },
 { 253,2581 }, { 254,2581 }, { 255,2581 }, { 256,2581 }, {   0,   5 },
 {   0,12304 }, {   1,2323 }, {   2,2323 }, {   3,2323 }, {   4,2323 },
 {   5,2323 }, {   6,2323 }, {   7,2323 }, {   8,2323 }, {   9,2323 },
 {  10,2323 }, {  11,2323 }, {  12,2323 }, {  13,2323 }, {  14,2323 },
 {  15,2323 }, {  16,2323 }, {  17,2323 }, {  18,2323 }, {  19,2323 },

 {  20,2323 }, {  21,2323 }, {  22,2323 }, {  23,2323 }, {  24,2323 },
 {  25,2323 }, {  26,2323 }, {  27,2323 }, {  28,2323 }, {  29,2323 },
 {  30,2323 }, {  31,2323 }, {  32,2323 }, {  33,2323 }, {  34,2323 },
 {  35,2323 }, {  36,2323 }, {  37,2323 }, {  38,2323 }, {  39,2323 },
 {  40,2323 }, {  41,2323 }, {   0,   0 }, {  43,2323 }, {  44,2323 },
 {  45,2323 }, {  46,2323 }, {   0,   0 }, {  48,2323 }, {  49,2323 },
 {  50,2323 }, {  51,2323 }, {  52,2323 }, {  53,2323 }, {  54,2323 },
 {  55,2323 }, {  56,2323 }, {  57,2323 }, {  58,2323 }, {  59,2323 },
 {  60,2323 }, {  61,2323 }, {  62,2323 }, {  63,2323 }, {  64,2323 },
 {  65,2323 }, {  66,2323 }, {  67,2323 }, {  68,2323 }, {  69,2323 },

 {  70,2323 }, {  71,2323 }, {  72,2323 }, {  73,2323 }, {  74,2323 },
 {  75,2323 }, {  76,2323 }, {  77,2323 }, {  78,2323 }, {  79,2323 },
 {  80,2323 }, {  81,2323 }, {  82,2323 }, {  83,2323 }, {  84,2323 },
 {  85,2323 }, {  86,2323 }, {  87,2323 }, {  88,2323 }, {  89,2323 },
 {  90,2323 }, {  91,2323 }, {  92,2323 }, {  93,2323 }, {  94,2323 },
 {  95,2323 }, {  96,2323 }, {  97,2323 }, {  98,2323 }, {  99,2323 },
 { 100,2323 }, { 101,2323 }, { 102,2323 }, { 103,2323 }, { 104,2323 },
 { 105,2323 }, { 106,2323 }, { 107,2323 }, { 108,2323 }, { 109,2323 },
 { 110,2323 }, { 111,2323 }, { 112,2323 }, { 113,2323 }, { 114,2323 },
 { 115,2323 }, { 116,2323 }, { 117,2323 }, { 118,2323 }, { 119,2323 },

 { 120,2323 }, { 121,2323 }, { 122,2323 }, { 123,2323 }, { 124,2323 },
 { 125,2323 }, { 126,2323 }, { 127,2323 }, { 128,2323 }, { 129,2323 },
 { 130,2323 }, { 131,2323 }, { 132,2323 }, { 133,2323 }, { 134,2323 },
 { 135,2323 }, { 136,2323 }, { 137,2323 }, { 138,2323 }, { 139,2323 },
 { 140,2323 }, { 141,2323 }, { 142,2323 }, { 143,2323 }, { 144,2323 },
 { 145,2323 }, { 146,2323 }, { 147,2323 }, { 148,2323 }, { 149,2323 },
 { 150,2323 }, { 151,2323 }, { 152,2323 }, { 153,2323 }, { 154,2323 },
 { 155,2323 }, { 156,2323 }, { 157,2323 }, { 158,2323 }, { 159,2323 },
 { 160,2323 }, { 161,2323 }, { 162,2323 }, { 163,2323 }, { 164,2323 },
 { 165,2323 }, { 166,2323 }, { 167,2323 }, { 168,2323 }, { 169,2323 },

 { 170,2323 }, { 171,2323 }, { 172,2323 }, { 173,2323 }, { 174,2323 },
 { 175,2323 }, { 176,2323 }, { 177,2323 }, { 178,2323 }, { 179,2323 },
 { 180,2323 }, { 181,2323 }, { 182,2323 }, { 183,2323 }, { 184,2323 },
 { 185,2323 }, { 186,2323 }, { 187,2323 }, { 188,2323 }, { 189,2323 },
 { 190,2323 }, { 191,2323 }, { 192,2323 }, { 193,2323 }, { 194,2323 },
 { 195,2323 }, { 196,2323 }, { 197,2323 }, { 198,2323 }, { 199,2323 },
 { 200,2323 }, { 201,2323 }, { 202,2323 }, { 203,2323 }, { 204,2323 },
 { 205,2323 }, { 206,2323 }, { 207,2323 }, { 208,2323 }, { 209,2323 },
 { 210,2323 }, { 211,2323 }, { 212,2323 }, { 213,2323 }, { 214,2323 },
 { 215,2323 }, { 216,2323 }, { 217,2323 }, { 218,2323 }, { 219,2323 },

 { 220,2323 }, { 221,2323 }, { 222,2323 }, { 223,2323 }, { 224,2323 },
 { 225,2323 }, { 226,2323 }, { 227,2323 }, { 228,2323 }, { 229,2323 },
 { 230,2323 }, { 231,2323 }, { 232,2323 }, { 233,2323 }, { 234,2323 },
 { 235,2323 }, { 236,2323 }, { 237,2323 }, { 238,2323 }, { 239,2323 },
 { 240,2323 }, { 241,2323 }, { 242,2323 }, { 243,2323 }, { 244,2323 },
 { 245,2323 }, { 246,2323 }, { 247,2323 }, { 248,2323 }, { 249,2323 },
 { 250,2323 }, { 251,2323 }, { 252,2323 }, { 253,2323 }, { 254,2323 },
 { 255,2323 }, { 256,2323 }, {   0,  27 }, {   0,12046 }, {   1,2451 },
 {   2,2451 }, {   3,2451 }, {   4,2451 }, {   5,2451 }, {   6,2451 },
 {   7,2451 }, {   8,2451 }, {   9,2451 }, {  10,2451 }, {  11,2451 },

 {  12,2451 }, {  13,2451 }, {  14,2451 }, {  15,2451 }, {  16,2451 },
 {  17,2451 }, {  18,2451 }, {  19,2451 }, {  20,2451 }, {  21,2451 },
 {  22,2451 }, {  23,2451 }, {  24,2451 }, {  25,2451 }, {  26,2451 },
 {  27,2451 }, {  28,2451 }, {  29,2451 }, {  30,2451 }, {  31,2451 },
 {  32,2451 }, {  33,2451 }, {   0,   0 }, {  35,2451 }, {  36,2451 },
 {  37,2451 }, {  38,2451 }, {  39,2451 }, {  40,2451 }, {  41,2451 },
 {  42,2451 }, {  43,2451 }, {  44,2451 }, {  45,2451 }, {  46,2451 },
 {  47,2451 }, {  48,2451 }, {  49,2451 }, {  50,2451 }, {  51,2451 },
 {  52,2451 }, {  53,2451 }, {  54,2451 }, {  55,2451 }, {  56,2451 },
 {  57,2451 }, {  58,2451 }, {  59,2451 }, {  60,2451 }, {  61,2451 },

 {  62,2451 }, {  63,2451 }, {  64,2451 }, {  65,2451 }, {  66,2451 },
 {  67,2451 }, {  68,2451 }, {  69,2451 }, {  70,2451 }, {  71,2451 },
 {  72,2451 }, {  73,2451 }, {  74,2451 }, {  75,2451 }, {  76,2451 },
 {  77,2451 }, {  78,2451 }, {  79,2451 }, {  80,2451 }, {  81,2451 },
 {  82,2451 }, {  83,2451 }, {  84,2451 }, {  85,2451 }, {  86,2451 },
 {  87,2451 }, {  88,2451 }, {  89,2451 }, {  90,2451 }, {  91,2451 },
 {  92,2451 }, {  93,2451 }, {  94,2451 }, {  95,2451 }, {  96,2451 },
 {  97,2451 }, {  98,2451 }, {  99,2451 }, { 100,2451 }, { 101,2451 },
 { 102,2451 }, { 103,2451 }, { 104,2451 }, { 105,2451 }, { 106,2451 },
 { 107,2451 }, { 108,2451 }, { 109,2451 }, { 110,2451 }, { 111,2451 },

 { 112,2451 }, { 113,2451 }, { 114,2451 }, { 115,2451 }, { 116,2451 },
 { 117,2451 }, { 118,2451 }, { 119,2451 }, { 120,2451 }, { 121,2451 },
 { 122,2451 }, { 123,2451 }, { 124,2451 }, { 125,2451 }, { 126,2451 },
 { 127,2451 }, { 128,2451 }, { 129,2451 }, { 130,2451 }, { 131,2451 },
 { 132,2451 }, { 133,2451 }, { 134,2451 }, { 135,2451 }, { 136,2451 },
 { 137,2451 }, { 138,2451 }, { 139,2451 }, { 140,2451 }, { 141,2451 },
 { 142,2451 }, { 143,2451 }, { 144,2451 }, { 145,2451 }, { 146,2451 },
 { 147,2451 }, { 148,2451 }, { 149,2451 }, { 150,2451 }, { 151,2451 },
 { 152,2451 }, { 153,2451 }, { 154,2451 }, { 155,2451 }, { 156,2451 },
 { 157,2451 }, { 158,2451 }, { 159,2451 }, { 160,2451 }, { 161,2451 },

 { 162,2451 }, { 163,2451 }, { 164,2451 }, { 165,2451 }, { 166,2451 },
 { 167,2451 }, { 168,2451 }, { 169,2451 }, { 170,2451 }, { 171,2451 },
 { 172,2451 }, { 173,2451 }, { 174,2451 }, { 175,2451 }, { 176,2451 },
 { 177,2451 }, { 178,2451 }, { 179,2451 }, { 180,2451 }, { 181,2451 },
 { 182,2451 }, { 183,2451 }, { 184,2451 }, { 185,2451 }, { 186,2451 },
 { 187,2451 }, { 188,2451 }, { 189,2451 }, { 190,2451 }, { 191,2451 },
 { 192,2451 }, { 193,2451 }, { 194,2451 }, { 195,2451 }, { 196,2451 },
 { 197,2451 }, { 198,2451 }, { 199,2451 }, { 200,2451 }, { 201,2451 },
 { 202,2451 }, { 203,2451 }, { 204,2451 }, { 205,2451 }, { 206,2451 },
 { 207,2451 }, { 208,2451 }, { 209,2451 }, { 210,2451 }, { 211,2451 },

 { 212,2451 }, { 213,2451 }, { 214,2451 }, { 215,2451 }, { 216,2451 },
 { 217,2451 }, { 218,2451 }, { 219,2451 }, { 220,2451 }, { 221,2451 },
 { 222,2451 }, { 223,2451 }, { 224,2451 }, { 225,2451 }, { 226,2451 },
 { 227,2451 }, { 228,2451 }, { 229,2451 }, { 230,2451 }, { 231,2451 },
 { 232,2451 }, { 233,2451 }, { 234,2451 }, { 235,2451 }, { 236,2451 },
 { 237,2451 }, { 238,2451 }, { 239,2451 }, { 240,2451 }, { 241,2451 },
 { 242,2451 }, { 243,2451 }, { 244,2451 }, { 245,2451 }, { 246,2451 },
 { 247,2451 }, { 248,2451 }, { 249,2451 }, { 250,2451 }, { 251,2451 },
 { 252,2451 }, { 253,2451 }, { 254,2451 }, { 255,2451 }, { 256,2451 },
 {   0,  11 }, {   0,11788 }, {   1,2451 }, {   2,2451 }, {   3,2451 },

 {   4,2451 }, {   5,2451 }, {   6,2451 }, {   7,2451 }, {   8,2451 },
 {   9,2451 }, {  10,2451 }, {  11,2451 }, {  12,2451 }, {  13,2451 },
 {  14,2451 }, {  15,2451 }, {  16,2451 }, {  17,2451 }, {  18,2451 },
 {  19,2451 }, {  20,2451 }, {  21,2451 }, {  22,2451 }, {  23,2451 },
 {  24,2451 }, {  25,2451 }, {  26,2451 }, {  27,2451 }, {  28,2451 },
 {  29,2451 }, {  30,2451 }, {  31,2451 }, {  32,2451 }, {  33,2451 },
 {  34,2451 }, {  35,2451 }, {  36,2451 }, {  37,2451 }, {  38,2451 },
 {   0,   0 }, {  40,2451 }, {  41,2451 }, {  42,2451 }, {  43,2451 },
 {  44,2451 }, {  45,2451 }, {  46,2451 }, {  47,2451 }, {  48,2451 },
 {  49,2451 }, {  50,2451 }, {  51,2451 }, {  52,2451 }, {  53,2451 },

 {  54,2451 }, {  55,2451 }, {  56,2451 }, {  57,2451 }, {  58,2451 },
 {  59,2451 }, {  60,2451 }, {  61,2451 }, {  62,2451 }, {  63,2451 },
 {  64,2451 }, {  65,2451 }, {  66,2451 }, {  67,2451 }, {  68,2451 },
 {  69,2451 }, {  70,2451 }, {  71,2451 }, {  72,2451 }, {  73,2451 },
 {  74,2451 }, {  75,2451 }, {  76,2451 }, {  77,2451 }, {  78,2451 },
 {  79,2451 }, {  80,2451 }, {  81,2451 }, {  82,2451 }, {  83,2451 },
 {  84,2451 }, {  85,2451 }, {  86,2451 }, {  87,2451 }, {  88,2451 },
 {  89,2451 }, {  90,2451 }, {  91,2451 }, {  92,2451 }, {  93,2451 },
 {  94,2451 }, {  95,2451 }, {  96,2451 }, {  97,2451 }, {  98,2451 },
 {  99,2451 }, { 100,2451 }, { 101,2451 }, { 102,2451 }, { 103,2451 },

 { 104,2451 }, { 105,2451 }, { 106,2451 }, { 107,2451 }, { 108,2451 },
 { 109,2451 }, { 110,2451 }, { 111,2451 }, { 112,2451 }, { 113,2451 },
 { 114,2451 }, { 115,2451 }, { 116,2451 }, { 117,2451 }, { 118,2451 },
 { 119,2451 }, { 120,2451 }, { 121,2451 }, { 122,2451 }, { 123,2451 },
 { 124,2451 }, { 125,2451 }, { 126,2451 }, { 127,2451 }, { 128,2451 },
 { 129,2451 }, { 130,2451 }, { 131,2451 }, { 132,2451 }, { 133,2451 },
 { 134,2451 }, { 135,2451 }, { 136,2451 }, { 137,2451 }, { 138,2451 },
 { 139,2451 }, { 140,2451 }, { 141,2451 }, { 142,2451 }, { 143,2451 },
 { 144,2451 }, { 145,2451 }, { 146,2451 }, { 147,2451 }, { 148,2451 },
 { 149,2451 }, { 150,2451 }, { 151,2451 }, { 152,2451 }, { 153,2451 },

 { 154,2451 }, { 155,2451 }, { 156,2451 }, { 157,2451 }, { 158,2451 },
 { 159,2451 }, { 160,2451 }, { 161,2451 }, { 162,2451 }, { 163,2451 },
 { 164,2451 }, { 165,2451 }, { 166,2451 }, { 167,2451 }, { 168,2451 },
 { 169,2451 }, { 170,2451 }, { 171,2451 }, { 172,2451 }, { 173,2451 },
 { 174,2451 }, { 175,2451 }, { 176,2451 }, { 177,2451 }, { 178,2451 },
 { 179,2451 }, { 180,2451 }, { 181,2451 }, { 182,2451 }, { 183,2451 },
 { 184,2451 }, { 185,2451 }, { 186,2451 }, { 187,2451 }, { 188,2451 },
 { 189,2451 }, { 190,2451 }, { 191,2451 }, { 192,2451 }, { 193,2451 },
 { 194,2451 }, { 195,2451 }, { 196,2451 }, { 197,2451 }, { 198,2451 },
 { 199,2451 }, { 200,2451 }, { 201,2451 }, { 202,2451 }, { 203,2451 },

 { 204,2451 }, { 205,2451 }, { 206,2451 }, { 207,2451 }, { 208,2451 },
 { 209,2451 }, { 210,2451 }, { 211,2451 }, { 212,2451 }, { 213,2451 },
 { 214,2451 }, { 215,2451 }, { 216,2451 }, { 217,2451 }, { 218,2451 },
 { 219,2451 }, { 220,2451 }, { 221,2451 }, { 222,2451 }, { 223,2451 },
 { 224,2451 }, { 225,2451 }, { 226,2451 }, { 227,2451 }, { 228,2451 },
 { 229,2451 }, { 230,2451 }, { 231,2451 }, { 232,2451 }, { 233,2451 },
 { 234,2451 }, { 235,2451 }, { 236,2451 }, { 237,2451 }, { 238,2451 },
 { 239,2451 }, { 240,2451 }, { 241,2451 }, { 242,2451 }, { 243,2451 },
 { 244,2451 }, { 245,2451 }, { 246,2451 }, { 247,2451 }, { 248,2451 },
 { 249,2451 }, { 250,2451 }, { 251,2451 }, { 252,2451 }, { 253,2451 },

 { 254,2451 }, { 255,2451 }, { 256,2451 }, {   0,  16 }, {   0,11530 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   9,2451 }, {  10,2456 },
 {   0,   0 }, {  12,2451 }, {  13,2456 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  32,2451 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  45,-2304 },

 {   0,  22 }, {   0,11483 }, {   1,2456 }, {   2,2456 }, {   3,2456 },
 {   4,2456 }, {   5,2456 }, {   6,2456 }, {   7,2456 }, {   8,2456 },
 {   9,2456 }, {  10,2456 }, {  11,2456 }, {  12,2456 }, {  13,2456 },
 {  14,2456 }, {  15,2456 }, {  16,2456 }, {  17,2456 }, {  18,2456 },
 {  19,2456 }, {  20,2456 }, {  21,2456 }, {  22,2456 }, {  23,2456 },
 {  24,2456 }, {  25,2456 }, {  26,2456 }, {  27,2456 }, {  28,2456 },
 {  29,2456 }, {  30,2456 }, {  31,2456 }, {  32,2456 }, {  33,2456 },
 {  34,2456 }, {  35,2456 }, {  36,2456 }, {  37,2456 }, {  38,2456 },
 {   0,   0 }, {  40,2456 }, {  41,2456 }, {  42,2456 }, {  43,2456 },
 {  44,2456 }, {  45,2456 }, {  46,2456 }, {  47,2456 }, {  48,2456 },

 {  49,2456 }, {  50,2456 }, {  51,2456 }, {  52,2456 }, {  53,2456 },
 {  54,2456 }, {  55,2456 }, {  56,2456 }, {  57,2456 }, {  58,2456 },
 {  59,2456 }, {  60,2456 }, {  61,2456 }, {  62,2456 }, {  63,2456 },
 {  64,2456 }, {  65,2456 }, {  66,2456 }, {  67,2456 }, {  68,2456 },
 {  69,2456 }, {  70,2456 }, {  71,2456 }, {  72,2456 }, {  73,2456 },
 {  74,2456 }, {  75,2456 }, {  76,2456 }, {  77,2456 }, {  78,2456 },
 {  79,2456 }, {  80,2456 }, {  81,2456 }, {  82,2456 }, {  83,2456 },
 {  84,2456 }, {  85,2456 }, {  86,2456 }, {  87,2456 }, {  88,2456 },
 {  89,2456 }, {  90,2456 }, {  91,2456 }, {  92,2456 }, {  93,2456 },
 {  94,2456 }, {  95,2456 }, {  96,2456 }, {  97,2456 }, {  98,2456 },

 {  99,2456 }, { 100,2456 }, { 101,2456 }, { 102,2456 }, { 103,2456 },
 { 104,2456 }, { 105,2456 }, { 106,2456 }, { 107,2456 }, { 108,2456 },
 { 109,2456 }, { 110,2456 }, { 111,2456 }, { 112,2456 }, { 113,2456 },
 { 114,2456 }, { 115,2456 }, { 116,2456 }, { 117,2456 }, { 118,2456 },
 { 119,2456 }, { 120,2456 }, { 121,2456 }, { 122,2456 }, { 123,2456 },
 { 124,2456 }, { 125,2456 }, { 126,2456 }, { 127,2456 }, { 128,2456 },
 { 129,2456 }, { 130,2456 }, { 131,2456 }, { 132,2456 }, { 133,2456 },
 { 134,2456 }, { 135,2456 }, { 136,2456 }, { 137,2456 }, { 138,2456 },
 { 139,2456 }, { 140,2456 }, { 141,2456 }, { 142,2456 }, { 143,2456 },
 { 144,2456 }, { 145,2456 }, { 146,2456 }, { 147,2456 }, { 148,2456 },

 { 149,2456 }, { 150,2456 }, { 151,2456 }, { 152,2456 }, { 153,2456 },
 { 154,2456 }, { 155,2456 }, { 156,2456 }, { 157,2456 }, { 158,2456 },
 { 159,2456 }, { 160,2456 }, { 161,2456 }, { 162,2456 }, { 163,2456 },
 { 164,2456 }, { 165,2456 }, { 166,2456 }, { 167,2456 }, { 168,2456 },
 { 169,2456 }, { 170,2456 }, { 171,2456 }, { 172,2456 }, { 173,2456 },
 { 174,2456 }, { 175,2456 }, { 176,2456 }, { 177,2456 }, { 178,2456 },
 { 179,2456 }, { 180,2456 }, { 181,2456 }, { 182,2456 }, { 183,2456 },
 { 184,2456 }, { 185,2456 }, { 186,2456 }, { 187,2456 }, { 188,2456 },
 { 189,2456 }, { 190,2456 }, { 191,2456 }, { 192,2456 }, { 193,2456 },
 { 194,2456 }, { 195,2456 }, { 196,2456 }, { 197,2456 }, { 198,2456 },

 { 199,2456 }, { 200,2456 }, { 201,2456 }, { 202,2456 }, { 203,2456 },
 { 204,2456 }, { 205,2456 }, { 206,2456 }, { 207,2456 }, { 208,2456 },
 { 209,2456 }, { 210,2456 }, { 211,2456 }, { 212,2456 }, { 213,2456 },
 { 214,2456 }, { 215,2456 }, { 216,2456 }, { 217,2456 }, { 218,2456 },
 { 219,2456 }, { 220,2456 }, { 221,2456 }, { 222,2456 }, { 223,2456 },
 { 224,2456 }, { 225,2456 }, { 226,2456 }, { 227,2456 }, { 228,2456 },
 { 229,2456 }, { 230,2456 }, { 231,2456 }, { 232,2456 }, { 233,2456 },
 { 234,2456 }, { 235,2456 }, { 236,2456 }, { 237,2456 }, { 238,2456 },
 { 239,2456 }, { 240,2456 }, { 241,2456 }, { 242,2456 }, { 243,2456 },
 { 244,2456 }, { 245,2456 }, { 246,2456 }, { 247,2456 }, { 248,2456 },

 { 249,2456 }, { 250,2456 }, { 251,2456 }, { 252,2456 }, { 253,2456 },
 { 254,2456 }, { 255,2456 }, { 256,2456 }, {   0,  19 }, {   0,11225 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   1 }, {   0,11220 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   9,2456 }, {  10,2461 },
 {   0,   0 }, {  12,2456 }, {  13,2461 }, {   9,   0 }, {  10,   0 },
 {   0,   0 }, {  12,   0 }, {  13,   0 }, {   0,  33 }, {   0,11205 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,  31 },
 {   0,11194 }, {  32,2456 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  32,   0 }, {   0,   0 }, {  39,-2607 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  45,-2589 },
 {   0,   0 }, {   0,  34 }, {   0,11177 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  33,   0 }, {   0,   0 }, {  35,   0 },
 {   0,   0 }, {  37,   0 }, {  38,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  42,   0 }, {  43,   0 }, {  33, -11 }, {  45,   0 },
 {  35, -11 }, {  47,   0 }, {  37, -11 }, {  38, -11 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  42, -11 }, {  43, -11 }, {   0,   0 },
 {  45, -11 }, {   0,   0 }, {  47, -11 }, {   0,   0 }, {  60,   0 },
 {  61,   0 }, {  62,   0 }, {  63,   0 }, {  64,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {  60, -11 }, {  61, -11 }, {  62, -11 }, {  63, -11 }, {  64, -11 },
 {  48,   0 }, {  49,   0 }, {  50,   0 }, {  51,   0 }, {  52,   0 },
 {  53,   0 }, {  54,   0 }, {  55,   0 }, {  56,   0 }, {  57,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  94,   0 }, {   0,   0 },
 {  96,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  94, -11 },
 {   0,   0 }, {  96, -11 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, { 124,   0 }, {   0,   0 },
 { 126,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, { 124, -11 },
 {   0,   0 }, { 126, -11 }, {   0,   1 }, {   0,11066 }, {   1,2349 },
 {   2,2349 }, {   3,2349 }, {   4,2349 }, {   5,2349 }, {   6,2349 },
 {   7,2349 }, {   8,2349 }, {   9,2349 }, {   0,   0 }, {  11,2349 },
 {  12,2349 }, {   0,   0 }, {  14,2349 }, {  15,2349 }, {  16,2349 },
 {  17,2349 }, {  18,2349 }, {  19,2349 }, {  20,2349 }, {  21,2349 },
 {  22,2349 }, {  23,2349 }, {  24,2349 }, {  25,2349 }, {  26,2349 },
 {  27,2349 }, {  28,2349 }, {  29,2349 }, {  30,2349 }, {  31,2349 },

 {  32,2349 }, {  33,2607 }, {  34,2349 }, {  35,2607 }, {  36,2349 },
 {  37,2607 }, {  38,2607 }, {  39,2349 }, {  40,2349 }, {  41,2349 },
 {  42,2607 }, {  43,2607 }, {  44,2349 }, {  45,2607 }, {  46,2349 },
 {  47,2607 }, {  48,2349 }, {  49,2349 }, {  50,2349 }, {  51,2349 },
 {  52,2349 }, {  53,2349 }, {  54,2349 }, {  55,2349 }, {  56,2349 },
 {  57,2349 }, {  58,2349 }, {  59,2349 }, {  60,2607 }, {  61,2607 },
 {  62,2607 }, {  63,2607 }, {  64,2607 }, {  65,2349 }, {  66,2349 },
 {  67,2349 }, {  68,2349 }, {  69,2349 }, {  70,2349 }, {  71,2349 },
 {  72,2349 }, {  73,2349 }, {  74,2349 }, {  75,2349 }, {  76,2349 },
 {  77,2349 }, {  78,2349 }, {  79,2349 }, {  80,2349 }, {  81,2349 },

 {  82,2349 }, {  83,2349 }, {  84,2349 }, {  85,2349 }, {  86,2349 },
 {  87,2349 }, {  88,2349 }, {  89,2349 }, {  90,2349 }, {  91,2349 },
 {  92,2349 }, {  93,2349 }, {  94,2607 }, {  95,2349 }, {  96,2607 },
 {  97,2349 }, {  98,2349 }, {  99,2349 }, { 100,2349 }, { 101,2349 },
 { 102,2349 }, { 103,2349 }, { 104,2349 }, { 105,2349 }, { 106,2349 },
 { 107,2349 }, { 108,2349 }, { 109,2349 }, { 110,2349 }, { 111,2349 },
 { 112,2349 }, { 113,2349 }, { 114,2349 }, { 115,2349 }, { 116,2349 },
 { 117,2349 }, { 118,2349 }, { 119,2349 }, { 120,2349 }, { 121,2349 },
 { 122,2349 }, { 123,2349 }, { 124,2607 }, { 125,2349 }, { 126,2607 },
 { 127,2349 }, { 128,2349 }, { 129,2349 }, { 130,2349 }, { 131,2349 },

 { 132,2349 }, { 133,2349 }, { 134,2349 }, { 135,2349 }, { 136,2349 },
 { 137,2349 }, { 138,2349 }, { 139,2349 }, { 140,2349 }, { 141,2349 },
 { 142,2349 }, { 143,2349 }, { 144,2349 }, { 145,2349 }, { 146,2349 },
 { 147,2349 }, { 148,2349 }, { 149,2349 }, { 150,2349 }, { 151,2349 },
 { 152,2349 }, { 153,2349 }, { 154,2349 }, { 155,2349 }, { 156,2349 },
 { 157,2349 }, { 158,2349 }, { 159,2349 }, { 160,2349 }, { 161,2349 },
 { 162,2349 }, { 163,2349 }, { 164,2349 }, { 165,2349 }, { 166,2349 },
 { 167,2349 }, { 168,2349 }, { 169,2349 }, { 170,2349 }, { 171,2349 },
 { 172,2349 }, { 173,2349 }, { 174,2349 }, { 175,2349 }, { 176,2349 },
 { 177,2349 }, { 178,2349 }, { 179,2349 }, { 180,2349 }, { 181,2349 },

 { 182,2349 }, { 183,2349 }, { 184,2349 }, { 185,2349 }, { 186,2349 },
 { 187,2349 }, { 188,2349 }, { 189,2349 }, { 190,2349 }, { 191,2349 },
 { 192,2349 }, { 193,2349 }, { 194,2349 }, { 195,2349 }, { 196,2349 },
 { 197,2349 }, { 198,2349 }, { 199,2349 }, { 200,2349 }, { 201,2349 },
 { 202,2349 }, { 203,2349 }, { 204,2349 }, { 205,2349 }, { 206,2349 },
 { 207,2349 }, { 208,2349 }, { 209,2349 }, { 210,2349 }, { 211,2349 },
 { 212,2349 }, { 213,2349 }, { 214,2349 }, { 215,2349 }, { 216,2349 },
 { 217,2349 }, { 218,2349 }, { 219,2349 }, { 220,2349 }, { 221,2349 },
 { 222,2349 }, { 223,2349 }, { 224,2349 }, { 225,2349 }, { 226,2349 },
 { 227,2349 }, { 228,2349 }, { 229,2349 }, { 230,2349 }, { 231,2349 },

 { 232,2349 }, { 233,2349 }, { 234,2349 }, { 235,2349 }, { 236,2349 },
 { 237,2349 }, { 238,2349 }, { 239,2349 }, { 240,2349 }, { 241,2349 },
 { 242,2349 }, { 243,2349 }, { 244,2349 }, { 245,2349 }, { 246,2349 },
 { 247,2349 }, { 248,2349 }, { 249,2349 }, { 250,2349 }, { 251,2349 },
 { 252,2349 }, { 253,2349 }, { 254,2349 }, { 255,2349 }, { 256,2349 },
 {   0,  36 }, {   0,10808 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   2 }, {   0,10783 }, {   0,  36 }, {   0,10781 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,   0 },
 {  49,   0 }, {  50,   0 }, {  51,   0 }, {  52,   0 }, {  53,   0 },
 {  54,   0 }, {  55,   0 }, {  56,   0 }, {  57,   0 }, {  33,2582 },
 {   0,   0 }, {  35,2582 }, {   0,   0 }, {  37,2582 }, {  38,2582 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  42,2582 }, {  43,2582 },
 {  69, 113 }, {  45,2582 }, {   0,   0 }, {  47,2582 }, {  46,-3025 },

 {   0,   0 }, {  48,2582 }, {  49,2582 }, {  50,2582 }, {  51,2582 },
 {  52,2582 }, {  53,2582 }, {  54,2582 }, {  55,2582 }, {  56,2582 },
 {  57,2582 }, {  60,2582 }, {  61,2582 }, {  62,2582 }, {  63,2582 },
 {  64,2582 }, {   0,  35 }, {   0,10717 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  69,  86 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, { 101, 113 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,  39 }, {   0,10695 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  94,2582 }, {   0,   0 }, {  96,2582 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, { 101,  86 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  46, -64 }, {   0,   0 },
 {  48,   0 }, {  49,   0 }, {  50,   0 }, {  51,   0 }, {  52,   0 },
 {  53,   0 }, {  54,   0 }, {  55,   0 }, {  56,   0 }, {  57,   0 },
 { 124,2582 }, {   0,   0 }, { 126,2582 }, {   0,  30 }, {   0,10655 },
 {   0,   0 }, {   0,   0 }, {  43,2518 }, {   0,   0 }, {  45,2518 },
 {   0,   0 }, {  69,  22 }, {  48,2560 }, {  49,2560 }, {  50,2560 },
 {  51,2560 }, {  52,2560 }, {  53,2560 }, {  54,2560 }, {  55,2560 },
 {  56,2560 }, {  57,2560 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  33,-550 }, {   0,   0 }, {  35,-550 },
 {   0,   0 }, {  37,-550 }, {  38,-550 }, { 101,  22 }, {   0,  29 },
 {   0,10614 }, {  42,-550 }, {  43,-550 }, {   0,   0 }, {  45,-550 },
 {   0,   0 }, {  47,-550 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  60,-550 },
 {  61,-550 }, {  62,-550 }, {  63,-550 }, {  64,-550 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  33,-591 }, {   0,   0 },
 {  35,-591 }, {   0,   0 }, {  37,-591 }, {  38,-591 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  42,-591 }, {  43,-591 }, {   0,   0 },
 {  45,-591 }, {   0,   0 }, {  47,-591 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  94,-550 }, {   0,   0 },
 {  96,-550 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  60,-591 }, {  61,-591 }, {  62,-591 }, {  63,-591 }, {  64,-591 },
 {   0,  41 }, {   0,10548 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, { 124,-550 }, {   0,   0 },
 { 126,-550 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  94,-591 },
 {   0,   0 }, {  96,-591 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  36,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,   0 },
 {  49,   0 }, {  50,   0 }, {  51,   0 }, {  52,   0 }, {  53,   0 },
 {  54,   0 }, {  55,   0 }, {  56,   0 }, {  57,   0 }, { 124,-591 },
 {   0,   0 }, { 126,-591 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {  65,   0 }, {  66,   0 }, {  67,   0 }, {  68,   0 },
 {  69,   0 }, {  70,   0 }, {  71,   0 }, {  72,   0 }, {  73,   0 },
 {  74,   0 }, {  75,   0 }, {  76,   0 }, {  77,   0 }, {  78,   0 },
 {  79,   0 }, {  80,   0 }, {  81,   0 }, {  82,   0 }, {  83,   0 },
 {  84,   0 }, {  85,   0 }, {  86,   0 }, {  87,   0 }, {  88,   0 },
 {  89,   0 }, {  90,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  95,   0 }, {   0,   0 }, {  97,   0 }, {  98,   0 },
 {  99,   0 }, { 100,   0 }, { 101,   0 }, { 102,   0 }, { 103,   0 },
 { 104,   0 }, { 105,   0 }, { 106,   0 }, { 107,   0 }, { 108,   0 },
 { 109,   0 }, { 110,   0 }, { 111,   0 }, { 112,   0 }, { 113,   0 },

 { 114,   0 }, { 115,   0 }, { 116,   0 }, { 117,   0 }, { 118,   0 },
 { 119,   0 }, { 120,   0 }, { 121,   0 }, { 122,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, { 128,   0 },
 { 129,   0 }, { 130,   0 }, { 131,   0 }, { 132,   0 }, { 133,   0 },
 { 134,   0 }, { 135,   0 }, { 136,   0 }, { 137,   0 }, { 138,   0 },
 { 139,   0 }, { 140,   0 }, { 141,   0 }, { 142,   0 }, { 143,   0 },
 { 144,   0 }, { 145,   0 }, { 146,   0 }, { 147,   0 }, { 148,   0 },
 { 149,   0 }, { 150,   0 }, { 151,   0 }, { 152,   0 }, { 153,   0 },
 { 154,   0 }, { 155,   0 }, { 156,   0 }, { 157,   0 }, { 158,   0 },
 { 159,   0 }, { 160,   0 }, { 161,   0 }, { 162,   0 }, { 163,   0 },

 { 164,   0 }, { 165,   0 }, { 166,   0 }, { 167,   0 }, { 168,   0 },
 { 169,   0 }, { 170,   0 }, { 171,   0 }, { 172,   0 }, { 173,   0 },
 { 174,   0 }, { 175,   0 }, { 176,   0 }, { 177,   0 }, { 178,   0 },
 { 179,   0 }, { 180,   0 }, { 181,   0 }, { 182,   0 }, { 183,   0 },
 { 184,   0 }, { 185,   0 }, { 186,   0 }, { 187,   0 }, { 188,   0 },
 { 189,   0 }, { 190,   0 }, { 191,   0 }, { 192,   0 }, { 193,   0 },
 { 194,   0 }, { 195,   0 }, { 196,   0 }, { 197,   0 }, { 198,   0 },
 { 199,   0 }, { 200,   0 }, { 201,   0 }, { 202,   0 }, { 203,   0 },
 { 204,   0 }, { 205,   0 }, { 206,   0 }, { 207,   0 }, { 208,   0 },
 { 209,   0 }, { 210,   0 }, { 211,   0 }, { 212,   0 }, { 213,   0 },

 { 214,   0 }, { 215,   0 }, { 216,   0 }, { 217,   0 }, { 218,   0 },
 { 219,   0 }, { 220,   0 }, { 221,   0 }, { 222,   0 }, { 223,   0 },
 { 224,   0 }, { 225,   0 }, { 226,   0 }, { 227,   0 }, { 228,   0 },
 { 229,   0 }, { 230,   0 }, { 231,   0 }, { 232,   0 }, { 233,   0 },
 { 234,   0 }, { 235,   0 }, { 236,   0 }, { 237,   0 }, { 238,   0 },
 { 239,   0 }, { 240,   0 }, { 241,   0 }, { 242,   0 }, { 243,   0 },
 { 244,   0 }, { 245,   0 }, { 246,   0 }, { 247,   0 }, { 248,   0 },
 { 249,   0 }, { 250,   0 }, { 251,   0 }, { 252,   0 }, { 253,   0 },
 { 254,   0 }, { 255,   0 }, {   0,  12 }, {   0,10291 }, {   1,   0 },
 {   2,   0 }, {   3,   0 }, {   4,   0 }, {   5,   0 }, {   6,   0 },

 {   7,   0 }, {   8,   0 }, {   9,   0 }, {  10,   0 }, {  11,   0 },
 {  12,   0 }, {  13,   0 }, {  14,   0 }, {  15,   0 }, {  16,   0 },
 {  17,   0 }, {  18,   0 }, {  19,   0 }, {  20,   0 }, {  21,   0 },
 {  22,   0 }, {  23,   0 }, {  24,   0 }, {  25,   0 }, {  26,   0 },
 {  27,   0 }, {  28,   0 }, {  29,   0 }, {  30,   0 }, {  31,   0 },
 {  32,   0 }, {  33,   0 }, {  34,   0 }, {  35,   0 }, {  36,   0 },
 {  37,   0 }, {  38,   0 }, {   0,   0 }, {  40,   0 }, {  41,   0 },
 {  42,   0 }, {  43,   0 }, {  44,   0 }, {  45,   0 }, {  46,   0 },
 {  47,   0 }, {  48,   0 }, {  49,   0 }, {  50,   0 }, {  51,   0 },
 {  52,   0 }, {  53,   0 }, {  54,   0 }, {  55,   0 }, {  56,   0 },

 {  57,   0 }, {  58,   0 }, {  59,   0 }, {  60,   0 }, {  61,   0 },
 {  62,   0 }, {  63,   0 }, {  64,   0 }, {  65,   0 }, {  66,   0 },
 {  67,   0 }, {  68,   0 }, {  69,   0 }, {  70,   0 }, {  71,   0 },
 {  72,   0 }, {  73,   0 }, {  74,   0 }, {  75,   0 }, {  76,   0 },
 {  77,   0 }, {  78,   0 }, {  79,   0 }, {  80,   0 }, {  81,   0 },
 {  82,   0 }, {  83,   0 }, {  84,   0 }, {  85,   0 }, {  86,   0 },
 {  87,   0 }, {  88,   0 }, {  89,   0 }, {  90,   0 }, {  91,   0 },
 {  92,   0 }, {  93,   0 }, {  94,   0 }, {  95,   0 }, {  96,   0 },
 {  97,   0 }, {  98,   0 }, {  99,   0 }, { 100,   0 }, { 101,   0 },
 { 102,   0 }, { 103,   0 }, { 104,   0 }, { 105,   0 }, { 106,   0 },

 { 107,   0 }, { 108,   0 }, { 109,   0 }, { 110,   0 }, { 111,   0 },
 { 112,   0 }, { 113,   0 }, { 114,   0 }, { 115,   0 }, { 116,   0 },
 { 117,   0 }, { 118,   0 }, { 119,   0 }, { 120,   0 }, { 121,   0 },
 { 122,   0 }, { 123,   0 }, { 124,   0 }, { 125,   0 }, { 126,   0 },
 { 127,   0 }, { 128,   0 }, { 129,   0 }, { 130,   0 }, { 131,   0 },
 { 132,   0 }, { 133,   0 }, { 134,   0 }, { 135,   0 }, { 136,   0 },
 { 137,   0 }, { 138,   0 }, { 139,   0 }, { 140,   0 }, { 141,   0 },
 { 142,   0 }, { 143,   0 }, { 144,   0 }, { 145,   0 }, { 146,   0 },
 { 147,   0 }, { 148,   0 }, { 149,   0 }, { 150,   0 }, { 151,   0 },
 { 152,   0 }, { 153,   0 }, { 154,   0 }, { 155,   0 }, { 156,   0 },

 { 157,   0 }, { 158,   0 }, { 159,   0 }, { 160,   0 }, { 161,   0 },
 { 162,   0 }, { 163,   0 }, { 164,   0 }, { 165,   0 }, { 166,   0 },
 { 167,   0 }, { 168,   0 }, { 169,   0 }, { 170,   0 }, { 171,   0 },
 { 172,   0 }, { 173,   0 }, { 174,   0 }, { 175,   0 }, { 176,   0 },
 { 177,   0 }, { 178,   0 }, { 179,   0 }, { 180,   0 }, { 181,   0 },
 { 182,   0 }, { 183,   0 }, { 184,   0 }, { 185,   0 }, { 186,   0 },
 { 187,   0 }, { 188,   0 }, { 189,   0 }, { 190,   0 }, { 191,   0 },
 { 192,   0 }, { 193,   0 }, { 194,   0 }, { 195,   0 }, { 196,   0 },
 { 197,   0 }, { 198,   0 }, { 199,   0 }, { 200,   0 }, { 201,   0 },
 { 202,   0 }, { 203,   0 }, { 204,   0 }, { 205,   0 }, { 206,   0 },

 { 207,   0 }, { 208,   0 }, { 209,   0 }, { 210,   0 }, { 211,   0 },
 { 212,   0 }, { 213,   0 }, { 214,   0 }, { 215,   0 }, { 216,   0 },
 { 217,   0 }, { 218,   0 }, { 219,   0 }, { 220,   0 }, { 221,   0 },
 { 222,   0 }, { 223,   0 }, { 224,   0 }, { 225,   0 }, { 226,   0 },
 { 227,   0 }, { 228,   0 }, { 229,   0 }, { 230,   0 }, { 231,   0 },
 { 232,   0 }, { 233,   0 }, { 234,   0 }, { 235,   0 }, { 236,   0 },
 { 237,   0 }, { 238,   0 }, { 239,   0 }, { 240,   0 }, { 241,   0 },
 { 242,   0 }, { 243,   0 }, { 244,   0 }, { 245,   0 }, { 246,   0 },
 { 247,   0 }, { 248,   0 }, { 249,   0 }, { 250,   0 }, { 251,   0 },
 { 252,   0 }, { 253,   0 }, { 254,   0 }, { 255,   0 }, { 256,   0 },

 {   0,   9 }, {   0,10033 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   9 }, {   0,10028 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   9,   0 }, {  10,   5 }, {   0,   0 }, {  12,   0 }, {  13,   5 },
 {   9,1925 }, {  10,1925 }, {   0,   0 }, {  12,1925 }, {  13,1925 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  32,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  32,1925 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  39,-3759 }, {  45,-3871 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {  45,-3738 }, {   0,   5 }, {   0,9981 }, {   1,   0 },
 {   2,   0 }, {   3,   0 }, {   4,   0 }, {   5,   0 }, {   6,   0 },
 {   7,   0 }, {   8,   0 }, {   9,   0 }, {  10,   0 }, {  11,   0 },
 {  12,   0 }, {  13,   0 }, {  14,   0 }, {  15,   0 }, {  16,   0 },
 {  17,   0 }, {  18,   0 }, {  19,   0 }, {  20,   0 }, {  21,   0 },
 {  22,   0 }, {  23,   0 }, {  24,   0 }, {  25,   0 }, {  26,   0 },
 {  27,   0 }, {  28,   0 }, {  29,   0 }, {  30,   0 }, {  31,   0 },
 {  32,   0 }, {  33,   0 }, {  34,   0 }, {  35,   0 }, {  36,   0 },
 {  37,   0 }, {  38,   0 }, {  39,   0 }, {  40,   0 }, {  41,   0 },
 {   0,   0 }, {  43,   0 }, {  44,   0 }, {  45,   0 }, {  46,   0 },

 {   0,   0 }, {  48,   0 }, {  49,   0 }, {  50,   0 }, {  51,   0 },
 {  52,   0 }, {  53,   0 }, {  54,   0 }, {  55,   0 }, {  56,   0 },
 {  57,   0 }, {  58,   0 }, {  59,   0 }, {  60,   0 }, {  61,   0 },
 {  62,   0 }, {  63,   0 }, {  64,   0 }, {  65,   0 }, {  66,   0 },
 {  67,   0 }, {  68,   0 }, {  69,   0 }, {  70,   0 }, {  71,   0 },
 {  72,   0 }, {  73,   0 }, {  74,   0 }, {  75,   0 }, {  76,   0 },
 {  77,   0 }, {  78,   0 }, {  79,   0 }, {  80,   0 }, {  81,   0 },
 {  82,   0 }, {  83,   0 }, {  84,   0 }, {  85,   0 }, {  86,   0 },
 {  87,   0 }, {  88,   0 }, {  89,   0 }, {  90,   0 }, {  91,   0 },
 {  92,   0 }, {  93,   0 }, {  94,   0 }, {  95,   0 }, {  96,   0 },

 {  97,   0 }, {  98,   0 }, {  99,   0 }, { 100,   0 }, { 101,   0 },
 { 102,   0 }, { 103,   0 }, { 104,   0 }, { 105,   0 }, { 106,   0 },
 { 107,   0 }, { 108,   0 }, { 109,   0 }, { 110,   0 }, { 111,   0 },
 { 112,   0 }, { 113,   0 }, { 114,   0 }, { 115,   0 }, { 116,   0 },
 { 117,   0 }, { 118,   0 }, { 119,   0 }, { 120,   0 }, { 121,   0 },
 { 122,   0 }, { 123,   0 }, { 124,   0 }, { 125,   0 }, { 126,   0 },
 { 127,   0 }, { 128,   0 }, { 129,   0 }, { 130,   0 }, { 131,   0 },
 { 132,   0 }, { 133,   0 }, { 134,   0 }, { 135,   0 }, { 136,   0 },
 { 137,   0 }, { 138,   0 }, { 139,   0 }, { 140,   0 }, { 141,   0 },
 { 142,   0 }, { 143,   0 }, { 144,   0 }, { 145,   0 }, { 146,   0 },

 { 147,   0 }, { 148,   0 }, { 149,   0 }, { 150,   0 }, { 151,   0 },
 { 152,   0 }, { 153,   0 }, { 154,   0 }, { 155,   0 }, { 156,   0 },
 { 157,   0 }, { 158,   0 }, { 159,   0 }, { 160,   0 }, { 161,   0 },
 { 162,   0 }, { 163,   0 }, { 164,   0 }, { 165,   0 }, { 166,   0 },
 { 167,   0 }, { 168,   0 }, { 169,   0 }, { 170,   0 }, { 171,   0 },
 { 172,   0 }, { 173,   0 }, { 174,   0 }, { 175,   0 }, { 176,   0 },
 { 177,   0 }, { 178,   0 }, { 179,   0 }, { 180,   0 }, { 181,   0 },
 { 182,   0 }, { 183,   0 }, { 184,   0 }, { 185,   0 }, { 186,   0 },
 { 187,   0 }, { 188,   0 }, { 189,   0 }, { 190,   0 }, { 191,   0 },
 { 192,   0 }, { 193,   0 }, { 194,   0 }, { 195,   0 }, { 196,   0 },

 { 197,   0 }, { 198,   0 }, { 199,   0 }, { 200,   0 }, { 201,   0 },
 { 202,   0 }, { 203,   0 }, { 204,   0 }, { 205,   0 }, { 206,   0 },
 { 207,   0 }, { 208,   0 }, { 209,   0 }, { 210,   0 }, { 211,   0 },
 { 212,   0 }, { 213,   0 }, { 214,   0 }, { 215,   0 }, { 216,   0 },
 { 217,   0 }, { 218,   0 }, { 219,   0 }, { 220,   0 }, { 221,   0 },
 { 222,   0 }, { 223,   0 }, { 224,   0 }, { 225,   0 }, { 226,   0 },
 { 227,   0 }, { 228,   0 }, { 229,   0 }, { 230,   0 }, { 231,   0 },
 { 232,   0 }, { 233,   0 }, { 234,   0 }, { 235,   0 }, { 236,   0 },
 { 237,   0 }, { 238,   0 }, { 239,   0 }, { 240,   0 }, { 241,   0 },
 { 242,   0 }, { 243,   0 }, { 244,   0 }, { 245,   0 }, { 246,   0 },

 { 247,   0 }, { 248,   0 }, { 249,   0 }, { 250,   0 }, { 251,   0 },
 { 252,   0 }, { 253,   0 }, { 254,   0 }, { 255,   0 }, { 256,   0 },
 {   0,   3 }, {   0,9723 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  33,1925 },
 {   0,   0 }, {  35,1925 }, {   0,   0 }, {  37,1925 }, {  38,1925 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  42,1925 }, {  43,1925 },
 {   0,   0 }, {  45,1925 }, {   0,   0 }, {  47,1925 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  60,1925 }, {  61,1925 }, {  62,1925 }, {  63,1925 },
 {  64,1925 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  94,1925 }, {   0,   0 }, {  96,1925 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 { 124,1925 }, {   0,   0 }, { 126,1925 }, {   0,  27 }, {   0,9595 },
 {   1,   0 }, {   2,   0 }, {   3,   0 }, {   4,   0 }, {   5,   0 },
 {   6,   0 }, {   7,   0 }, {   8,   0 }, {   9,   0 }, {  10,   0 },

 {  11,   0 }, {  12,   0 }, {  13,   0 }, {  14,   0 }, {  15,   0 },
 {  16,   0 }, {  17,   0 }, {  18,   0 }, {  19,   0 }, {  20,   0 },
 {  21,   0 }, {  22,   0 }, {  23,   0 }, {  24,   0 }, {  25,   0 },
 {  26,   0 }, {  27,   0 }, {  28,   0 }, {  29,   0 }, {  30,   0 },
 {  31,   0 }, {  32,   0 }, {  33,   0 }, {   0,   0 }, {  35,   0 },
 {  36,   0 }, {  37,   0 }, {  38,   0 }, {  39,   0 }, {  40,   0 },
 {  41,   0 }, {  42,   0 }, {  43,   0 }, {  44,   0 }, {  45,   0 },
 {  46,   0 }, {  47,   0 }, {  48,   0 }, {  49,   0 }, {  50,   0 },
 {  51,   0 }, {  52,   0 }, {  53,   0 }, {  54,   0 }, {  55,   0 },
 {  56,   0 }, {  57,   0 }, {  58,   0 }, {  59,   0 }, {  60,   0 },

 {  61,   0 }, {  62,   0 }, {  63,   0 }, {  64,   0 }, {  65,   0 },
 {  66,   0 }, {  67,   0 }, {  68,   0 }, {  69,   0 }, {  70,   0 },
 {  71,   0 }, {  72,   0 }, {  73,   0 }, {  74,   0 }, {  75,   0 },
 {  76,   0 }, {  77,   0 }, {  78,   0 }, {  79,   0 }, {  80,   0 },
 {  81,   0 }, {  82,   0 }, {  83,   0 }, {  84,   0 }, {  85,   0 },
 {  86,   0 }, {  87,   0 }, {  88,   0 }, {  89,   0 }, {  90,   0 },
 {  91,   0 }, {  92,   0 }, {  93,   0 }, {  94,   0 }, {  95,   0 },
 {  96,   0 }, {  97,   0 }, {  98,   0 }, {  99,   0 }, { 100,   0 },
 { 101,   0 }, { 102,   0 }, { 103,   0 }, { 104,   0 }, { 105,   0 },
 { 106,   0 }, { 107,   0 }, { 108,   0 }, { 109,   0 }, { 110,   0 },

 { 111,   0 }, { 112,   0 }, { 113,   0 }, { 114,   0 }, { 115,   0 },
 { 116,   0 }, { 117,   0 }, { 118,   0 }, { 119,   0 }, { 120,   0 },
 { 121,   0 }, { 122,   0 }, { 123,   0 }, { 124,   0 }, { 125,   0 },
 { 126,   0 }, { 127,   0 }, { 128,   0 }, { 129,   0 }, { 130,   0 },
 { 131,   0 }, { 132,   0 }, { 133,   0 }, { 134,   0 }, { 135,   0 },
 { 136,   0 }, { 137,   0 }, { 138,   0 }, { 139,   0 }, { 140,   0 },
 { 141,   0 }, { 142,   0 }, { 143,   0 }, { 144,   0 }, { 145,   0 },
 { 146,   0 }, { 147,   0 }, { 148,   0 }, { 149,   0 }, { 150,   0 },
 { 151,   0 }, { 152,   0 }, { 153,   0 }, { 154,   0 }, { 155,   0 },
 { 156,   0 }, { 157,   0 }, { 158,   0 }, { 159,   0 }, { 160,   0 },

 { 161,   0 }, { 162,   0 }, { 163,   0 }, { 164,   0 }, { 165,   0 },
 { 166,   0 }, { 167,   0 }, { 168,   0 }, { 169,   0 }, { 170,   0 },
 { 171,   0 }, { 172,   0 }, { 173,   0 }, { 174,   0 }, { 175,   0 },
 { 176,   0 }, { 177,   0 }, { 178,   0 }, { 179,   0 }, { 180,   0 },
 { 181,   0 }, { 182,   0 }, { 183,   0 }, { 184,   0 }, { 185,   0 },
 { 186,   0 }, { 187,   0 }, { 188,   0 }, { 189,   0 }, { 190,   0 },
 { 191,   0 }, { 192,   0 }, { 193,   0 }, { 194,   0 }, { 195,   0 },
 { 196,   0 }, { 197,   0 }, { 198,   0 }, { 199,   0 }, { 200,   0 },
 { 201,   0 }, { 202,   0 }, { 203,   0 }, { 204,   0 }, { 205,   0 },
 { 206,   0 }, { 207,   0 }, { 208,   0 }, { 209,   0 }, { 210,   0 },

 { 211,   0 }, { 212,   0 }, { 213,   0 }, { 214,   0 }, { 215,   0 },
 { 216,   0 }, { 217,   0 }, { 218,   0 }, { 219,   0 }, { 220,   0 },
 { 221,   0 }, { 222,   0 }, { 223,   0 }, { 224,   0 }, { 225,   0 },
 { 226,   0 }, { 227,   0 }, { 228,   0 }, { 229,   0 }, { 230,   0 },
 { 231,   0 }, { 232,   0 }, { 233,   0 }, { 234,   0 }, { 235,   0 },
 { 236,   0 }, { 237,   0 }, { 238,   0 }, { 239,   0 }, { 240,   0 },
 { 241,   0 }, { 242,   0 }, { 243,   0 }, { 244,   0 }, { 245,   0 },
 { 246,   0 }, { 247,   0 }, { 248,   0 }, { 249,   0 }, { 250,   0 },
 { 251,   0 }, { 252,   0 }, { 253,   0 }, { 254,   0 }, { 255,   0 },
 { 256,   0 }, {   0,  11 }, {   0,9337 }, {   1,   0 }, {   2,   0 },

 {   3,   0 }, {   4,   0 }, {   5,   0 }, {   6,   0 }, {   7,   0 },
 {   8,   0 }, {   9,   0 }, {  10,   0 }, {  11,   0 }, {  12,   0 },
 {  13,   0 }, {  14,   0 }, {  15,   0 }, {  16,   0 }, {  17,   0 },
 {  18,   0 }, {  19,   0 }, {  20,   0 }, {  21,   0 }, {  22,   0 },
 {  23,   0 }, {  24,   0 }, {  25,   0 }, {  26,   0 }, {  27,   0 },
 {  28,   0 }, {  29,   0 }, {  30,   0 }, {  31,   0 }, {  32,   0 },
 {  33,   0 }, {  34,   0 }, {  35,   0 }, {  36,   0 }, {  37,   0 },
 {  38,   0 }, {   0,   0 }, {  40,   0 }, {  41,   0 }, {  42,   0 },
 {  43,   0 }, {  44,   0 }, {  45,   0 }, {  46,   0 }, {  47,   0 },
 {  48,   0 }, {  49,   0 }, {  50,   0 }, {  51,   0 }, {  52,   0 },

 {  53,   0 }, {  54,   0 }, {  55,   0 }, {  56,   0 }, {  57,   0 },
 {  58,   0 }, {  59,   0 }, {  60,   0 }, {  61,   0 }, {  62,   0 },
 {  63,   0 }, {  64,   0 }, {  65,   0 }, {  66,   0 }, {  67,   0 },
 {  68,   0 }, {  69,   0 }, {  70,   0 }, {  71,   0 }, {  72,   0 },
 {  73,   0 }, {  74,   0 }, {  75,   0 }, {  76,   0 }, {  77,   0 },
 {  78,   0 }, {  79,   0 }, {  80,   0 }, {  81,   0 }, {  82,   0 },
 {  83,   0 }, {  84,   0 }, {  85,   0 }, {  86,   0 }, {  87,   0 },
 {  88,   0 }, {  89,   0 }, {  90,   0 }, {  91,   0 }, {  92,   0 },
 {  93,   0 }, {  94,   0 }, {  95,   0 }, {  96,   0 }, {  97,   0 },
 {  98,   0 }, {  99,   0 }, { 100,   0 }, { 101,   0 }, { 102,   0 },

 { 103,   0 }, { 104,   0 }, { 105,   0 }, { 106,   0 }, { 107,   0 },
 { 108,   0 }, { 109,   0 }, { 110,   0 }, { 111,   0 }, { 112,   0 },
 { 113,   0 }, { 114,   0 }, { 115,   0 }, { 116,   0 }, { 117,   0 },
 { 118,   0 }, { 119,   0 }, { 120,   0 }, { 121,   0 }, { 122,   0 },
 { 123,   0 }, { 124,   0 }, { 125,   0 }, { 126,   0 }, { 127,   0 },
 { 128,   0 }, { 129,   0 }, { 130,   0 }, { 131,   0 }, { 132,   0 },
 { 133,   0 }, { 134,   0 }, { 135,   0 }, { 136,   0 }, { 137,   0 },
 { 138,   0 }, { 139,   0 }, { 140,   0 }, { 141,   0 }, { 142,   0 },
 { 143,   0 }, { 144,   0 }, { 145,   0 }, { 146,   0 }, { 147,   0 },
 { 148,   0 }, { 149,   0 }, { 150,   0 }, { 151,   0 }, { 152,   0 },

 { 153,   0 }, { 154,   0 }, { 155,   0 }, { 156,   0 }, { 157,   0 },
 { 158,   0 }, { 159,   0 }, { 160,   0 }, { 161,   0 }, { 162,   0 },
 { 163,   0 }, { 164,   0 }, { 165,   0 }, { 166,   0 }, { 167,   0 },
 { 168,   0 }, { 169,   0 }, { 170,   0 }, { 171,   0 }, { 172,   0 },
 { 173,   0 }, { 174,   0 }, { 175,   0 }, { 176,   0 }, { 177,   0 },
 { 178,   0 }, { 179,   0 }, { 180,   0 }, { 181,   0 }, { 182,   0 },
 { 183,   0 }, { 184,   0 }, { 185,   0 }, { 186,   0 }, { 187,   0 },
 { 188,   0 }, { 189,   0 }, { 190,   0 }, { 191,   0 }, { 192,   0 },
 { 193,   0 }, { 194,   0 }, { 195,   0 }, { 196,   0 }, { 197,   0 },
 { 198,   0 }, { 199,   0 }, { 200,   0 }, { 201,   0 }, { 202,   0 },

 { 203,   0 }, { 204,   0 }, { 205,   0 }, { 206,   0 }, { 207,   0 },
 { 208,   0 }, { 209,   0 }, { 210,   0 }, { 211,   0 }, { 212,   0 },
 { 213,   0 }, { 214,   0 }, { 215,   0 }, { 216,   0 }, { 217,   0 },
 { 218,   0 }, { 219,   0 }, { 220,   0 }, { 221,   0 }, { 222,   0 },
 { 223,   0 }, { 224,   0 }, { 225,   0 }, { 226,   0 }, { 227,   0 },
 { 228,   0 }, { 229,   0 }, { 230,   0 }, { 231,   0 }, { 232,   0 },
 { 233,   0 }, { 234,   0 }, { 235,   0 }, { 236,   0 }, { 237,   0 },
 { 238,   0 }, { 239,   0 }, { 240,   0 }, { 241,   0 }, { 242,   0 },
 { 243,   0 }, { 244,   0 }, { 245,   0 }, { 246,   0 }, { 247,   0 },
 { 248,   0 }, { 249,   0 }, { 250,   0 }, { 251,   0 }, { 252,   0 },

 { 253,   0 }, { 254,   0 }, { 255,   0 }, { 256,   0 }, {   0,  16 },
 {   0,9079 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,  16 },
 {   0,9074 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   9,   0 },
 {  10,   5 }, {   0,   0 }, {  12,   0 }, {  13,   5 }, {   9,1283 },
 {  10,1283 }, {   0,   0 }, {  12,1283 }, {  13,1283 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  32,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  32,1283 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  39,-4690 },

 {  45,-4755 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  45,-4682 }, {   0,  22 }, {   0,9027 }, {   1,   0 }, {   2,   0 },
 {   3,   0 }, {   4,   0 }, {   5,   0 }, {   6,   0 }, {   7,   0 },
 {   8,   0 }, {   9,   0 }, {  10,   0 }, {  11,   0 }, {  12,   0 },
 {  13,   0 }, {  14,   0 }, {  15,   0 }, {  16,   0 }, {  17,   0 },
 {  18,   0 }, {  19,   0 }, {  20,   0 }, {  21,   0 }, {  22,   0 },
 {  23,   0 }, {  24,   0 }, {  25,   0 }, {  26,   0 }, {  27,   0 },
 {  28,   0 }, {  29,   0 }, {  30,   0 }, {  31,   0 }, {  32,   0 },
 {  33,   0 }, {  34,   0 }, {  35,   0 }, {  36,   0 }, {  37,   0 },
 {  38,   0 }, {   0,   0 }, {  40,   0 }, {  41,   0 }, {  42,   0 },

 {  43,   0 }, {  44,   0 }, {  45,   0 }, {  46,   0 }, {  47,   0 },
 {  48,   0 }, {  49,   0 }, {  50,   0 }, {  51,   0 }, {  52,   0 },
 {  53,   0 }, {  54,   0 }, {  55,   0 }, {  56,   0 }, {  57,   0 },
 {  58,   0 }, {  59,   0 }, {  60,   0 }, {  61,   0 }, {  62,   0 },
 {  63,   0 }, {  64,   0 }, {  65,   0 }, {  66,   0 }, {  67,   0 },
 {  68,   0 }, {  69,   0 }, {  70,   0 }, {  71,   0 }, {  72,   0 },
 {  73,   0 }, {  74,   0 }, {  75,   0 }, {  76,   0 }, {  77,   0 },
 {  78,   0 }, {  79,   0 }, {  80,   0 }, {  81,   0 }, {  82,   0 },
 {  83,   0 }, {  84,   0 }, {  85,   0 }, {  86,   0 }, {  87,   0 },
 {  88,   0 }, {  89,   0 }, {  90,   0 }, {  91,   0 }, {  92,   0 },

 {  93,   0 }, {  94,   0 }, {  95,   0 }, {  96,   0 }, {  97,   0 },
 {  98,   0 }, {  99,   0 }, { 100,   0 }, { 101,   0 }, { 102,   0 },
 { 103,   0 }, { 104,   0 }, { 105,   0 }, { 106,   0 }, { 107,   0 },
 { 108,   0 }, { 109,   0 }, { 110,   0 }, { 111,   0 }, { 112,   0 },
 { 113,   0 }, { 114,   0 }, { 115,   0 }, { 116,   0 }, { 117,   0 },
 { 118,   0 }, { 119,   0 }, { 120,   0 }, { 121,   0 }, { 122,   0 },
 { 123,   0 }, { 124,   0 }, { 125,   0 }, { 126,   0 }, { 127,   0 },
 { 128,   0 }, { 129,   0 }, { 130,   0 }, { 131,   0 }, { 132,   0 },
 { 133,   0 }, { 134,   0 }, { 135,   0 }, { 136,   0 }, { 137,   0 },
 { 138,   0 }, { 139,   0 }, { 140,   0 }, { 141,   0 }, { 142,   0 },

 { 143,   0 }, { 144,   0 }, { 145,   0 }, { 146,   0 }, { 147,   0 },
 { 148,   0 }, { 149,   0 }, { 150,   0 }, { 151,   0 }, { 152,   0 },
 { 153,   0 }, { 154,   0 }, { 155,   0 }, { 156,   0 }, { 157,   0 },
 { 158,   0 }, { 159,   0 }, { 160,   0 }, { 161,   0 }, { 162,   0 },
 { 163,   0 }, { 164,   0 }, { 165,   0 }, { 166,   0 }, { 167,   0 },
 { 168,   0 }, { 169,   0 }, { 170,   0 }, { 171,   0 }, { 172,   0 },
 { 173,   0 }, { 174,   0 }, { 175,   0 }, { 176,   0 }, { 177,   0 },
 { 178,   0 }, { 179,   0 }, { 180,   0 }, { 181,   0 }, { 182,   0 },
 { 183,   0 }, { 184,   0 }, { 185,   0 }, { 186,   0 }, { 187,   0 },
 { 188,   0 }, { 189,   0 }, { 190,   0 }, { 191,   0 }, { 192,   0 },

 { 193,   0 }, { 194,   0 }, { 195,   0 }, { 196,   0 }, { 197,   0 },
 { 198,   0 }, { 199,   0 }, { 200,   0 }, { 201,   0 }, { 202,   0 },
 { 203,   0 }, { 204,   0 }, { 205,   0 }, { 206,   0 }, { 207,   0 },
 { 208,   0 }, { 209,   0 }, { 210,   0 }, { 211,   0 }, { 212,   0 },
 { 213,   0 }, { 214,   0 }, { 215,   0 }, { 216,   0 }, { 217,   0 },
 { 218,   0 }, { 219,   0 }, { 220,   0 }, { 221,   0 }, { 222,   0 },
 { 223,   0 }, { 224,   0 }, { 225,   0 }, { 226,   0 }, { 227,   0 },
 { 228,   0 }, { 229,   0 }, { 230,   0 }, { 231,   0 }, { 232,   0 },
 { 233,   0 }, { 234,   0 }, { 235,   0 }, { 236,   0 }, { 237,   0 },
 { 238,   0 }, { 239,   0 }, { 240,   0 }, { 241,   0 }, { 242,   0 },

 { 243,   0 }, { 244,   0 }, { 245,   0 }, { 246,   0 }, { 247,   0 },
 { 248,   0 }, { 249,   0 }, { 250,   0 }, { 251,   0 }, { 252,   0 },
 { 253,   0 }, { 254,   0 }, { 255,   0 }, { 256,   0 }, {   0,  19 },
 {   0,8769 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,  19 },
 {   0,8764 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   9,   0 },
 {  10,   5 }, {   0,   0 }, {  12,   0 }, {  13,   5 }, {   9,1352 },
 {  10,1352 }, {   0,   0 }, {  12,1352 }, {  13,1352 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  32,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {  32,1352 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  39,-4963 },
 {  45,-5045 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  45,-4959 }, {   0,   1 }, {   0,8717 }, {   1,   0 }, {   2,   0 },
 {   3,   0 }, {   4,   0 }, {   5,   0 }, {   6,   0 }, {   7,   0 },
 {   8,   0 }, {   9,   0 }, {   0,   0 }, {  11,   0 }, {  12,   0 },
 {   0,   0 }, {  14,   0 }, {  15,   0 }, {  16,   0 }, {  17,   0 },
 {  18,   0 }, {  19,   0 }, {  20,   0 }, {  21,   0 }, {  22,   0 },
 {  23,   0 }, {  24,   0 }, {  25,   0 }, {  26,   0 }, {  27,   0 },
 {  28,   0 }, {  29,   0 }, {  30,   0 }, {  31,   0 }, {  32,   0 },

 {  33,   0 }, {  34,   0 }, {  35,   0 }, {  36,   0 }, {  37,   0 },
 {  38,   0 }, {  39,   0 }, {  40,   0 }, {  41,   0 }, {  42,   0 },
 {  43,   0 }, {  44,   0 }, {  45,   0 }, {  46,   0 }, {  47,   0 },
 {  48,   0 }, {  49,   0 }, {  50,   0 }, {  51,   0 }, {  52,   0 },
 {  53,   0 }, {  54,   0 }, {  55,   0 }, {  56,   0 }, {  57,   0 },
 {  58,   0 }, {  59,   0 }, {  60,   0 }, {  61,   0 }, {  62,   0 },
 {  63,   0 }, {  64,   0 }, {  65,   0 }, {  66,   0 }, {  67,   0 },
 {  68,   0 }, {  69,   0 }, {  70,   0 }, {  71,   0 }, {  72,   0 },
 {  73,   0 }, {  74,   0 }, {  75,   0 }, {  76,   0 }, {  77,   0 },
 {  78,   0 }, {  79,   0 }, {  80,   0 }, {  81,   0 }, {  82,   0 },

 {  83,   0 }, {  84,   0 }, {  85,   0 }, {  86,   0 }, {  87,   0 },
 {  88,   0 }, {  89,   0 }, {  90,   0 }, {  91,   0 }, {  92,   0 },
 {  93,   0 }, {  94,   0 }, {  95,   0 }, {  96,   0 }, {  97,   0 },
 {  98,   0 }, {  99,   0 }, { 100,   0 }, { 101,   0 }, { 102,   0 },
 { 103,   0 }, { 104,   0 }, { 105,   0 }, { 106,   0 }, { 107,   0 },
 { 108,   0 }, { 109,   0 }, { 110,   0 }, { 111,   0 }, { 112,   0 },
 { 113,   0 }, { 114,   0 }, { 115,   0 }, { 116,   0 }, { 117,   0 },
 { 118,   0 }, { 119,   0 }, { 120,   0 }, { 121,   0 }, { 122,   0 },
 { 123,   0 }, { 124,   0 }, { 125,   0 }, { 126,   0 }, { 127,   0 },
 { 128,   0 }, { 129,   0 }, { 130,   0 }, { 131,   0 }, { 132,   0 },

 { 133,   0 }, { 134,   0 }, { 135,   0 }, { 136,   0 }, { 137,   0 },
 { 138,   0 }, { 139,   0 }, { 140,   0 }, { 141,   0 }, { 142,   0 },
 { 143,   0 }, { 144,   0 }, { 145,   0 }, { 146,   0 }, { 147,   0 },
 { 148,   0 }, { 149,   0 }, { 150,   0 }, { 151,   0 }, { 152,   0 },
 { 153,   0 }, { 154,   0 }, { 155,   0 }, { 156,   0 }, { 157,   0 },
 { 158,   0 }, { 159,   0 }, { 160,   0 }, { 161,   0 }, { 162,   0 },
 { 163,   0 }, { 164,   0 }, { 165,   0 }, { 166,   0 }, { 167,   0 },
 { 168,   0 }, { 169,   0 }, { 170,   0 }, { 171,   0 }, { 172,   0 },
 { 173,   0 }, { 174,   0 }, { 175,   0 }, { 176,   0 }, { 177,   0 },
 { 178,   0 }, { 179,   0 }, { 180,   0 }, { 181,   0 }, { 182,   0 },

 { 183,   0 }, { 184,   0 }, { 185,   0 }, { 186,   0 }, { 187,   0 },
 { 188,   0 }, { 189,   0 }, { 190,   0 }, { 191,   0 }, { 192,   0 },
 { 193,   0 }, { 194,   0 }, { 195,   0 }, { 196,   0 }, { 197,   0 },
 { 198,   0 }, { 199,   0 }, { 200,   0 }, { 201,   0 }, { 202,   0 },
 { 203,   0 }, { 204,   0 }, { 205,   0 }, { 206,   0 }, { 207,   0 },
 { 208,   0 }, { 209,   0 }, { 210,   0 }, { 211,   0 }, { 212,   0 },
 { 213,   0 }, { 214,   0 }, { 215,   0 }, { 216,   0 }, { 217,   0 },
 { 218,   0 }, { 219,   0 }, { 220,   0 }, { 221,   0 }, { 222,   0 },
 { 223,   0 }, { 224,   0 }, { 225,   0 }, { 226,   0 }, { 227,   0 },
 { 228,   0 }, { 229,   0 }, { 230,   0 }, { 231,   0 }, { 232,   0 },

 { 233,   0 }, { 234,   0 }, { 235,   0 }, { 236,   0 }, { 237,   0 },
 { 238,   0 }, { 239,   0 }, { 240,   0 }, { 241,   0 }, { 242,   0 },
 { 243,   0 }, { 244,   0 }, { 245,   0 }, { 246,   0 }, { 247,   0 },
 { 248,   0 }, { 249,   0 }, { 250,   0 }, { 251,   0 }, { 252,   0 },
 { 253,   0 }, { 254,   0 }, { 255,   0 }, { 256,   0 }, {   0,   1 },
 {   0,8459 }, {   1,-258 }, {   2,-258 }, {   3,-258 }, {   4,-258 },
 {   5,-258 }, {   6,-258 }, {   7,-258 }, {   8,-258 }, {   9,-258 },
 {   0,   0 }, {  11,-258 }, {  12,-258 }, {   0,   0 }, {  14,-258 },
 {  15,-258 }, {  16,-258 }, {  17,-258 }, {  18,-258 }, {  19,-258 },
 {  20,-258 }, {  21,-258 }, {  22,-258 }, {  23,-258 }, {  24,-258 },

 {  25,-258 }, {  26,-258 }, {  27,-258 }, {  28,-258 }, {  29,-258 },
 {  30,-258 }, {  31,-258 }, {  32,-258 }, {  33,   0 }, {  34,-258 },
 {  35,   0 }, {  36,-258 }, {  37,   0 }, {  38,   0 }, {  39,-258 },
 {  40,-258 }, {  41,-258 }, {  42,   0 }, {  43,   0 }, {  44,-258 },
 {  45,   0 }, {  46,-258 }, {  47,   0 }, {  48,-258 }, {  49,-258 },
 {  50,-258 }, {  51,-258 }, {  52,-258 }, {  53,-258 }, {  54,-258 },
 {  55,-258 }, {  56,-258 }, {  57,-258 }, {  58,-258 }, {  59,-258 },
 {  60,   0 }, {  61,   0 }, {  62,   0 }, {  63,   0 }, {  64,   0 },
 {  65,-258 }, {  66,-258 }, {  67,-258 }, {  68,-258 }, {  69,-258 },
 {  70,-258 }, {  71,-258 }, {  72,-258 }, {  73,-258 }, {  74,-258 },

 {  75,-258 }, {  76,-258 }, {  77,-258 }, {  78,-258 }, {  79,-258 },
 {  80,-258 }, {  81,-258 }, {  82,-258 }, {  83,-258 }, {  84,-258 },
 {  85,-258 }, {  86,-258 }, {  87,-258 }, {  88,-258 }, {  89,-258 },
 {  90,-258 }, {  91,-258 }, {  92,-258 }, {  93,-258 }, {  94,   0 },
 {  95,-258 }, {  96,   0 }, {  97,-258 }, {  98,-258 }, {  99,-258 },
 { 100,-258 }, { 101,-258 }, { 102,-258 }, { 103,-258 }, { 104,-258 },
 { 105,-258 }, { 106,-258 }, { 107,-258 }, { 108,-258 }, { 109,-258 },
 { 110,-258 }, { 111,-258 }, { 112,-258 }, { 113,-258 }, { 114,-258 },
 { 115,-258 }, { 116,-258 }, { 117,-258 }, { 118,-258 }, { 119,-258 },
 { 120,-258 }, { 121,-258 }, { 122,-258 }, { 123,-258 }, { 124,   0 },

 { 125,-258 }, { 126,   0 }, { 127,-258 }, { 128,-258 }, { 129,-258 },
 { 130,-258 }, { 131,-258 }, { 132,-258 }, { 133,-258 }, { 134,-258 },
 { 135,-258 }, { 136,-258 }, { 137,-258 }, { 138,-258 }, { 139,-258 },
 { 140,-258 }, { 141,-258 }, { 142,-258 }, { 143,-258 }, { 144,-258 },
 { 145,-258 }, { 146,-258 }, { 147,-258 }, { 148,-258 }, { 149,-258 },
 { 150,-258 }, { 151,-258 }, { 152,-258 }, { 153,-258 }, { 154,-258 },
 { 155,-258 }, { 156,-258 }, { 157,-258 }, { 158,-258 }, { 159,-258 },
 { 160,-258 }, { 161,-258 }, { 162,-258 }, { 163,-258 }, { 164,-258 },
 { 165,-258 }, { 166,-258 }, { 167,-258 }, { 168,-258 }, { 169,-258 },
 { 170,-258 }, { 171,-258 }, { 172,-258 }, { 173,-258 }, { 174,-258 },

 { 175,-258 }, { 176,-258 }, { 177,-258 }, { 178,-258 }, { 179,-258 },
 { 180,-258 }, { 181,-258 }, { 182,-258 }, { 183,-258 }, { 184,-258 },
 { 185,-258 }, { 186,-258 }, { 187,-258 }, { 188,-258 }, { 189,-258 },
 { 190,-258 }, { 191,-258 }, { 192,-258 }, { 193,-258 }, { 194,-258 },
 { 195,-258 }, { 196,-258 }, { 197,-258 }, { 198,-258 }, { 199,-258 },
 { 200,-258 }, { 201,-258 }, { 202,-258 }, { 203,-258 }, { 204,-258 },
 { 205,-258 }, { 206,-258 }, { 207,-258 }, { 208,-258 }, { 209,-258 },
 { 210,-258 }, { 211,-258 }, { 212,-258 }, { 213,-258 }, { 214,-258 },
 { 215,-258 }, { 216,-258 }, { 217,-258 }, { 218,-258 }, { 219,-258 },
 { 220,-258 }, { 221,-258 }, { 222,-258 }, { 223,-258 }, { 224,-258 },

 { 225,-258 }, { 226,-258 }, { 227,-258 }, { 228,-258 }, { 229,-258 },
 { 230,-258 }, { 231,-258 }, { 232,-258 }, { 233,-258 }, { 234,-258 },
 { 235,-258 }, { 236,-258 }, { 237,-258 }, { 238,-258 }, { 239,-258 },
 { 240,-258 }, { 241,-258 }, { 242,-258 }, { 243,-258 }, { 244,-258 },
 { 245,-258 }, { 246,-258 }, { 247,-258 }, { 248,-258 }, { 249,-258 },
 { 250,-258 }, { 251,-258 }, { 252,-258 }, { 253,-258 }, { 254,-258 },
 { 255,-258 }, { 256,-258 }, {   0,   2 }, {   0,8201 }, {   0,  36 },
 {   0,8199 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,  40 }, {   0,8177 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  33,   0 }, {   0,   0 }, {  35,   0 }, {   0,   0 },
 {  37,   0 }, {  38,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  42,   0 }, {  43,   0 }, {   0,   0 }, {  45,   0 }, {   0,   0 },
 {  47,   0 }, {   0,   0 }, {   0,   0 }, {  48,   0 }, {  49,   0 },
 {  50,   0 }, {  51,   0 }, {  52,   0 }, {  53,   0 }, {  54,   0 },
 {  55,   0 }, {  56,   0 }, {  57,   0 }, {  60,   0 }, {  61,   0 },
 {  62,   0 }, {  63,   0 }, {  64,   0 }, {   0,  38 }, {   0,8135 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  69,-2496 },
 {  48,  42 }, {  49,  42 }, {  50,  42 }, {  51,  42 }, {  52,  42 },
 {  53,  42 }, {  54,  42 }, {  55,  42 }, {  56,  42 }, {  57,  42 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  94,   0 }, {   0,   0 }, {  96,   0 },
 {   0,   9 }, {   0,8103 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, { 101,-2496 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   9,   0 }, {  10,   0 }, {   0,   0 }, {  12,   0 }, {  13,   0 },
 {   0,   0 }, {   0,   0 }, {  48,   0 }, {  49,   0 }, {  50,   0 },

 {  51,   0 }, {  52,   0 }, {  53,   0 }, {  54,   0 }, {  55,   0 },
 {  56,   0 }, {  57,   0 }, { 124,   0 }, {   0,   0 }, { 126,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  32,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  39,-5684 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  45,-5663 }, {   0,   9 }, {   0,8056 }, {   1,1207 },
 {   2,1207 }, {   3,1207 }, {   4,1207 }, {   5,1207 }, {   6,1207 },
 {   7,1207 }, {   8,1207 }, {   9,1465 }, {  10,-1972 }, {  11,1207 },
 {  12,1465 }, {  13,-1972 }, {  14,1207 }, {  15,1207 }, {  16,1207 },
 {  17,1207 }, {  18,1207 }, {  19,1207 }, {  20,1207 }, {  21,1207 },

 {  22,1207 }, {  23,1207 }, {  24,1207 }, {  25,1207 }, {  26,1207 },
 {  27,1207 }, {  28,1207 }, {  29,1207 }, {  30,1207 }, {  31,1207 },
 {  32,1465 }, {  33,1207 }, {  34,1207 }, {  35,1207 }, {  36,1207 },
 {  37,1207 }, {  38,1207 }, {  39,1207 }, {  40,1207 }, {  41,1207 },
 {  42,1207 }, {  43,1207 }, {  44,1207 }, {  45,1723 }, {  46,1207 },
 {  47,1207 }, {  48,1207 }, {  49,1207 }, {  50,1207 }, {  51,1207 },
 {  52,1207 }, {  53,1207 }, {  54,1207 }, {  55,1207 }, {  56,1207 },
 {  57,1207 }, {  58,1207 }, {  59,1207 }, {  60,1207 }, {  61,1207 },
 {  62,1207 }, {  63,1207 }, {  64,1207 }, {  65,1207 }, {  66,1207 },
 {  67,1207 }, {  68,1207 }, {  69,1207 }, {  70,1207 }, {  71,1207 },

 {  72,1207 }, {  73,1207 }, {  74,1207 }, {  75,1207 }, {  76,1207 },
 {  77,1207 }, {  78,1207 }, {  79,1207 }, {  80,1207 }, {  81,1207 },
 {  82,1207 }, {  83,1207 }, {  84,1207 }, {  85,1207 }, {  86,1207 },
 {  87,1207 }, {  88,1207 }, {  89,1207 }, {  90,1207 }, {  91,1207 },
 {  92,1207 }, {  93,1207 }, {  94,1207 }, {  95,1207 }, {  96,1207 },
 {  97,1207 }, {  98,1207 }, {  99,1207 }, { 100,1207 }, { 101,1207 },
 { 102,1207 }, { 103,1207 }, { 104,1207 }, { 105,1207 }, { 106,1207 },
 { 107,1207 }, { 108,1207 }, { 109,1207 }, { 110,1207 }, { 111,1207 },
 { 112,1207 }, { 113,1207 }, { 114,1207 }, { 115,1207 }, { 116,1207 },
 { 117,1207 }, { 118,1207 }, { 119,1207 }, { 120,1207 }, { 121,1207 },

 { 122,1207 }, { 123,1207 }, { 124,1207 }, { 125,1207 }, { 126,1207 },
 { 127,1207 }, { 128,1207 }, { 129,1207 }, { 130,1207 }, { 131,1207 },
 { 132,1207 }, { 133,1207 }, { 134,1207 }, { 135,1207 }, { 136,1207 },
 { 137,1207 }, { 138,1207 }, { 139,1207 }, { 140,1207 }, { 141,1207 },
 { 142,1207 }, { 143,1207 }, { 144,1207 }, { 145,1207 }, { 146,1207 },
 { 147,1207 }, { 148,1207 }, { 149,1207 }, { 150,1207 }, { 151,1207 },
 { 152,1207 }, { 153,1207 }, { 154,1207 }, { 155,1207 }, { 156,1207 },
 { 157,1207 }, { 158,1207 }, { 159,1207 }, { 160,1207 }, { 161,1207 },
 { 162,1207 }, { 163,1207 }, { 164,1207 }, { 165,1207 }, { 166,1207 },
 { 167,1207 }, { 168,1207 }, { 169,1207 }, { 170,1207 }, { 171,1207 },

 { 172,1207 }, { 173,1207 }, { 174,1207 }, { 175,1207 }, { 176,1207 },
 { 177,1207 }, { 178,1207 }, { 179,1207 }, { 180,1207 }, { 181,1207 },
 { 182,1207 }, { 183,1207 }, { 184,1207 }, { 185,1207 }, { 186,1207 },
 { 187,1207 }, { 188,1207 }, { 189,1207 }, { 190,1207 }, { 191,1207 },
 { 192,1207 }, { 193,1207 }, { 194,1207 }, { 195,1207 }, { 196,1207 },
 { 197,1207 }, { 198,1207 }, { 199,1207 }, { 200,1207 }, { 201,1207 },
 { 202,1207 }, { 203,1207 }, { 204,1207 }, { 205,1207 }, { 206,1207 },
 { 207,1207 }, { 208,1207 }, { 209,1207 }, { 210,1207 }, { 211,1207 },
 { 212,1207 }, { 213,1207 }, { 214,1207 }, { 215,1207 }, { 216,1207 },
 { 217,1207 }, { 218,1207 }, { 219,1207 }, { 220,1207 }, { 221,1207 },

 { 222,1207 }, { 223,1207 }, { 224,1207 }, { 225,1207 }, { 226,1207 },
 { 227,1207 }, { 228,1207 }, { 229,1207 }, { 230,1207 }, { 231,1207 },
 { 232,1207 }, { 233,1207 }, { 234,1207 }, { 235,1207 }, { 236,1207 },
 { 237,1207 }, { 238,1207 }, { 239,1207 }, { 240,1207 }, { 241,1207 },
 { 242,1207 }, { 243,1207 }, { 244,1207 }, { 245,1207 }, { 246,1207 },
 { 247,1207 }, { 248,1207 }, { 249,1207 }, { 250,1207 }, { 251,1207 },
 { 252,1207 }, { 253,1207 }, { 254,1207 }, { 255,1207 }, { 256,1207 },
 {   0,   3 }, {   0,7798 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,  16 }, {   0,7791 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   9,   0 }, {  10,   0 }, {   0,   0 },
 {  12,   0 }, {  13,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  33,   0 },
 {   0,   0 }, {  35,   0 }, {   0,   0 }, {  37,   0 }, {  38,   0 },
 {  32,   0 }, {   0,   0 }, {   0,   0 }, {  42,   0 }, {  43,   0 },
 {   0,   0 }, {  45,   0 }, {  39,-5973 }, {  47,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  45,-5965 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  60,   0 }, {  61,   0 }, {  62,   0 }, {  63,   0 },

 {  64,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  94,   0 }, {   0,   0 }, {  96,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 { 124,   0 }, {   0,   0 }, { 126,   0 }, {   0,  16 }, {   0,7670 },
 {   1,1853 }, {   2,1853 }, {   3,1853 }, {   4,1853 }, {   5,1853 },
 {   6,1853 }, {   7,1853 }, {   8,1853 }, {   9,2111 }, {  10,-1404 },
 {  11,1853 }, {  12,2111 }, {  13,-1404 }, {  14,1853 }, {  15,1853 },
 {  16,1853 }, {  17,1853 }, {  18,1853 }, {  19,1853 }, {  20,1853 },
 {  21,1853 }, {  22,1853 }, {  23,1853 }, {  24,1853 }, {  25,1853 },
 {  26,1853 }, {  27,1853 }, {  28,1853 }, {  29,1853 }, {  30,1853 },
 {  31,1853 }, {  32,2111 }, {  33,1853 }, {  34,1853 }, {  35,1853 },

 {  36,1853 }, {  37,1853 }, {  38,1853 }, {  39,1853 }, {  40,1853 },
 {  41,1853 }, {  42,1853 }, {  43,1853 }, {  44,1853 }, {  45,2369 },
 {  46,1853 }, {  47,1853 }, {  48,1853 }, {  49,1853 }, {  50,1853 },
 {  51,1853 }, {  52,1853 }, {  53,1853 }, {  54,1853 }, {  55,1853 },
 {  56,1853 }, {  57,1853 }, {  58,1853 }, {  59,1853 }, {  60,1853 },
 {  61,1853 }, {  62,1853 }, {  63,1853 }, {  64,1853 }, {  65,1853 },
 {  66,1853 }, {  67,1853 }, {  68,1853 }, {  69,1853 }, {  70,1853 },
 {  71,1853 }, {  72,1853 }, {  73,1853 }, {  74,1853 }, {  75,1853 },
 {  76,1853 }, {  77,1853 }, {  78,1853 }, {  79,1853 }, {  80,1853 },
 {  81,1853 }, {  82,1853 }, {  83,1853 }, {  84,1853 }, {  85,1853 },

 {  86,1853 }, {  87,1853 }, {  88,1853 }, {  89,1853 }, {  90,1853 },
 {  91,1853 }, {  92,1853 }, {  93,1853 }, {  94,1853 }, {  95,1853 },
 {  96,1853 }, {  97,1853 }, {  98,1853 }, {  99,1853 }, { 100,1853 },
 { 101,1853 }, { 102,1853 }, { 103,1853 }, { 104,1853 }, { 105,1853 },
 { 106,1853 }, { 107,1853 }, { 108,1853 }, { 109,1853 }, { 110,1853 },
 { 111,1853 }, { 112,1853 }, { 113,1853 }, { 114,1853 }, { 115,1853 },
 { 116,1853 }, { 117,1853 }, { 118,1853 }, { 119,1853 }, { 120,1853 },
 { 121,1853 }, { 122,1853 }, { 123,1853 }, { 124,1853 }, { 125,1853 },
 { 126,1853 }, { 127,1853 }, { 128,1853 }, { 129,1853 }, { 130,1853 },
 { 131,1853 }, { 132,1853 }, { 133,1853 }, { 134,1853 }, { 135,1853 },

 { 136,1853 }, { 137,1853 }, { 138,1853 }, { 139,1853 }, { 140,1853 },
 { 141,1853 }, { 142,1853 }, { 143,1853 }, { 144,1853 }, { 145,1853 },
 { 146,1853 }, { 147,1853 }, { 148,1853 }, { 149,1853 }, { 150,1853 },
 { 151,1853 }, { 152,1853 }, { 153,1853 }, { 154,1853 }, { 155,1853 },
 { 156,1853 }, { 157,1853 }, { 158,1853 }, { 159,1853 }, { 160,1853 },
 { 161,1853 }, { 162,1853 }, { 163,1853 }, { 164,1853 }, { 165,1853 },
 { 166,1853 }, { 167,1853 }, { 168,1853 }, { 169,1853 }, { 170,1853 },
 { 171,1853 }, { 172,1853 }, { 173,1853 }, { 174,1853 }, { 175,1853 },
 { 176,1853 }, { 177,1853 }, { 178,1853 }, { 179,1853 }, { 180,1853 },
 { 181,1853 }, { 182,1853 }, { 183,1853 }, { 184,1853 }, { 185,1853 },

 { 186,1853 }, { 187,1853 }, { 188,1853 }, { 189,1853 }, { 190,1853 },
 { 191,1853 }, { 192,1853 }, { 193,1853 }, { 194,1853 }, { 195,1853 },
 { 196,1853 }, { 197,1853 }, { 198,1853 }, { 199,1853 }, { 200,1853 },
 { 201,1853 }, { 202,1853 }, { 203,1853 }, { 204,1853 }, { 205,1853 },
 { 206,1853 }, { 207,1853 }, { 208,1853 }, { 209,1853 }, { 210,1853 },
 { 211,1853 }, { 212,1853 }, { 213,1853 }, { 214,1853 }, { 215,1853 },
 { 216,1853 }, { 217,1853 }, { 218,1853 }, { 219,1853 }, { 220,1853 },
 { 221,1853 }, { 222,1853 }, { 223,1853 }, { 224,1853 }, { 225,1853 },
 { 226,1853 }, { 227,1853 }, { 228,1853 }, { 229,1853 }, { 230,1853 },
 { 231,1853 }, { 232,1853 }, { 233,1853 }, { 234,1853 }, { 235,1853 },

 { 236,1853 }, { 237,1853 }, { 238,1853 }, { 239,1853 }, { 240,1853 },
 { 241,1853 }, { 242,1853 }, { 243,1853 }, { 244,1853 }, { 245,1853 },
 { 246,1853 }, { 247,1853 }, { 248,1853 }, { 249,1853 }, { 250,1853 },
 { 251,1853 }, { 252,1853 }, { 253,1853 }, { 254,1853 }, { 255,1853 },
 { 256,1853 }, {   0,  19 }, {   0,7412 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   9,   0 }, {  10,   0 }, {   0,   0 }, {  12,   0 },
 {  13,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  32,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  39,-6315 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  45,-6311 }, {   0,  19 }, {   0,7365 },
 {   1,2580 }, {   2,2580 }, {   3,2580 }, {   4,2580 }, {   5,2580 },
 {   6,2580 }, {   7,2580 }, {   8,2580 }, {   9,2838 }, {  10,-1399 },
 {  11,2580 }, {  12,2838 }, {  13,-1399 }, {  14,2580 }, {  15,2580 },
 {  16,2580 }, {  17,2580 }, {  18,2580 }, {  19,2580 }, {  20,2580 },
 {  21,2580 }, {  22,2580 }, {  23,2580 }, {  24,2580 }, {  25,2580 },
 {  26,2580 }, {  27,2580 }, {  28,2580 }, {  29,2580 }, {  30,2580 },

 {  31,2580 }, {  32,2838 }, {  33,2580 }, {  34,2580 }, {  35,2580 },
 {  36,2580 }, {  37,2580 }, {  38,2580 }, {  39,2580 }, {  40,2580 },
 {  41,2580 }, {  42,2580 }, {  43,2580 }, {  44,2580 }, {  45,3096 },
 {  46,2580 }, {  47,2580 }, {  48,2580 }, {  49,2580 }, {  50,2580 },
 {  51,2580 }, {  52,2580 }, {  53,2580 }, {  54,2580 }, {  55,2580 },
 {  56,2580 }, {  57,2580 }, {  58,2580 }, {  59,2580 }, {  60,2580 },
 {  61,2580 }, {  62,2580 }, {  63,2580 }, {  64,2580 }, {  65,2580 },
 {  66,2580 }, {  67,2580 }, {  68,2580 }, {  69,2580 }, {  70,2580 },
 {  71,2580 }, {  72,2580 }, {  73,2580 }, {  74,2580 }, {  75,2580 },
 {  76,2580 }, {  77,2580 }, {  78,2580 }, {  79,2580 }, {  80,2580 },

 {  81,2580 }, {  82,2580 }, {  83,2580 }, {  84,2580 }, {  85,2580 },
 {  86,2580 }, {  87,2580 }, {  88,2580 }, {  89,2580 }, {  90,2580 },
 {  91,2580 }, {  92,2580 }, {  93,2580 }, {  94,2580 }, {  95,2580 },
 {  96,2580 }, {  97,2580 }, {  98,2580 }, {  99,2580 }, { 100,2580 },
 { 101,2580 }, { 102,2580 }, { 103,2580 }, { 104,2580 }, { 105,2580 },
 { 106,2580 }, { 107,2580 }, { 108,2580 }, { 109,2580 }, { 110,2580 },
 { 111,2580 }, { 112,2580 }, { 113,2580 }, { 114,2580 }, { 115,2580 },
 { 116,2580 }, { 117,2580 }, { 118,2580 }, { 119,2580 }, { 120,2580 },
 { 121,2580 }, { 122,2580 }, { 123,2580 }, { 124,2580 }, { 125,2580 },
 { 126,2580 }, { 127,2580 }, { 128,2580 }, { 129,2580 }, { 130,2580 },

 { 131,2580 }, { 132,2580 }, { 133,2580 }, { 134,2580 }, { 135,2580 },
 { 136,2580 }, { 137,2580 }, { 138,2580 }, { 139,2580 }, { 140,2580 },
 { 141,2580 }, { 142,2580 }, { 143,2580 }, { 144,2580 }, { 145,2580 },
 { 146,2580 }, { 147,2580 }, { 148,2580 }, { 149,2580 }, { 150,2580 },
 { 151,2580 }, { 152,2580 }, { 153,2580 }, { 154,2580 }, { 155,2580 },
 { 156,2580 }, { 157,2580 }, { 158,2580 }, { 159,2580 }, { 160,2580 },
 { 161,2580 }, { 162,2580 }, { 163,2580 }, { 164,2580 }, { 165,2580 },
 { 166,2580 }, { 167,2580 }, { 168,2580 }, { 169,2580 }, { 170,2580 },
 { 171,2580 }, { 172,2580 }, { 173,2580 }, { 174,2580 }, { 175,2580 },
 { 176,2580 }, { 177,2580 }, { 178,2580 }, { 179,2580 }, { 180,2580 },

 { 181,2580 }, { 182,2580 }, { 183,2580 }, { 184,2580 }, { 185,2580 },
 { 186,2580 }, { 187,2580 }, { 188,2580 }, { 189,2580 }, { 190,2580 },
 { 191,2580 }, { 192,2580 }, { 193,2580 }, { 194,2580 }, { 195,2580 },
 { 196,2580 }, { 197,2580 }, { 198,2580 }, { 199,2580 }, { 200,2580 },
 { 201,2580 }, { 202,2580 }, { 203,2580 }, { 204,2580 }, { 205,2580 },
 { 206,2580 }, { 207,2580 }, { 208,2580 }, { 209,2580 }, { 210,2580 },
 { 211,2580 }, { 212,2580 }, { 213,2580 }, { 214,2580 }, { 215,2580 },
 { 216,2580 }, { 217,2580 }, { 218,2580 }, { 219,2580 }, { 220,2580 },
 { 221,2580 }, { 222,2580 }, { 223,2580 }, { 224,2580 }, { 225,2580 },
 { 226,2580 }, { 227,2580 }, { 228,2580 }, { 229,2580 }, { 230,2580 },

 { 231,2580 }, { 232,2580 }, { 233,2580 }, { 234,2580 }, { 235,2580 },
 { 236,2580 }, { 237,2580 }, { 238,2580 }, { 239,2580 }, { 240,2580 },
 { 241,2580 }, { 242,2580 }, { 243,2580 }, { 244,2580 }, { 245,2580 },
 { 246,2580 }, { 247,2580 }, { 248,2580 }, { 249,2580 }, { 250,2580 },
 { 251,2580 }, { 252,2580 }, { 253,2580 }, { 254,2580 }, { 255,2580 },
 { 256,2580 }, {   0,   9 }, {   0,7107 }, {   1,3096 }, {   2,3096 },
 {   3,3096 }, {   4,3096 }, {   5,3096 }, {   6,3096 }, {   7,3096 },
 {   8,3096 }, {   9,3354 }, {  10,3612 }, {  11,3096 }, {  12,3354 },
 {  13,3612 }, {  14,3096 }, {  15,3096 }, {  16,3096 }, {  17,3096 },
 {  18,3096 }, {  19,3096 }, {  20,3096 }, {  21,3096 }, {  22,3096 },

 {  23,3096 }, {  24,3096 }, {  25,3096 }, {  26,3096 }, {  27,3096 },
 {  28,3096 }, {  29,3096 }, {  30,3096 }, {  31,3096 }, {  32,3354 },
 {  33,3096 }, {  34,3096 }, {  35,3096 }, {  36,3096 }, {  37,3096 },
 {  38,3096 }, {  39,3096 }, {  40,3096 }, {  41,3096 }, {  42,3096 },
 {  43,3096 }, {  44,3096 }, {  45,3659 }, {  46,3096 }, {  47,3096 },
 {  48,3096 }, {  49,3096 }, {  50,3096 }, {  51,3096 }, {  52,3096 },
 {  53,3096 }, {  54,3096 }, {  55,3096 }, {  56,3096 }, {  57,3096 },
 {  58,3096 }, {  59,3096 }, {  60,3096 }, {  61,3096 }, {  62,3096 },
 {  63,3096 }, {  64,3096 }, {  65,3096 }, {  66,3096 }, {  67,3096 },
 {  68,3096 }, {  69,3096 }, {  70,3096 }, {  71,3096 }, {  72,3096 },

 {  73,3096 }, {  74,3096 }, {  75,3096 }, {  76,3096 }, {  77,3096 },
 {  78,3096 }, {  79,3096 }, {  80,3096 }, {  81,3096 }, {  82,3096 },
 {  83,3096 }, {  84,3096 }, {  85,3096 }, {  86,3096 }, {  87,3096 },
 {  88,3096 }, {  89,3096 }, {  90,3096 }, {  91,3096 }, {  92,3096 },
 {  93,3096 }, {  94,3096 }, {  95,3096 }, {  96,3096 }, {  97,3096 },
 {  98,3096 }, {  99,3096 }, { 100,3096 }, { 101,3096 }, { 102,3096 },
 { 103,3096 }, { 104,3096 }, { 105,3096 }, { 106,3096 }, { 107,3096 },
 { 108,3096 }, { 109,3096 }, { 110,3096 }, { 111,3096 }, { 112,3096 },
 { 113,3096 }, { 114,3096 }, { 115,3096 }, { 116,3096 }, { 117,3096 },
 { 118,3096 }, { 119,3096 }, { 120,3096 }, { 121,3096 }, { 122,3096 },

 { 123,3096 }, { 124,3096 }, { 125,3096 }, { 126,3096 }, { 127,3096 },
 { 128,3096 }, { 129,3096 }, { 130,3096 }, { 131,3096 }, { 132,3096 },
 { 133,3096 }, { 134,3096 }, { 135,3096 }, { 136,3096 }, { 137,3096 },
 { 138,3096 }, { 139,3096 }, { 140,3096 }, { 141,3096 }, { 142,3096 },
 { 143,3096 }, { 144,3096 }, { 145,3096 }, { 146,3096 }, { 147,3096 },
 { 148,3096 }, { 149,3096 }, { 150,3096 }, { 151,3096 }, { 152,3096 },
 { 153,3096 }, { 154,3096 }, { 155,3096 }, { 156,3096 }, { 157,3096 },
 { 158,3096 }, { 159,3096 }, { 160,3096 }, { 161,3096 }, { 162,3096 },
 { 163,3096 }, { 164,3096 }, { 165,3096 }, { 166,3096 }, { 167,3096 },
 { 168,3096 }, { 169,3096 }, { 170,3096 }, { 171,3096 }, { 172,3096 },

 { 173,3096 }, { 174,3096 }, { 175,3096 }, { 176,3096 }, { 177,3096 },
 { 178,3096 }, { 179,3096 }, { 180,3096 }, { 181,3096 }, { 182,3096 },
 { 183,3096 }, { 184,3096 }, { 185,3096 }, { 186,3096 }, { 187,3096 },
 { 188,3096 }, { 189,3096 }, { 190,3096 }, { 191,3096 }, { 192,3096 },
 { 193,3096 }, { 194,3096 }, { 195,3096 }, { 196,3096 }, { 197,3096 },
 { 198,3096 }, { 199,3096 }, { 200,3096 }, { 201,3096 }, { 202,3096 },
 { 203,3096 }, { 204,3096 }, { 205,3096 }, { 206,3096 }, { 207,3096 },
 { 208,3096 }, { 209,3096 }, { 210,3096 }, { 211,3096 }, { 212,3096 },
 { 213,3096 }, { 214,3096 }, { 215,3096 }, { 216,3096 }, { 217,3096 },
 { 218,3096 }, { 219,3096 }, { 220,3096 }, { 221,3096 }, { 222,3096 },

 { 223,3096 }, { 224,3096 }, { 225,3096 }, { 226,3096 }, { 227,3096 },
 { 228,3096 }, { 229,3096 }, { 230,3096 }, { 231,3096 }, { 232,3096 },
 { 233,3096 }, { 234,3096 }, { 235,3096 }, { 236,3096 }, { 237,3096 },
 { 238,3096 }, { 239,3096 }, { 240,3096 }, { 241,3096 }, { 242,3096 },
 { 243,3096 }, { 244,3096 }, { 245,3096 }, { 246,3096 }, { 247,3096 },
 { 248,3096 }, { 249,3096 }, { 250,3096 }, { 251,3096 }, { 252,3096 },
 { 253,3096 }, { 254,3096 }, { 255,3096 }, { 256,3096 }, {   0,   9 },
 {   0,6849 }, {   1,   0 }, {   2,   0 }, {   3,   0 }, {   4,   0 },
 {   5,   0 }, {   6,   0 }, {   7,   0 }, {   8,   0 }, {   9, 258 },
 {  10,-3179 }, {  11,   0 }, {  12, 258 }, {  13,-3179 }, {  14,   0 },

 {  15,   0 }, {  16,   0 }, {  17,   0 }, {  18,   0 }, {  19,   0 },
 {  20,   0 }, {  21,   0 }, {  22,   0 }, {  23,   0 }, {  24,   0 },
 {  25,   0 }, {  26,   0 }, {  27,   0 }, {  28,   0 }, {  29,   0 },
 {  30,   0 }, {  31,   0 }, {  32, 258 }, {  33,   0 }, {  34,   0 },
 {  35,   0 }, {  36,   0 }, {  37,   0 }, {  38,   0 }, {  39,   0 },
 {  40,   0 }, {  41,   0 }, {  42,   0 }, {  43,   0 }, {  44,   0 },
 {  45, 516 }, {  46,   0 }, {  47,   0 }, {  48,   0 }, {  49,   0 },
 {  50,   0 }, {  51,   0 }, {  52,   0 }, {  53,   0 }, {  54,   0 },
 {  55,   0 }, {  56,   0 }, {  57,   0 }, {  58,   0 }, {  59,   0 },
 {  60,   0 }, {  61,   0 }, {  62,   0 }, {  63,   0 }, {  64,   0 },

 {  65,   0 }, {  66,   0 }, {  67,   0 }, {  68,   0 }, {  69,   0 },
 {  70,   0 }, {  71,   0 }, {  72,   0 }, {  73,   0 }, {  74,   0 },
 {  75,   0 }, {  76,   0 }, {  77,   0 }, {  78,   0 }, {  79,   0 },
 {  80,   0 }, {  81,   0 }, {  82,   0 }, {  83,   0 }, {  84,   0 },
 {  85,   0 }, {  86,   0 }, {  87,   0 }, {  88,   0 }, {  89,   0 },
 {  90,   0 }, {  91,   0 }, {  92,   0 }, {  93,   0 }, {  94,   0 },
 {  95,   0 }, {  96,   0 }, {  97,   0 }, {  98,   0 }, {  99,   0 },
 { 100,   0 }, { 101,   0 }, { 102,   0 }, { 103,   0 }, { 104,   0 },
 { 105,   0 }, { 106,   0 }, { 107,   0 }, { 108,   0 }, { 109,   0 },
 { 110,   0 }, { 111,   0 }, { 112,   0 }, { 113,   0 }, { 114,   0 },

 { 115,   0 }, { 116,   0 }, { 117,   0 }, { 118,   0 }, { 119,   0 },
 { 120,   0 }, { 121,   0 }, { 122,   0 }, { 123,   0 }, { 124,   0 },
 { 125,   0 }, { 126,   0 }, { 127,   0 }, { 128,   0 }, { 129,   0 },
 { 130,   0 }, { 131,   0 }, { 132,   0 }, { 133,   0 }, { 134,   0 },
 { 135,   0 }, { 136,   0 }, { 137,   0 }, { 138,   0 }, { 139,   0 },
 { 140,   0 }, { 141,   0 }, { 142,   0 }, { 143,   0 }, { 144,   0 },
 { 145,   0 }, { 146,   0 }, { 147,   0 }, { 148,   0 }, { 149,   0 },
 { 150,   0 }, { 151,   0 }, { 152,   0 }, { 153,   0 }, { 154,   0 },
 { 155,   0 }, { 156,   0 }, { 157,   0 }, { 158,   0 }, { 159,   0 },
 { 160,   0 }, { 161,   0 }, { 162,   0 }, { 163,   0 }, { 164,   0 },

 { 165,   0 }, { 166,   0 }, { 167,   0 }, { 168,   0 }, { 169,   0 },
 { 170,   0 }, { 171,   0 }, { 172,   0 }, { 173,   0 }, { 174,   0 },
 { 175,   0 }, { 176,   0 }, { 177,   0 }, { 178,   0 }, { 179,   0 },
 { 180,   0 }, { 181,   0 }, { 182,   0 }, { 183,   0 }, { 184,   0 },
 { 185,   0 }, { 186,   0 }, { 187,   0 }, { 188,   0 }, { 189,   0 },
 { 190,   0 }, { 191,   0 }, { 192,   0 }, { 193,   0 }, { 194,   0 },
 { 195,   0 }, { 196,   0 }, { 197,   0 }, { 198,   0 }, { 199,   0 },
 { 200,   0 }, { 201,   0 }, { 202,   0 }, { 203,   0 }, { 204,   0 },
 { 205,   0 }, { 206,   0 }, { 207,   0 }, { 208,   0 }, { 209,   0 },
 { 210,   0 }, { 211,   0 }, { 212,   0 }, { 213,   0 }, { 214,   0 },

 { 215,   0 }, { 216,   0 }, { 217,   0 }, { 218,   0 }, { 219,   0 },
 { 220,   0 }, { 221,   0 }, { 222,   0 }, { 223,   0 }, { 224,   0 },
 { 225,   0 }, { 226,   0 }, { 227,   0 }, { 228,   0 }, { 229,   0 },
 { 230,   0 }, { 231,   0 }, { 232,   0 }, { 233,   0 }, { 234,   0 },
 { 235,   0 }, { 236,   0 }, { 237,   0 }, { 238,   0 }, { 239,   0 },
 { 240,   0 }, { 241,   0 }, { 242,   0 }, { 243,   0 }, { 244,   0 },
 { 245,   0 }, { 246,   0 }, { 247,   0 }, { 248,   0 }, { 249,   0 },
 { 250,   0 }, { 251,   0 }, { 252,   0 }, { 253,   0 }, { 254,   0 },
 { 255,   0 }, { 256,   0 }, {   0,   9 }, {   0,6591 }, {   1,-258 },
 {   2,-258 }, {   3,-258 }, {   4,-258 }, {   5,-258 }, {   6,-258 },

 {   7,-258 }, {   8,-258 }, {   9,   0 }, {  10,-3437 }, {  11,-258 },
 {  12,   0 }, {  13,-3437 }, {  14,-258 }, {  15,-258 }, {  16,-258 },
 {  17,-258 }, {  18,-258 }, {  19,-258 }, {  20,-258 }, {  21,-258 },
 {  22,-258 }, {  23,-258 }, {  24,-258 }, {  25,-258 }, {  26,-258 },
 {  27,-258 }, {  28,-258 }, {  29,-258 }, {  30,-258 }, {  31,-258 },
 {  32,   0 }, {  33,-258 }, {  34,-258 }, {  35,-258 }, {  36,-258 },
 {  37,-258 }, {  38,-258 }, {  39,-258 }, {  40,-258 }, {  41,-258 },
 {  42,-258 }, {  43,-258 }, {  44,-258 }, {  45, 258 }, {  46,-258 },
 {  47,-258 }, {  48,-258 }, {  49,-258 }, {  50,-258 }, {  51,-258 },
 {  52,-258 }, {  53,-258 }, {  54,-258 }, {  55,-258 }, {  56,-258 },

 {  57,-258 }, {  58,-258 }, {  59,-258 }, {  60,-258 }, {  61,-258 },
 {  62,-258 }, {  63,-258 }, {  64,-258 }, {  65,-258 }, {  66,-258 },
 {  67,-258 }, {  68,-258 }, {  69,-258 }, {  70,-258 }, {  71,-258 },
 {  72,-258 }, {  73,-258 }, {  74,-258 }, {  75,-258 }, {  76,-258 },
 {  77,-258 }, {  78,-258 }, {  79,-258 }, {  80,-258 }, {  81,-258 },
 {  82,-258 }, {  83,-258 }, {  84,-258 }, {  85,-258 }, {  86,-258 },
 {  87,-258 }, {  88,-258 }, {  89,-258 }, {  90,-258 }, {  91,-258 },
 {  92,-258 }, {  93,-258 }, {  94,-258 }, {  95,-258 }, {  96,-258 },
 {  97,-258 }, {  98,-258 }, {  99,-258 }, { 100,-258 }, { 101,-258 },
 { 102,-258 }, { 103,-258 }, { 104,-258 }, { 105,-258 }, { 106,-258 },

 { 107,-258 }, { 108,-258 }, { 109,-258 }, { 110,-258 }, { 111,-258 },
 { 112,-258 }, { 113,-258 }, { 114,-258 }, { 115,-258 }, { 116,-258 },
 { 117,-258 }, { 118,-258 }, { 119,-258 }, { 120,-258 }, { 121,-258 },
 { 122,-258 }, { 123,-258 }, { 124,-258 }, { 125,-258 }, { 126,-258 },
 { 127,-258 }, { 128,-258 }, { 129,-258 }, { 130,-258 }, { 131,-258 },
 { 132,-258 }, { 133,-258 }, { 134,-258 }, { 135,-258 }, { 136,-258 },
 { 137,-258 }, { 138,-258 }, { 139,-258 }, { 140,-258 }, { 141,-258 },
 { 142,-258 }, { 143,-258 }, { 144,-258 }, { 145,-258 }, { 146,-258 },
 { 147,-258 }, { 148,-258 }, { 149,-258 }, { 150,-258 }, { 151,-258 },
 { 152,-258 }, { 153,-258 }, { 154,-258 }, { 155,-258 }, { 156,-258 },

 { 157,-258 }, { 158,-258 }, { 159,-258 }, { 160,-258 }, { 161,-258 },
 { 162,-258 }, { 163,-258 }, { 164,-258 }, { 165,-258 }, { 166,-258 },
 { 167,-258 }, { 168,-258 }, { 169,-258 }, { 170,-258 }, { 171,-258 },
 { 172,-258 }, { 173,-258 }, { 174,-258 }, { 175,-258 }, { 176,-258 },
 { 177,-258 }, { 178,-258 }, { 179,-258 }, { 180,-258 }, { 181,-258 },
 { 182,-258 }, { 183,-258 }, { 184,-258 }, { 185,-258 }, { 186,-258 },
 { 187,-258 }, { 188,-258 }, { 189,-258 }, { 190,-258 }, { 191,-258 },
 { 192,-258 }, { 193,-258 }, { 194,-258 }, { 195,-258 }, { 196,-258 },
 { 197,-258 }, { 198,-258 }, { 199,-258 }, { 200,-258 }, { 201,-258 },
 { 202,-258 }, { 203,-258 }, { 204,-258 }, { 205,-258 }, { 206,-258 },

 { 207,-258 }, { 208,-258 }, { 209,-258 }, { 210,-258 }, { 211,-258 },
 { 212,-258 }, { 213,-258 }, { 214,-258 }, { 215,-258 }, { 216,-258 },
 { 217,-258 }, { 218,-258 }, { 219,-258 }, { 220,-258 }, { 221,-258 },
 { 222,-258 }, { 223,-258 }, { 224,-258 }, { 225,-258 }, { 226,-258 },
 { 227,-258 }, { 228,-258 }, { 229,-258 }, { 230,-258 }, { 231,-258 },
 { 232,-258 }, { 233,-258 }, { 234,-258 }, { 235,-258 }, { 236,-258 },
 { 237,-258 }, { 238,-258 }, { 239,-258 }, { 240,-258 }, { 241,-258 },
 { 242,-258 }, { 243,-258 }, { 244,-258 }, { 245,-258 }, { 246,-258 },
 { 247,-258 }, { 248,-258 }, { 249,-258 }, { 250,-258 }, { 251,-258 },
 { 252,-258 }, { 253,-258 }, { 254,-258 }, { 255,-258 }, { 256,-258 },

 {   0,   9 }, {   0,6333 }, {   1,-516 }, {   2,-516 }, {   3,-516 },
 {   4,-516 }, {   5,-516 }, {   6,-516 }, {   7,-516 }, {   8,-516 },
 {   9,-258 }, {  10,-3695 }, {  11,-516 }, {  12,-258 }, {  13,-3695 },
 {  14,-516 }, {  15,-516 }, {  16,-516 }, {  17,-516 }, {  18,-516 },
 {  19,-516 }, {  20,-516 }, {  21,-516 }, {  22,-516 }, {  23,-516 },
 {  24,-516 }, {  25,-516 }, {  26,-516 }, {  27,-516 }, {  28,-516 },
 {  29,-516 }, {  30,-516 }, {  31,-516 }, {  32,-258 }, {  33,-516 },
 {  34,-516 }, {  35,-516 }, {  36,-516 }, {  37,-516 }, {  38,-516 },
 {  39,-516 }, {  40,-516 }, {  41,-516 }, {  42,-516 }, {  43,-516 },
 {  44,-516 }, {  45,3143 }, {  46,-516 }, {  47,-516 }, {  48,-516 },

 {  49,-516 }, {  50,-516 }, {  51,-516 }, {  52,-516 }, {  53,-516 },
 {  54,-516 }, {  55,-516 }, {  56,-516 }, {  57,-516 }, {  58,-516 },
 {  59,-516 }, {  60,-516 }, {  61,-516 }, {  62,-516 }, {  63,-516 },
 {  64,-516 }, {  65,-516 }, {  66,-516 }, {  67,-516 }, {  68,-516 },
 {  69,-516 }, {  70,-516 }, {  71,-516 }, {  72,-516 }, {  73,-516 },
 {  74,-516 }, {  75,-516 }, {  76,-516 }, {  77,-516 }, {  78,-516 },
 {  79,-516 }, {  80,-516 }, {  81,-516 }, {  82,-516 }, {  83,-516 },
 {  84,-516 }, {  85,-516 }, {  86,-516 }, {  87,-516 }, {  88,-516 },
 {  89,-516 }, {  90,-516 }, {  91,-516 }, {  92,-516 }, {  93,-516 },
 {  94,-516 }, {  95,-516 }, {  96,-516 }, {  97,-516 }, {  98,-516 },

 {  99,-516 }, { 100,-516 }, { 101,-516 }, { 102,-516 }, { 103,-516 },
 { 104,-516 }, { 105,-516 }, { 106,-516 }, { 107,-516 }, { 108,-516 },
 { 109,-516 }, { 110,-516 }, { 111,-516 }, { 112,-516 }, { 113,-516 },
 { 114,-516 }, { 115,-516 }, { 116,-516 }, { 117,-516 }, { 118,-516 },
 { 119,-516 }, { 120,-516 }, { 121,-516 }, { 122,-516 }, { 123,-516 },
 { 124,-516 }, { 125,-516 }, { 126,-516 }, { 127,-516 }, { 128,-516 },
 { 129,-516 }, { 130,-516 }, { 131,-516 }, { 132,-516 }, { 133,-516 },
 { 134,-516 }, { 135,-516 }, { 136,-516 }, { 137,-516 }, { 138,-516 },
 { 139,-516 }, { 140,-516 }, { 141,-516 }, { 142,-516 }, { 143,-516 },
 { 144,-516 }, { 145,-516 }, { 146,-516 }, { 147,-516 }, { 148,-516 },

 { 149,-516 }, { 150,-516 }, { 151,-516 }, { 152,-516 }, { 153,-516 },
 { 154,-516 }, { 155,-516 }, { 156,-516 }, { 157,-516 }, { 158,-516 },
 { 159,-516 }, { 160,-516 }, { 161,-516 }, { 162,-516 }, { 163,-516 },
 { 164,-516 }, { 165,-516 }, { 166,-516 }, { 167,-516 }, { 168,-516 },
 { 169,-516 }, { 170,-516 }, { 171,-516 }, { 172,-516 }, { 173,-516 },
 { 174,-516 }, { 175,-516 }, { 176,-516 }, { 177,-516 }, { 178,-516 },
 { 179,-516 }, { 180,-516 }, { 181,-516 }, { 182,-516 }, { 183,-516 },
 { 184,-516 }, { 185,-516 }, { 186,-516 }, { 187,-516 }, { 188,-516 },
 { 189,-516 }, { 190,-516 }, { 191,-516 }, { 192,-516 }, { 193,-516 },
 { 194,-516 }, { 195,-516 }, { 196,-516 }, { 197,-516 }, { 198,-516 },

 { 199,-516 }, { 200,-516 }, { 201,-516 }, { 202,-516 }, { 203,-516 },
 { 204,-516 }, { 205,-516 }, { 206,-516 }, { 207,-516 }, { 208,-516 },
 { 209,-516 }, { 210,-516 }, { 211,-516 }, { 212,-516 }, { 213,-516 },
 { 214,-516 }, { 215,-516 }, { 216,-516 }, { 217,-516 }, { 218,-516 },
 { 219,-516 }, { 220,-516 }, { 221,-516 }, { 222,-516 }, { 223,-516 },
 { 224,-516 }, { 225,-516 }, { 226,-516 }, { 227,-516 }, { 228,-516 },
 { 229,-516 }, { 230,-516 }, { 231,-516 }, { 232,-516 }, { 233,-516 },
 { 234,-516 }, { 235,-516 }, { 236,-516 }, { 237,-516 }, { 238,-516 },
 { 239,-516 }, { 240,-516 }, { 241,-516 }, { 242,-516 }, { 243,-516 },
 { 244,-516 }, { 245,-516 }, { 246,-516 }, { 247,-516 }, { 248,-516 },

 { 249,-516 }, { 250,-516 }, { 251,-516 }, { 252,-516 }, { 253,-516 },
 { 254,-516 }, { 255,-516 }, { 256,-516 }, {   0,  16 }, {   0,6075 },
 {   1,3143 }, {   2,3143 }, {   3,3143 }, {   4,3143 }, {   5,3143 },
 {   6,3143 }, {   7,3143 }, {   8,3143 }, {   9,3401 }, {  10,3659 },
 {  11,3143 }, {  12,3401 }, {  13,3659 }, {  14,3143 }, {  15,3143 },
 {  16,3143 }, {  17,3143 }, {  18,3143 }, {  19,3143 }, {  20,3143 },
 {  21,3143 }, {  22,3143 }, {  23,3143 }, {  24,3143 }, {  25,3143 },
 {  26,3143 }, {  27,3143 }, {  28,3143 }, {  29,3143 }, {  30,3143 },
 {  31,3143 }, {  32,3401 }, {  33,3143 }, {  34,3143 }, {  35,3143 },
 {  36,3143 }, {  37,3143 }, {  38,3143 }, {  39,3143 }, {  40,3143 },

 {  41,3143 }, {  42,3143 }, {  43,3143 }, {  44,3143 }, {  45,3706 },
 {  46,3143 }, {  47,3143 }, {  48,3143 }, {  49,3143 }, {  50,3143 },
 {  51,3143 }, {  52,3143 }, {  53,3143 }, {  54,3143 }, {  55,3143 },
 {  56,3143 }, {  57,3143 }, {  58,3143 }, {  59,3143 }, {  60,3143 },
 {  61,3143 }, {  62,3143 }, {  63,3143 }, {  64,3143 }, {  65,3143 },
 {  66,3143 }, {  67,3143 }, {  68,3143 }, {  69,3143 }, {  70,3143 },
 {  71,3143 }, {  72,3143 }, {  73,3143 }, {  74,3143 }, {  75,3143 },
 {  76,3143 }, {  77,3143 }, {  78,3143 }, {  79,3143 }, {  80,3143 },
 {  81,3143 }, {  82,3143 }, {  83,3143 }, {  84,3143 }, {  85,3143 },
 {  86,3143 }, {  87,3143 }, {  88,3143 }, {  89,3143 }, {  90,3143 },

 {  91,3143 }, {  92,3143 }, {  93,3143 }, {  94,3143 }, {  95,3143 },
 {  96,3143 }, {  97,3143 }, {  98,3143 }, {  99,3143 }, { 100,3143 },
 { 101,3143 }, { 102,3143 }, { 103,3143 }, { 104,3143 }, { 105,3143 },
 { 106,3143 }, { 107,3143 }, { 108,3143 }, { 109,3143 }, { 110,3143 },
 { 111,3143 }, { 112,3143 }, { 113,3143 }, { 114,3143 }, { 115,3143 },
 { 116,3143 }, { 117,3143 }, { 118,3143 }, { 119,3143 }, { 120,3143 },
 { 121,3143 }, { 122,3143 }, { 123,3143 }, { 124,3143 }, { 125,3143 },
 { 126,3143 }, { 127,3143 }, { 128,3143 }, { 129,3143 }, { 130,3143 },
 { 131,3143 }, { 132,3143 }, { 133,3143 }, { 134,3143 }, { 135,3143 },
 { 136,3143 }, { 137,3143 }, { 138,3143 }, { 139,3143 }, { 140,3143 },

 { 141,3143 }, { 142,3143 }, { 143,3143 }, { 144,3143 }, { 145,3143 },
 { 146,3143 }, { 147,3143 }, { 148,3143 }, { 149,3143 }, { 150,3143 },
 { 151,3143 }, { 152,3143 }, { 153,3143 }, { 154,3143 }, { 155,3143 },
 { 156,3143 }, { 157,3143 }, { 158,3143 }, { 159,3143 }, { 160,3143 },
 { 161,3143 }, { 162,3143 }, { 163,3143 }, { 164,3143 }, { 165,3143 },
 { 166,3143 }, { 167,3143 }, { 168,3143 }, { 169,3143 }, { 170,3143 },
 { 171,3143 }, { 172,3143 }, { 173,3143 }, { 174,3143 }, { 175,3143 },
 { 176,3143 }, { 177,3143 }, { 178,3143 }, { 179,3143 }, { 180,3143 },
 { 181,3143 }, { 182,3143 }, { 183,3143 }, { 184,3143 }, { 185,3143 },
 { 186,3143 }, { 187,3143 }, { 188,3143 }, { 189,3143 }, { 190,3143 },

 { 191,3143 }, { 192,3143 }, { 193,3143 }, { 194,3143 }, { 195,3143 },
 { 196,3143 }, { 197,3143 }, { 198,3143 }, { 199,3143 }, { 200,3143 },
 { 201,3143 }, { 202,3143 }, { 203,3143 }, { 204,3143 }, { 205,3143 },
 { 206,3143 }, { 207,3143 }, { 208,3143 }, { 209,3143 }, { 210,3143 },
 { 211,3143 }, { 212,3143 }, { 213,3143 }, { 214,3143 }, { 215,3143 },
 { 216,3143 }, { 217,3143 }, { 218,3143 }, { 219,3143 }, { 220,3143 },
 { 221,3143 }, { 222,3143 }, { 223,3143 }, { 224,3143 }, { 225,3143 },
 { 226,3143 }, { 227,3143 }, { 228,3143 }, { 229,3143 }, { 230,3143 },
 { 231,3143 }, { 232,3143 }, { 233,3143 }, { 234,3143 }, { 235,3143 },
 { 236,3143 }, { 237,3143 }, { 238,3143 }, { 239,3143 }, { 240,3143 },

 { 241,3143 }, { 242,3143 }, { 243,3143 }, { 244,3143 }, { 245,3143 },
 { 246,3143 }, { 247,3143 }, { 248,3143 }, { 249,3143 }, { 250,3143 },
 { 251,3143 }, { 252,3143 }, { 253,3143 }, { 254,3143 }, { 255,3143 },
 { 256,3143 }, {   0,  16 }, {   0,5817 }, {   1,   0 }, {   2,   0 },
 {   3,   0 }, {   4,   0 }, {   5,   0 }, {   6,   0 }, {   7,   0 },
 {   8,   0 }, {   9, 258 }, {  10,-3257 }, {  11,   0 }, {  12, 258 },
 {  13,-3257 }, {  14,   0 }, {  15,   0 }, {  16,   0 }, {  17,   0 },
 {  18,   0 }, {  19,   0 }, {  20,   0 }, {  21,   0 }, {  22,   0 },
 {  23,   0 }, {  24,   0 }, {  25,   0 }, {  26,   0 }, {  27,   0 },
 {  28,   0 }, {  29,   0 }, {  30,   0 }, {  31,   0 }, {  32, 258 },

 {  33,   0 }, {  34,   0 }, {  35,   0 }, {  36,   0 }, {  37,   0 },
 {  38,   0 }, {  39,   0 }, {  40,   0 }, {  41,   0 }, {  42,   0 },
 {  43,   0 }, {  44,   0 }, {  45, 516 }, {  46,   0 }, {  47,   0 },
 {  48,   0 }, {  49,   0 }, {  50,   0 }, {  51,   0 }, {  52,   0 },
 {  53,   0 }, {  54,   0 }, {  55,   0 }, {  56,   0 }, {  57,   0 },
 {  58,   0 }, {  59,   0 }, {  60,   0 }, {  61,   0 }, {  62,   0 },
 {  63,   0 }, {  64,   0 }, {  65,   0 }, {  66,   0 }, {  67,   0 },
 {  68,   0 }, {  69,   0 }, {  70,   0 }, {  71,   0 }, {  72,   0 },
 {  73,   0 }, {  74,   0 }, {  75,   0 }, {  76,   0 }, {  77,   0 },
 {  78,   0 }, {  79,   0 }, {  80,   0 }, {  81,   0 }, {  82,   0 },

 {  83,   0 }, {  84,   0 }, {  85,   0 }, {  86,   0 }, {  87,   0 },
 {  88,   0 }, {  89,   0 }, {  90,   0 }, {  91,   0 }, {  92,   0 },
 {  93,   0 }, {  94,   0 }, {  95,   0 }, {  96,   0 }, {  97,   0 },
 {  98,   0 }, {  99,   0 }, { 100,   0 }, { 101,   0 }, { 102,   0 },
 { 103,   0 }, { 104,   0 }, { 105,   0 }, { 106,   0 }, { 107,   0 },
 { 108,   0 }, { 109,   0 }, { 110,   0 }, { 111,   0 }, { 112,   0 },
 { 113,   0 }, { 114,   0 }, { 115,   0 }, { 116,   0 }, { 117,   0 },
 { 118,   0 }, { 119,   0 }, { 120,   0 }, { 121,   0 }, { 122,   0 },
 { 123,   0 }, { 124,   0 }, { 125,   0 }, { 126,   0 }, { 127,   0 },
 { 128,   0 }, { 129,   0 }, { 130,   0 }, { 131,   0 }, { 132,   0 },

 { 133,   0 }, { 134,   0 }, { 135,   0 }, { 136,   0 }, { 137,   0 },
 { 138,   0 }, { 139,   0 }, { 140,   0 }, { 141,   0 }, { 142,   0 },
 { 143,   0 }, { 144,   0 }, { 145,   0 }, { 146,   0 }, { 147,   0 },
 { 148,   0 }, { 149,   0 }, { 150,   0 }, { 151,   0 }, { 152,   0 },
 { 153,   0 }, { 154,   0 }, { 155,   0 }, { 156,   0 }, { 157,   0 },
 { 158,   0 }, { 159,   0 }, { 160,   0 }, { 161,   0 }, { 162,   0 },
 { 163,   0 }, { 164,   0 }, { 165,   0 }, { 166,   0 }, { 167,   0 },
 { 168,   0 }, { 169,   0 }, { 170,   0 }, { 171,   0 }, { 172,   0 },
 { 173,   0 }, { 174,   0 }, { 175,   0 }, { 176,   0 }, { 177,   0 },
 { 178,   0 }, { 179,   0 }, { 180,   0 }, { 181,   0 }, { 182,   0 },

 { 183,   0 }, { 184,   0 }, { 185,   0 }, { 186,   0 }, { 187,   0 },
 { 188,   0 }, { 189,   0 }, { 190,   0 }, { 191,   0 }, { 192,   0 },
 { 193,   0 }, { 194,   0 }, { 195,   0 }, { 196,   0 }, { 197,   0 },
 { 198,   0 }, { 199,   0 }, { 200,   0 }, { 201,   0 }, { 202,   0 },
 { 203,   0 }, { 204,   0 }, { 205,   0 }, { 206,   0 }, { 207,   0 },
 { 208,   0 }, { 209,   0 }, { 210,   0 }, { 211,   0 }, { 212,   0 },
 { 213,   0 }, { 214,   0 }, { 215,   0 }, { 216,   0 }, { 217,   0 },
 { 218,   0 }, { 219,   0 }, { 220,   0 }, { 221,   0 }, { 222,   0 },
 { 223,   0 }, { 224,   0 }, { 225,   0 }, { 226,   0 }, { 227,   0 },
 { 228,   0 }, { 229,   0 }, { 230,   0 }, { 231,   0 }, { 232,   0 },

 { 233,   0 }, { 234,   0 }, { 235,   0 }, { 236,   0 }, { 237,   0 },
 { 238,   0 }, { 239,   0 }, { 240,   0 }, { 241,   0 }, { 242,   0 },
 { 243,   0 }, { 244,   0 }, { 245,   0 }, { 246,   0 }, { 247,   0 },
 { 248,   0 }, { 249,   0 }, { 250,   0 }, { 251,   0 }, { 252,   0 },
 { 253,   0 }, { 254,   0 }, { 255,   0 }, { 256,   0 }, {   0,  16 },
 {   0,5559 }, {   1,-258 }, {   2,-258 }, {   3,-258 }, {   4,-258 },
 {   5,-258 }, {   6,-258 }, {   7,-258 }, {   8,-258 }, {   9,   0 },
 {  10,-3515 }, {  11,-258 }, {  12,   0 }, {  13,-3515 }, {  14,-258 },
 {  15,-258 }, {  16,-258 }, {  17,-258 }, {  18,-258 }, {  19,-258 },
 {  20,-258 }, {  21,-258 }, {  22,-258 }, {  23,-258 }, {  24,-258 },

 {  25,-258 }, {  26,-258 }, {  27,-258 }, {  28,-258 }, {  29,-258 },
 {  30,-258 }, {  31,-258 }, {  32,   0 }, {  33,-258 }, {  34,-258 },
 {  35,-258 }, {  36,-258 }, {  37,-258 }, {  38,-258 }, {  39,-258 },
 {  40,-258 }, {  41,-258 }, {  42,-258 }, {  43,-258 }, {  44,-258 },
 {  45, 258 }, {  46,-258 }, {  47,-258 }, {  48,-258 }, {  49,-258 },
 {  50,-258 }, {  51,-258 }, {  52,-258 }, {  53,-258 }, {  54,-258 },
 {  55,-258 }, {  56,-258 }, {  57,-258 }, {  58,-258 }, {  59,-258 },
 {  60,-258 }, {  61,-258 }, {  62,-258 }, {  63,-258 }, {  64,-258 },
 {  65,-258 }, {  66,-258 }, {  67,-258 }, {  68,-258 }, {  69,-258 },
 {  70,-258 }, {  71,-258 }, {  72,-258 }, {  73,-258 }, {  74,-258 },

 {  75,-258 }, {  76,-258 }, {  77,-258 }, {  78,-258 }, {  79,-258 },
 {  80,-258 }, {  81,-258 }, {  82,-258 }, {  83,-258 }, {  84,-258 },
 {  85,-258 }, {  86,-258 }, {  87,-258 }, {  88,-258 }, {  89,-258 },
 {  90,-258 }, {  91,-258 }, {  92,-258 }, {  93,-258 }, {  94,-258 },
 {  95,-258 }, {  96,-258 }, {  97,-258 }, {  98,-258 }, {  99,-258 },
 { 100,-258 }, { 101,-258 }, { 102,-258 }, { 103,-258 }, { 104,-258 },
 { 105,-258 }, { 106,-258 }, { 107,-258 }, { 108,-258 }, { 109,-258 },
 { 110,-258 }, { 111,-258 }, { 112,-258 }, { 113,-258 }, { 114,-258 },
 { 115,-258 }, { 116,-258 }, { 117,-258 }, { 118,-258 }, { 119,-258 },
 { 120,-258 }, { 121,-258 }, { 122,-258 }, { 123,-258 }, { 124,-258 },

 { 125,-258 }, { 126,-258 }, { 127,-258 }, { 128,-258 }, { 129,-258 },
 { 130,-258 }, { 131,-258 }, { 132,-258 }, { 133,-258 }, { 134,-258 },
 { 135,-258 }, { 136,-258 }, { 137,-258 }, { 138,-258 }, { 139,-258 },
 { 140,-258 }, { 141,-258 }, { 142,-258 }, { 143,-258 }, { 144,-258 },
 { 145,-258 }, { 146,-258 }, { 147,-258 }, { 148,-258 }, { 149,-258 },
 { 150,-258 }, { 151,-258 }, { 152,-258 }, { 153,-258 }, { 154,-258 },
 { 155,-258 }, { 156,-258 }, { 157,-258 }, { 158,-258 }, { 159,-258 },
 { 160,-258 }, { 161,-258 }, { 162,-258 }, { 163,-258 }, { 164,-258 },
 { 165,-258 }, { 166,-258 }, { 167,-258 }, { 168,-258 }, { 169,-258 },
 { 170,-258 }, { 171,-258 }, { 172,-258 }, { 173,-258 }, { 174,-258 },

 { 175,-258 }, { 176,-258 }, { 177,-258 }, { 178,-258 }, { 179,-258 },
 { 180,-258 }, { 181,-258 }, { 182,-258 }, { 183,-258 }, { 184,-258 },
 { 185,-258 }, { 186,-258 }, { 187,-258 }, { 188,-258 }, { 189,-258 },
 { 190,-258 }, { 191,-258 }, { 192,-258 }, { 193,-258 }, { 194,-258 },
 { 195,-258 }, { 196,-258 }, { 197,-258 }, { 198,-258 }, { 199,-258 },
 { 200,-258 }, { 201,-258 }, { 202,-258 }, { 203,-258 }, { 204,-258 },
 { 205,-258 }, { 206,-258 }, { 207,-258 }, { 208,-258 }, { 209,-258 },
 { 210,-258 }, { 211,-258 }, { 212,-258 }, { 213,-258 }, { 214,-258 },
 { 215,-258 }, { 216,-258 }, { 217,-258 }, { 218,-258 }, { 219,-258 },
 { 220,-258 }, { 221,-258 }, { 222,-258 }, { 223,-258 }, { 224,-258 },

 { 225,-258 }, { 226,-258 }, { 227,-258 }, { 228,-258 }, { 229,-258 },
 { 230,-258 }, { 231,-258 }, { 232,-258 }, { 233,-258 }, { 234,-258 },
 { 235,-258 }, { 236,-258 }, { 237,-258 }, { 238,-258 }, { 239,-258 },
 { 240,-258 }, { 241,-258 }, { 242,-258 }, { 243,-258 }, { 244,-258 },
 { 245,-258 }, { 246,-258 }, { 247,-258 }, { 248,-258 }, { 249,-258 },
 { 250,-258 }, { 251,-258 }, { 252,-258 }, { 253,-258 }, { 254,-258 },
 { 255,-258 }, { 256,-258 }, {   0,  16 }, {   0,5301 }, {   1,-516 },
 {   2,-516 }, {   3,-516 }, {   4,-516 }, {   5,-516 }, {   6,-516 },
 {   7,-516 }, {   8,-516 }, {   9,-258 }, {  10,-3773 }, {  11,-516 },
 {  12,-258 }, {  13,-3773 }, {  14,-516 }, {  15,-516 }, {  16,-516 },

 {  17,-516 }, {  18,-516 }, {  19,-516 }, {  20,-516 }, {  21,-516 },
 {  22,-516 }, {  23,-516 }, {  24,-516 }, {  25,-516 }, {  26,-516 },
 {  27,-516 }, {  28,-516 }, {  29,-516 }, {  30,-516 }, {  31,-516 },
 {  32,-258 }, {  33,-516 }, {  34,-516 }, {  35,-516 }, {  36,-516 },
 {  37,-516 }, {  38,-516 }, {  39,-516 }, {  40,-516 }, {  41,-516 },
 {  42,-516 }, {  43,-516 }, {  44,-516 }, {  45,3190 }, {  46,-516 },
 {  47,-516 }, {  48,-516 }, {  49,-516 }, {  50,-516 }, {  51,-516 },
 {  52,-516 }, {  53,-516 }, {  54,-516 }, {  55,-516 }, {  56,-516 },
 {  57,-516 }, {  58,-516 }, {  59,-516 }, {  60,-516 }, {  61,-516 },
 {  62,-516 }, {  63,-516 }, {  64,-516 }, {  65,-516 }, {  66,-516 },

 {  67,-516 }, {  68,-516 }, {  69,-516 }, {  70,-516 }, {  71,-516 },
 {  72,-516 }, {  73,-516 }, {  74,-516 }, {  75,-516 }, {  76,-516 },
 {  77,-516 }, {  78,-516 }, {  79,-516 }, {  80,-516 }, {  81,-516 },
 {  82,-516 }, {  83,-516 }, {  84,-516 }, {  85,-516 }, {  86,-516 },
 {  87,-516 }, {  88,-516 }, {  89,-516 }, {  90,-516 }, {  91,-516 },
 {  92,-516 }, {  93,-516 }, {  94,-516 }, {  95,-516 }, {  96,-516 },
 {  97,-516 }, {  98,-516 }, {  99,-516 }, { 100,-516 }, { 101,-516 },
 { 102,-516 }, { 103,-516 }, { 104,-516 }, { 105,-516 }, { 106,-516 },
 { 107,-516 }, { 108,-516 }, { 109,-516 }, { 110,-516 }, { 111,-516 },
 { 112,-516 }, { 113,-516 }, { 114,-516 }, { 115,-516 }, { 116,-516 },

 { 117,-516 }, { 118,-516 }, { 119,-516 }, { 120,-516 }, { 121,-516 },
 { 122,-516 }, { 123,-516 }, { 124,-516 }, { 125,-516 }, { 126,-516 },
 { 127,-516 }, { 128,-516 }, { 129,-516 }, { 130,-516 }, { 131,-516 },
 { 132,-516 }, { 133,-516 }, { 134,-516 }, { 135,-516 }, { 136,-516 },
 { 137,-516 }, { 138,-516 }, { 139,-516 }, { 140,-516 }, { 141,-516 },
 { 142,-516 }, { 143,-516 }, { 144,-516 }, { 145,-516 }, { 146,-516 },
 { 147,-516 }, { 148,-516 }, { 149,-516 }, { 150,-516 }, { 151,-516 },
 { 152,-516 }, { 153,-516 }, { 154,-516 }, { 155,-516 }, { 156,-516 },
 { 157,-516 }, { 158,-516 }, { 159,-516 }, { 160,-516 }, { 161,-516 },
 { 162,-516 }, { 163,-516 }, { 164,-516 }, { 165,-516 }, { 166,-516 },

 { 167,-516 }, { 168,-516 }, { 169,-516 }, { 170,-516 }, { 171,-516 },
 { 172,-516 }, { 173,-516 }, { 174,-516 }, { 175,-516 }, { 176,-516 },
 { 177,-516 }, { 178,-516 }, { 179,-516 }, { 180,-516 }, { 181,-516 },
 { 182,-516 }, { 183,-516 }, { 184,-516 }, { 185,-516 }, { 186,-516 },
 { 187,-516 }, { 188,-516 }, { 189,-516 }, { 190,-516 }, { 191,-516 },
 { 192,-516 }, { 193,-516 }, { 194,-516 }, { 195,-516 }, { 196,-516 },
 { 197,-516 }, { 198,-516 }, { 199,-516 }, { 200,-516 }, { 201,-516 },
 { 202,-516 }, { 203,-516 }, { 204,-516 }, { 205,-516 }, { 206,-516 },
 { 207,-516 }, { 208,-516 }, { 209,-516 }, { 210,-516 }, { 211,-516 },
 { 212,-516 }, { 213,-516 }, { 214,-516 }, { 215,-516 }, { 216,-516 },

 { 217,-516 }, { 218,-516 }, { 219,-516 }, { 220,-516 }, { 221,-516 },
 { 222,-516 }, { 223,-516 }, { 224,-516 }, { 225,-516 }, { 226,-516 },
 { 227,-516 }, { 228,-516 }, { 229,-516 }, { 230,-516 }, { 231,-516 },
 { 232,-516 }, { 233,-516 }, { 234,-516 }, { 235,-516 }, { 236,-516 },
 { 237,-516 }, { 238,-516 }, { 239,-516 }, { 240,-516 }, { 241,-516 },
 { 242,-516 }, { 243,-516 }, { 244,-516 }, { 245,-516 }, { 246,-516 },
 { 247,-516 }, { 248,-516 }, { 249,-516 }, { 250,-516 }, { 251,-516 },
 { 252,-516 }, { 253,-516 }, { 254,-516 }, { 255,-516 }, { 256,-516 },
 {   0,  19 }, {   0,5043 }, {   1,3190 }, {   2,3190 }, {   3,3190 },
 {   4,3190 }, {   5,3190 }, {   6,3190 }, {   7,3190 }, {   8,3190 },

 {   9,3448 }, {  10,3706 }, {  11,3190 }, {  12,3448 }, {  13,3706 },
 {  14,3190 }, {  15,3190 }, {  16,3190 }, {  17,3190 }, {  18,3190 },
 {  19,3190 }, {  20,3190 }, {  21,3190 }, {  22,3190 }, {  23,3190 },
 {  24,3190 }, {  25,3190 }, {  26,3190 }, {  27,3190 }, {  28,3190 },
 {  29,3190 }, {  30,3190 }, {  31,3190 }, {  32,3448 }, {  33,3190 },
 {  34,3190 }, {  35,3190 }, {  36,3190 }, {  37,3190 }, {  38,3190 },
 {  39,3190 }, {  40,3190 }, {  41,3190 }, {  42,3190 }, {  43,3190 },
 {  44,3190 }, {  45,3753 }, {  46,3190 }, {  47,3190 }, {  48,3190 },
 {  49,3190 }, {  50,3190 }, {  51,3190 }, {  52,3190 }, {  53,3190 },
 {  54,3190 }, {  55,3190 }, {  56,3190 }, {  57,3190 }, {  58,3190 },

 {  59,3190 }, {  60,3190 }, {  61,3190 }, {  62,3190 }, {  63,3190 },
 {  64,3190 }, {  65,3190 }, {  66,3190 }, {  67,3190 }, {  68,3190 },
 {  69,3190 }, {  70,3190 }, {  71,3190 }, {  72,3190 }, {  73,3190 },
 {  74,3190 }, {  75,3190 }, {  76,3190 }, {  77,3190 }, {  78,3190 },
 {  79,3190 }, {  80,3190 }, {  81,3190 }, {  82,3190 }, {  83,3190 },
 {  84,3190 }, {  85,3190 }, {  86,3190 }, {  87,3190 }, {  88,3190 },
 {  89,3190 }, {  90,3190 }, {  91,3190 }, {  92,3190 }, {  93,3190 },
 {  94,3190 }, {  95,3190 }, {  96,3190 }, {  97,3190 }, {  98,3190 },
 {  99,3190 }, { 100,3190 }, { 101,3190 }, { 102,3190 }, { 103,3190 },
 { 104,3190 }, { 105,3190 }, { 106,3190 }, { 107,3190 }, { 108,3190 },

 { 109,3190 }, { 110,3190 }, { 111,3190 }, { 112,3190 }, { 113,3190 },
 { 114,3190 }, { 115,3190 }, { 116,3190 }, { 117,3190 }, { 118,3190 },
 { 119,3190 }, { 120,3190 }, { 121,3190 }, { 122,3190 }, { 123,3190 },
 { 124,3190 }, { 125,3190 }, { 126,3190 }, { 127,3190 }, { 128,3190 },
 { 129,3190 }, { 130,3190 }, { 131,3190 }, { 132,3190 }, { 133,3190 },
 { 134,3190 }, { 135,3190 }, { 136,3190 }, { 137,3190 }, { 138,3190 },
 { 139,3190 }, { 140,3190 }, { 141,3190 }, { 142,3190 }, { 143,3190 },
 { 144,3190 }, { 145,3190 }, { 146,3190 }, { 147,3190 }, { 148,3190 },
 { 149,3190 }, { 150,3190 }, { 151,3190 }, { 152,3190 }, { 153,3190 },
 { 154,3190 }, { 155,3190 }, { 156,3190 }, { 157,3190 }, { 158,3190 },

 { 159,3190 }, { 160,3190 }, { 161,3190 }, { 162,3190 }, { 163,3190 },
 { 164,3190 }, { 165,3190 }, { 166,3190 }, { 167,3190 }, { 168,3190 },
 { 169,3190 }, { 170,3190 }, { 171,3190 }, { 172,3190 }, { 173,3190 },
 { 174,3190 }, { 175,3190 }, { 176,3190 }, { 177,3190 }, { 178,3190 },
 { 179,3190 }, { 180,3190 }, { 181,3190 }, { 182,3190 }, { 183,3190 },
 { 184,3190 }, { 185,3190 }, { 186,3190 }, { 187,3190 }, { 188,3190 },
 { 189,3190 }, { 190,3190 }, { 191,3190 }, { 192,3190 }, { 193,3190 },
 { 194,3190 }, { 195,3190 }, { 196,3190 }, { 197,3190 }, { 198,3190 },
 { 199,3190 }, { 200,3190 }, { 201,3190 }, { 202,3190 }, { 203,3190 },
 { 204,3190 }, { 205,3190 }, { 206,3190 }, { 207,3190 }, { 208,3190 },

 { 209,3190 }, { 210,3190 }, { 211,3190 }, { 212,3190 }, { 213,3190 },
 { 214,3190 }, { 215,3190 }, { 216,3190 }, { 217,3190 }, { 218,3190 },
 { 219,3190 }, { 220,3190 }, { 221,3190 }, { 222,3190 }, { 223,3190 },
 { 224,3190 }, { 225,3190 }, { 226,3190 }, { 227,3190 }, { 228,3190 },
 { 229,3190 }, { 230,3190 }, { 231,3190 }, { 232,3190 }, { 233,3190 },
 { 234,3190 }, { 235,3190 }, { 236,3190 }, { 237,3190 }, { 238,3190 },
 { 239,3190 }, { 240,3190 }, { 241,3190 }, { 242,3190 }, { 243,3190 },
 { 244,3190 }, { 245,3190 }, { 246,3190 }, { 247,3190 }, { 248,3190 },
 { 249,3190 }, { 250,3190 }, { 251,3190 }, { 252,3190 }, { 253,3190 },
 { 254,3190 }, { 255,3190 }, { 256,3190 }, {   0,  19 }, {   0,4785 },

 {   1,   0 }, {   2,   0 }, {   3,   0 }, {   4,   0 }, {   5,   0 },
 {   6,   0 }, {   7,   0 }, {   8,   0 }, {   9, 258 }, {  10,-3979 },
 {  11,   0 }, {  12, 258 }, {  13,-3979 }, {  14,   0 }, {  15,   0 },
 {  16,   0 }, {  17,   0 }, {  18,   0 }, {  19,   0 }, {  20,   0 },
 {  21,   0 }, {  22,   0 }, {  23,   0 }, {  24,   0 }, {  25,   0 },
 {  26,   0 }, {  27,   0 }, {  28,   0 }, {  29,   0 }, {  30,   0 },
 {  31,   0 }, {  32, 258 }, {  33,   0 }, {  34,   0 }, {  35,   0 },
 {  36,   0 }, {  37,   0 }, {  38,   0 }, {  39,   0 }, {  40,   0 },
 {  41,   0 }, {  42,   0 }, {  43,   0 }, {  44,   0 }, {  45, 516 },
 {  46,   0 }, {  47,   0 }, {  48,   0 }, {  49,   0 }, {  50,   0 },

 {  51,   0 }, {  52,   0 }, {  53,   0 }, {  54,   0 }, {  55,   0 },
 {  56,   0 }, {  57,   0 }, {  58,   0 }, {  59,   0 }, {  60,   0 },
 {  61,   0 }, {  62,   0 }, {  63,   0 }, {  64,   0 }, {  65,   0 },
 {  66,   0 }, {  67,   0 }, {  68,   0 }, {  69,   0 }, {  70,   0 },
 {  71,   0 }, {  72,   0 }, {  73,   0 }, {  74,   0 }, {  75,   0 },
 {  76,   0 }, {  77,   0 }, {  78,   0 }, {  79,   0 }, {  80,   0 },
 {  81,   0 }, {  82,   0 }, {  83,   0 }, {  84,   0 }, {  85,   0 },
 {  86,   0 }, {  87,   0 }, {  88,   0 }, {  89,   0 }, {  90,   0 },
 {  91,   0 }, {  92,   0 }, {  93,   0 }, {  94,   0 }, {  95,   0 },
 {  96,   0 }, {  97,   0 }, {  98,   0 }, {  99,   0 }, { 100,   0 },

 { 101,   0 }, { 102,   0 }, { 103,   0 }, { 104,   0 }, { 105,   0 },
 { 106,   0 }, { 107,   0 }, { 108,   0 }, { 109,   0 }, { 110,   0 },
 { 111,   0 }, { 112,   0 }, { 113,   0 }, { 114,   0 }, { 115,   0 },
 { 116,   0 }, { 117,   0 }, { 118,   0 }, { 119,   0 }, { 120,   0 },
 { 121,   0 }, { 122,   0 }, { 123,   0 }, { 124,   0 }, { 125,   0 },
 { 126,   0 }, { 127,   0 }, { 128,   0 }, { 129,   0 }, { 130,   0 },
 { 131,   0 }, { 132,   0 }, { 133,   0 }, { 134,   0 }, { 135,   0 },
 { 136,   0 }, { 137,   0 }, { 138,   0 }, { 139,   0 }, { 140,   0 },
 { 141,   0 }, { 142,   0 }, { 143,   0 }, { 144,   0 }, { 145,   0 },
 { 146,   0 }, { 147,   0 }, { 148,   0 }, { 149,   0 }, { 150,   0 },

 { 151,   0 }, { 152,   0 }, { 153,   0 }, { 154,   0 }, { 155,   0 },
 { 156,   0 }, { 157,   0 }, { 158,   0 }, { 159,   0 }, { 160,   0 },
 { 161,   0 }, { 162,   0 }, { 163,   0 }, { 164,   0 }, { 165,   0 },
 { 166,   0 }, { 167,   0 }, { 168,   0 }, { 169,   0 }, { 170,   0 },
 { 171,   0 }, { 172,   0 }, { 173,   0 }, { 174,   0 }, { 175,   0 },
 { 176,   0 }, { 177,   0 }, { 178,   0 }, { 179,   0 }, { 180,   0 },
 { 181,   0 }, { 182,   0 }, { 183,   0 }, { 184,   0 }, { 185,   0 },
 { 186,   0 }, { 187,   0 }, { 188,   0 }, { 189,   0 }, { 190,   0 },
 { 191,   0 }, { 192,   0 }, { 193,   0 }, { 194,   0 }, { 195,   0 },
 { 196,   0 }, { 197,   0 }, { 198,   0 }, { 199,   0 }, { 200,   0 },

 { 201,   0 }, { 202,   0 }, { 203,   0 }, { 204,   0 }, { 205,   0 },
 { 206,   0 }, { 207,   0 }, { 208,   0 }, { 209,   0 }, { 210,   0 },
 { 211,   0 }, { 212,   0 }, { 213,   0 }, { 214,   0 }, { 215,   0 },
 { 216,   0 }, { 217,   0 }, { 218,   0 }, { 219,   0 }, { 220,   0 },
 { 221,   0 }, { 222,   0 }, { 223,   0 }, { 224,   0 }, { 225,   0 },
 { 226,   0 }, { 227,   0 }, { 228,   0 }, { 229,   0 }, { 230,   0 },
 { 231,   0 }, { 232,   0 }, { 233,   0 }, { 234,   0 }, { 235,   0 },
 { 236,   0 }, { 237,   0 }, { 238,   0 }, { 239,   0 }, { 240,   0 },
 { 241,   0 }, { 242,   0 }, { 243,   0 }, { 244,   0 }, { 245,   0 },
 { 246,   0 }, { 247,   0 }, { 248,   0 }, { 249,   0 }, { 250,   0 },

 { 251,   0 }, { 252,   0 }, { 253,   0 }, { 254,   0 }, { 255,   0 },
 { 256,   0 }, {   0,  19 }, {   0,4527 }, {   1,-258 }, {   2,-258 },
 {   3,-258 }, {   4,-258 }, {   5,-258 }, {   6,-258 }, {   7,-258 },
 {   8,-258 }, {   9,   0 }, {  10,-4237 }, {  11,-258 }, {  12,   0 },
 {  13,-4237 }, {  14,-258 }, {  15,-258 }, {  16,-258 }, {  17,-258 },
 {  18,-258 }, {  19,-258 }, {  20,-258 }, {  21,-258 }, {  22,-258 },
 {  23,-258 }, {  24,-258 }, {  25,-258 }, {  26,-258 }, {  27,-258 },
 {  28,-258 }, {  29,-258 }, {  30,-258 }, {  31,-258 }, {  32,   0 },
 {  33,-258 }, {  34,-258 }, {  35,-258 }, {  36,-258 }, {  37,-258 },
 {  38,-258 }, {  39,-258 }, {  40,-258 }, {  41,-258 }, {  42,-258 },

 {  43,-258 }, {  44,-258 }, {  45, 258 }, {  46,-258 }, {  47,-258 },
 {  48,-258 }, {  49,-258 }, {  50,-258 }, {  51,-258 }, {  52,-258 },
 {  53,-258 }, {  54,-258 }, {  55,-258 }, {  56,-258 }, {  57,-258 },
 {  58,-258 }, {  59,-258 }, {  60,-258 }, {  61,-258 }, {  62,-258 },
 {  63,-258 }, {  64,-258 }, {  65,-258 }, {  66,-258 }, {  67,-258 },
 {  68,-258 }, {  69,-258 }, {  70,-258 }, {  71,-258 }, {  72,-258 },
 {  73,-258 }, {  74,-258 }, {  75,-258 }, {  76,-258 }, {  77,-258 },
 {  78,-258 }, {  79,-258 }, {  80,-258 }, {  81,-258 }, {  82,-258 },
 {  83,-258 }, {  84,-258 }, {  85,-258 }, {  86,-258 }, {  87,-258 },
 {  88,-258 }, {  89,-258 }, {  90,-258 }, {  91,-258 }, {  92,-258 },

 {  93,-258 }, {  94,-258 }, {  95,-258 }, {  96,-258 }, {  97,-258 },
 {  98,-258 }, {  99,-258 }, { 100,-258 }, { 101,-258 }, { 102,-258 },
 { 103,-258 }, { 104,-258 }, { 105,-258 }, { 106,-258 }, { 107,-258 },
 { 108,-258 }, { 109,-258 }, { 110,-258 }, { 111,-258 }, { 112,-258 },
 { 113,-258 }, { 114,-258 }, { 115,-258 }, { 116,-258 }, { 117,-258 },
 { 118,-258 }, { 119,-258 }, { 120,-258 }, { 121,-258 }, { 122,-258 },
 { 123,-258 }, { 124,-258 }, { 125,-258 }, { 126,-258 }, { 127,-258 },
 { 128,-258 }, { 129,-258 }, { 130,-258 }, { 131,-258 }, { 132,-258 },
 { 133,-258 }, { 134,-258 }, { 135,-258 }, { 136,-258 }, { 137,-258 },
 { 138,-258 }, { 139,-258 }, { 140,-258 }, { 141,-258 }, { 142,-258 },

 { 143,-258 }, { 144,-258 }, { 145,-258 }, { 146,-258 }, { 147,-258 },
 { 148,-258 }, { 149,-258 }, { 150,-258 }, { 151,-258 }, { 152,-258 },
 { 153,-258 }, { 154,-258 }, { 155,-258 }, { 156,-258 }, { 157,-258 },
 { 158,-258 }, { 159,-258 }, { 160,-258 }, { 161,-258 }, { 162,-258 },
 { 163,-258 }, { 164,-258 }, { 165,-258 }, { 166,-258 }, { 167,-258 },
 { 168,-258 }, { 169,-258 }, { 170,-258 }, { 171,-258 }, { 172,-258 },
 { 173,-258 }, { 174,-258 }, { 175,-258 }, { 176,-258 }, { 177,-258 },
 { 178,-258 }, { 179,-258 }, { 180,-258 }, { 181,-258 }, { 182,-258 },
 { 183,-258 }, { 184,-258 }, { 185,-258 }, { 186,-258 }, { 187,-258 },
 { 188,-258 }, { 189,-258 }, { 190,-258 }, { 191,-258 }, { 192,-258 },

 { 193,-258 }, { 194,-258 }, { 195,-258 }, { 196,-258 }, { 197,-258 },
 { 198,-258 }, { 199,-258 }, { 200,-258 }, { 201,-258 }, { 202,-258 },
 { 203,-258 }, { 204,-258 }, { 205,-258 }, { 206,-258 }, { 207,-258 },
 { 208,-258 }, { 209,-258 }, { 210,-258 }, { 211,-258 }, { 212,-258 },
 { 213,-258 }, { 214,-258 }, { 215,-258 }, { 216,-258 }, { 217,-258 },
 { 218,-258 }, { 219,-258 }, { 220,-258 }, { 221,-258 }, { 222,-258 },
 { 223,-258 }, { 224,-258 }, { 225,-258 }, { 226,-258 }, { 227,-258 },
 { 228,-258 }, { 229,-258 }, { 230,-258 }, { 231,-258 }, { 232,-258 },
 { 233,-258 }, { 234,-258 }, { 235,-258 }, { 236,-258 }, { 237,-258 },
 { 238,-258 }, { 239,-258 }, { 240,-258 }, { 241,-258 }, { 242,-258 },

 { 243,-258 }, { 244,-258 }, { 245,-258 }, { 246,-258 }, { 247,-258 },
 { 248,-258 }, { 249,-258 }, { 250,-258 }, { 251,-258 }, { 252,-258 },
 { 253,-258 }, { 254,-258 }, { 255,-258 }, { 256,-258 }, {   0,  19 },
 {   0,4269 }, {   1,-516 }, {   2,-516 }, {   3,-516 }, {   4,-516 },
 {   5,-516 }, {   6,-516 }, {   7,-516 }, {   8,-516 }, {   9,-258 },
 {  10,-4495 }, {  11,-516 }, {  12,-258 }, {  13,-4495 }, {  14,-516 },
 {  15,-516 }, {  16,-516 }, {  17,-516 }, {  18,-516 }, {  19,-516 },
 {  20,-516 }, {  21,-516 }, {  22,-516 }, {  23,-516 }, {  24,-516 },
 {  25,-516 }, {  26,-516 }, {  27,-516 }, {  28,-516 }, {  29,-516 },
 {  30,-516 }, {  31,-516 }, {  32,-258 }, {  33,-516 }, {  34,-516 },

 {  35,-516 }, {  36,-516 }, {  37,-516 }, {  38,-516 }, {  39,-516 },
 {  40,-516 }, {  41,-516 }, {  42,-516 }, {  43,-516 }, {  44,-516 },
 {  45,3237 }, {  46,-516 }, {  47,-516 }, {  48,-516 }, {  49,-516 },
 {  50,-516 }, {  51,-516 }, {  52,-516 }, {  53,-516 }, {  54,-516 },
 {  55,-516 }, {  56,-516 }, {  57,-516 }, {  58,-516 }, {  59,-516 },
 {  60,-516 }, {  61,-516 }, {  62,-516 }, {  63,-516 }, {  64,-516 },
 {  65,-516 }, {  66,-516 }, {  67,-516 }, {  68,-516 }, {  69,-516 },
 {  70,-516 }, {  71,-516 }, {  72,-516 }, {  73,-516 }, {  74,-516 },
 {  75,-516 }, {  76,-516 }, {  77,-516 }, {  78,-516 }, {  79,-516 },
 {  80,-516 }, {  81,-516 }, {  82,-516 }, {  83,-516 }, {  84,-516 },

 {  85,-516 }, {  86,-516 }, {  87,-516 }, {  88,-516 }, {  89,-516 },
 {  90,-516 }, {  91,-516 }, {  92,-516 }, {  93,-516 }, {  94,-516 },
 {  95,-516 }, {  96,-516 }, {  97,-516 }, {  98,-516 }, {  99,-516 },
 { 100,-516 }, { 101,-516 }, { 102,-516 }, { 103,-516 }, { 104,-516 },
 { 105,-516 }, { 106,-516 }, { 107,-516 }, { 108,-516 }, { 109,-516 },
 { 110,-516 }, { 111,-516 }, { 112,-516 }, { 113,-516 }, { 114,-516 },
 { 115,-516 }, { 116,-516 }, { 117,-516 }, { 118,-516 }, { 119,-516 },
 { 120,-516 }, { 121,-516 }, { 122,-516 }, { 123,-516 }, { 124,-516 },
 { 125,-516 }, { 126,-516 }, { 127,-516 }, { 128,-516 }, { 129,-516 },
 { 130,-516 }, { 131,-516 }, { 132,-516 }, { 133,-516 }, { 134,-516 },

 { 135,-516 }, { 136,-516 }, { 137,-516 }, { 138,-516 }, { 139,-516 },
 { 140,-516 }, { 141,-516 }, { 142,-516 }, { 143,-516 }, { 144,-516 },
 { 145,-516 }, { 146,-516 }, { 147,-516 }, { 148,-516 }, { 149,-516 },
 { 150,-516 }, { 151,-516 }, { 152,-516 }, { 153,-516 }, { 154,-516 },
 { 155,-516 }, { 156,-516 }, { 157,-516 }, { 158,-516 }, { 159,-516 },
 { 160,-516 }, { 161,-516 }, { 162,-516 }, { 163,-516 }, { 164,-516 },
 { 165,-516 }, { 166,-516 }, { 167,-516 }, { 168,-516 }, { 169,-516 },
 { 170,-516 }, { 171,-516 }, { 172,-516 }, { 173,-516 }, { 174,-516 },
 { 175,-516 }, { 176,-516 }, { 177,-516 }, { 178,-516 }, { 179,-516 },
 { 180,-516 }, { 181,-516 }, { 182,-516 }, { 183,-516 }, { 184,-516 },

 { 185,-516 }, { 186,-516 }, { 187,-516 }, { 188,-516 }, { 189,-516 },
 { 190,-516 }, { 191,-516 }, { 192,-516 }, { 193,-516 }, { 194,-516 },
 { 195,-516 }, { 196,-516 }, { 197,-516 }, { 198,-516 }, { 199,-516 },
 { 200,-516 }, { 201,-516 }, { 202,-516 }, { 203,-516 }, { 204,-516 },
 { 205,-516 }, { 206,-516 }, { 207,-516 }, { 208,-516 }, { 209,-516 },
 { 210,-516 }, { 211,-516 }, { 212,-516 }, { 213,-516 }, { 214,-516 },
 { 215,-516 }, { 216,-516 }, { 217,-516 }, { 218,-516 }, { 219,-516 },
 { 220,-516 }, { 221,-516 }, { 222,-516 }, { 223,-516 }, { 224,-516 },
 { 225,-516 }, { 226,-516 }, { 227,-516 }, { 228,-516 }, { 229,-516 },
 { 230,-516 }, { 231,-516 }, { 232,-516 }, { 233,-516 }, { 234,-516 },

 { 235,-516 }, { 236,-516 }, { 237,-516 }, { 238,-516 }, { 239,-516 },
 { 240,-516 }, { 241,-516 }, { 242,-516 }, { 243,-516 }, { 244,-516 },
 { 245,-516 }, { 246,-516 }, { 247,-516 }, { 248,-516 }, { 249,-516 },
 { 250,-516 }, { 251,-516 }, { 252,-516 }, { 253,-516 }, { 254,-516 },
 { 255,-516 }, { 256,-516 }, {   0,   9 }, {   0,4011 }, {   1,   0 },
 {   2,   0 }, {   3,   0 }, {   4,   0 }, {   5,   0 }, {   6,   0 },
 {   7,   0 }, {   8,   0 }, {   9, 258 }, {  10, 516 }, {  11,   0 },
 {  12, 258 }, {  13, 516 }, {  14,   0 }, {  15,   0 }, {  16,   0 },
 {  17,   0 }, {  18,   0 }, {  19,   0 }, {  20,   0 }, {  21,   0 },
 {  22,   0 }, {  23,   0 }, {  24,   0 }, {  25,   0 }, {  26,   0 },

 {  27,   0 }, {  28,   0 }, {  29,   0 }, {  30,   0 }, {  31,   0 },
 {  32, 258 }, {  33,   0 }, {  34,   0 }, {  35,   0 }, {  36,   0 },
 {  37,   0 }, {  38,   0 }, {  39,   0 }, {  40,   0 }, {  41,   0 },
 {  42,   0 }, {  43,   0 }, {  44,   0 }, {  45, 563 }, {  46,   0 },
 {  47,   0 }, {  48,   0 }, {  49,   0 }, {  50,   0 }, {  51,   0 },
 {  52,   0 }, {  53,   0 }, {  54,   0 }, {  55,   0 }, {  56,   0 },
 {  57,   0 }, {  58,   0 }, {  59,   0 }, {  60,   0 }, {  61,   0 },
 {  62,   0 }, {  63,   0 }, {  64,   0 }, {  65,   0 }, {  66,   0 },
 {  67,   0 }, {  68,   0 }, {  69,   0 }, {  70,   0 }, {  71,   0 },
 {  72,   0 }, {  73,   0 }, {  74,   0 }, {  75,   0 }, {  76,   0 },

 {  77,   0 }, {  78,   0 }, {  79,   0 }, {  80,   0 }, {  81,   0 },
 {  82,   0 }, {  83,   0 }, {  84,   0 }, {  85,   0 }, {  86,   0 },
 {  87,   0 }, {  88,   0 }, {  89,   0 }, {  90,   0 }, {  91,   0 },
 {  92,   0 }, {  93,   0 }, {  94,   0 }, {  95,   0 }, {  96,   0 },
 {  97,   0 }, {  98,   0 }, {  99,   0 }, { 100,   0 }, { 101,   0 },
 { 102,   0 }, { 103,   0 }, { 104,   0 }, { 105,   0 }, { 106,   0 },
 { 107,   0 }, { 108,   0 }, { 109,   0 }, { 110,   0 }, { 111,   0 },
 { 112,   0 }, { 113,   0 }, { 114,   0 }, { 115,   0 }, { 116,   0 },
 { 117,   0 }, { 118,   0 }, { 119,   0 }, { 120,   0 }, { 121,   0 },
 { 122,   0 }, { 123,   0 }, { 124,   0 }, { 125,   0 }, { 126,   0 },

 { 127,   0 }, { 128,   0 }, { 129,   0 }, { 130,   0 }, { 131,   0 },
 { 132,   0 }, { 133,   0 }, { 134,   0 }, { 135,   0 }, { 136,   0 },
 { 137,   0 }, { 138,   0 }, { 139,   0 }, { 140,   0 }, { 141,   0 },
 { 142,   0 }, { 143,   0 }, { 144,   0 }, { 145,   0 }, { 146,   0 },
 { 147,   0 }, { 148,   0 }, { 149,   0 }, { 150,   0 }, { 151,   0 },
 { 152,   0 }, { 153,   0 }, { 154,   0 }, { 155,   0 }, { 156,   0 },
 { 157,   0 }, { 158,   0 }, { 159,   0 }, { 160,   0 }, { 161,   0 },
 { 162,   0 }, { 163,   0 }, { 164,   0 }, { 165,   0 }, { 166,   0 },
 { 167,   0 }, { 168,   0 }, { 169,   0 }, { 170,   0 }, { 171,   0 },
 { 172,   0 }, { 173,   0 }, { 174,   0 }, { 175,   0 }, { 176,   0 },

 { 177,   0 }, { 178,   0 }, { 179,   0 }, { 180,   0 }, { 181,   0 },
 { 182,   0 }, { 183,   0 }, { 184,   0 }, { 185,   0 }, { 186,   0 },
 { 187,   0 }, { 188,   0 }, { 189,   0 }, { 190,   0 }, { 191,   0 },
 { 192,   0 }, { 193,   0 }, { 194,   0 }, { 195,   0 }, { 196,   0 },
 { 197,   0 }, { 198,   0 }, { 199,   0 }, { 200,   0 }, { 201,   0 },
 { 202,   0 }, { 203,   0 }, { 204,   0 }, { 205,   0 }, { 206,   0 },
 { 207,   0 }, { 208,   0 }, { 209,   0 }, { 210,   0 }, { 211,   0 },
 { 212,   0 }, { 213,   0 }, { 214,   0 }, { 215,   0 }, { 216,   0 },
 { 217,   0 }, { 218,   0 }, { 219,   0 }, { 220,   0 }, { 221,   0 },
 { 222,   0 }, { 223,   0 }, { 224,   0 }, { 225,   0 }, { 226,   0 },

 { 227,   0 }, { 228,   0 }, { 229,   0 }, { 230,   0 }, { 231,   0 },
 { 232,   0 }, { 233,   0 }, { 234,   0 }, { 235,   0 }, { 236,   0 },
 { 237,   0 }, { 238,   0 }, { 239,   0 }, { 240,   0 }, { 241,   0 },
 { 242,   0 }, { 243,   0 }, { 244,   0 }, { 245,   0 }, { 246,   0 },
 { 247,   0 }, { 248,   0 }, { 249,   0 }, { 250,   0 }, { 251,   0 },
 { 252,   0 }, { 253,   0 }, { 254,   0 }, { 255,   0 }, { 256,   0 },
 {   0,   9 }, {   0,3753 }, {   1,-258 }, {   2,-258 }, {   3,-258 },
 {   4,-258 }, {   5,-258 }, {   6,-258 }, {   7,-258 }, {   8,-258 },
 {   9,   0 }, {  10, 258 }, {  11,-258 }, {  12,   0 }, {  13, 258 },
 {  14,-258 }, {  15,-258 }, {  16,-258 }, {  17,-258 }, {  18,-258 },

 {  19,-258 }, {  20,-258 }, {  21,-258 }, {  22,-258 }, {  23,-258 },
 {  24,-258 }, {  25,-258 }, {  26,-258 }, {  27,-258 }, {  28,-258 },
 {  29,-258 }, {  30,-258 }, {  31,-258 }, {  32,   0 }, {  33,-258 },
 {  34,-258 }, {  35,-258 }, {  36,-258 }, {  37,-258 }, {  38,-258 },
 {  39,-258 }, {  40,-258 }, {  41,-258 }, {  42,-258 }, {  43,-258 },
 {  44,-258 }, {  45, 305 }, {  46,-258 }, {  47,-258 }, {  48,-258 },
 {  49,-258 }, {  50,-258 }, {  51,-258 }, {  52,-258 }, {  53,-258 },
 {  54,-258 }, {  55,-258 }, {  56,-258 }, {  57,-258 }, {  58,-258 },
 {  59,-258 }, {  60,-258 }, {  61,-258 }, {  62,-258 }, {  63,-258 },
 {  64,-258 }, {  65,-258 }, {  66,-258 }, {  67,-258 }, {  68,-258 },

 {  69,-258 }, {  70,-258 }, {  71,-258 }, {  72,-258 }, {  73,-258 },
 {  74,-258 }, {  75,-258 }, {  76,-258 }, {  77,-258 }, {  78,-258 },
 {  79,-258 }, {  80,-258 }, {  81,-258 }, {  82,-258 }, {  83,-258 },
 {  84,-258 }, {  85,-258 }, {  86,-258 }, {  87,-258 }, {  88,-258 },
 {  89,-258 }, {  90,-258 }, {  91,-258 }, {  92,-258 }, {  93,-258 },
 {  94,-258 }, {  95,-258 }, {  96,-258 }, {  97,-258 }, {  98,-258 },
 {  99,-258 }, { 100,-258 }, { 101,-258 }, { 102,-258 }, { 103,-258 },
 { 104,-258 }, { 105,-258 }, { 106,-258 }, { 107,-258 }, { 108,-258 },
 { 109,-258 }, { 110,-258 }, { 111,-258 }, { 112,-258 }, { 113,-258 },
 { 114,-258 }, { 115,-258 }, { 116,-258 }, { 117,-258 }, { 118,-258 },

 { 119,-258 }, { 120,-258 }, { 121,-258 }, { 122,-258 }, { 123,-258 },
 { 124,-258 }, { 125,-258 }, { 126,-258 }, { 127,-258 }, { 128,-258 },
 { 129,-258 }, { 130,-258 }, { 131,-258 }, { 132,-258 }, { 133,-258 },
 { 134,-258 }, { 135,-258 }, { 136,-258 }, { 137,-258 }, { 138,-258 },
 { 139,-258 }, { 140,-258 }, { 141,-258 }, { 142,-258 }, { 143,-258 },
 { 144,-258 }, { 145,-258 }, { 146,-258 }, { 147,-258 }, { 148,-258 },
 { 149,-258 }, { 150,-258 }, { 151,-258 }, { 152,-258 }, { 153,-258 },
 { 154,-258 }, { 155,-258 }, { 156,-258 }, { 157,-258 }, { 158,-258 },
 { 159,-258 }, { 160,-258 }, { 161,-258 }, { 162,-258 }, { 163,-258 },
 { 164,-258 }, { 165,-258 }, { 166,-258 }, { 167,-258 }, { 168,-258 },

 { 169,-258 }, { 170,-258 }, { 171,-258 }, { 172,-258 }, { 173,-258 },
 { 174,-258 }, { 175,-258 }, { 176,-258 }, { 177,-258 }, { 178,-258 },
 { 179,-258 }, { 180,-258 }, { 181,-258 }, { 182,-258 }, { 183,-258 },
 { 184,-258 }, { 185,-258 }, { 186,-258 }, { 187,-258 }, { 188,-258 },
 { 189,-258 }, { 190,-258 }, { 191,-258 }, { 192,-258 }, { 193,-258 },
 { 194,-258 }, { 195,-258 }, { 196,-258 }, { 197,-258 }, { 198,-258 },
 { 199,-258 }, { 200,-258 }, { 201,-258 }, { 202,-258 }, { 203,-258 },
 { 204,-258 }, { 205,-258 }, { 206,-258 }, { 207,-258 }, { 208,-258 },
 { 209,-258 }, { 210,-258 }, { 211,-258 }, { 212,-258 }, { 213,-258 },
 { 214,-258 }, { 215,-258 }, { 216,-258 }, { 217,-258 }, { 218,-258 },

 { 219,-258 }, { 220,-258 }, { 221,-258 }, { 222,-258 }, { 223,-258 },
 { 224,-258 }, { 225,-258 }, { 226,-258 }, { 227,-258 }, { 228,-258 },
 { 229,-258 }, { 230,-258 }, { 231,-258 }, { 232,-258 }, { 233,-258 },
 { 234,-258 }, { 235,-258 }, { 236,-258 }, { 237,-258 }, { 238,-258 },
 { 239,-258 }, { 240,-258 }, { 241,-258 }, { 242,-258 }, { 243,-258 },
 { 244,-258 }, { 245,-258 }, { 246,-258 }, { 247,-258 }, { 248,-258 },
 { 249,-258 }, { 250,-258 }, { 251,-258 }, { 252,-258 }, { 253,-258 },
 { 254,-258 }, { 255,-258 }, { 256,-258 }, {   0,   9 }, {   0,3495 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   9,-4608 }, {  10,-4608 },

 {   0,   0 }, {  12,-4608 }, {  13,-4608 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  32,-4608 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  39,-10292 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  45,-10271 },
 {   0,   9 }, {   0,3448 }, {   1,-563 }, {   2,-563 }, {   3,-563 },
 {   4,-563 }, {   5,-563 }, {   6,-563 }, {   7,-563 }, {   8,-563 },
 {   9,-305 }, {  10, -47 }, {  11,-563 }, {  12,-305 }, {  13, -47 },

 {  14,-563 }, {  15,-563 }, {  16,-563 }, {  17,-563 }, {  18,-563 },
 {  19,-563 }, {  20,-563 }, {  21,-563 }, {  22,-563 }, {  23,-563 },
 {  24,-563 }, {  25,-563 }, {  26,-563 }, {  27,-563 }, {  28,-563 },
 {  29,-563 }, {  30,-563 }, {  31,-563 }, {  32,-305 }, {  33,-563 },
 {  34,-563 }, {  35,-563 }, {  36,-563 }, {  37,-563 }, {  38,-563 },
 {  39,-563 }, {  40,-563 }, {  41,-563 }, {  42,-563 }, {  43,-563 },
 {  44,-563 }, {  45,2674 }, {  46,-563 }, {  47,-563 }, {  48,-563 },
 {  49,-563 }, {  50,-563 }, {  51,-563 }, {  52,-563 }, {  53,-563 },
 {  54,-563 }, {  55,-563 }, {  56,-563 }, {  57,-563 }, {  58,-563 },
 {  59,-563 }, {  60,-563 }, {  61,-563 }, {  62,-563 }, {  63,-563 },

 {  64,-563 }, {  65,-563 }, {  66,-563 }, {  67,-563 }, {  68,-563 },
 {  69,-563 }, {  70,-563 }, {  71,-563 }, {  72,-563 }, {  73,-563 },
 {  74,-563 }, {  75,-563 }, {  76,-563 }, {  77,-563 }, {  78,-563 },
 {  79,-563 }, {  80,-563 }, {  81,-563 }, {  82,-563 }, {  83,-563 },
 {  84,-563 }, {  85,-563 }, {  86,-563 }, {  87,-563 }, {  88,-563 },
 {  89,-563 }, {  90,-563 }, {  91,-563 }, {  92,-563 }, {  93,-563 },
 {  94,-563 }, {  95,-563 }, {  96,-563 }, {  97,-563 }, {  98,-563 },
 {  99,-563 }, { 100,-563 }, { 101,-563 }, { 102,-563 }, { 103,-563 },
 { 104,-563 }, { 105,-563 }, { 106,-563 }, { 107,-563 }, { 108,-563 },
 { 109,-563 }, { 110,-563 }, { 111,-563 }, { 112,-563 }, { 113,-563 },

 { 114,-563 }, { 115,-563 }, { 116,-563 }, { 117,-563 }, { 118,-563 },
 { 119,-563 }, { 120,-563 }, { 121,-563 }, { 122,-563 }, { 123,-563 },
 { 124,-563 }, { 125,-563 }, { 126,-563 }, { 127,-563 }, { 128,-563 },
 { 129,-563 }, { 130,-563 }, { 131,-563 }, { 132,-563 }, { 133,-563 },
 { 134,-563 }, { 135,-563 }, { 136,-563 }, { 137,-563 }, { 138,-563 },
 { 139,-563 }, { 140,-563 }, { 141,-563 }, { 142,-563 }, { 143,-563 },
 { 144,-563 }, { 145,-563 }, { 146,-563 }, { 147,-563 }, { 148,-563 },
 { 149,-563 }, { 150,-563 }, { 151,-563 }, { 152,-563 }, { 153,-563 },
 { 154,-563 }, { 155,-563 }, { 156,-563 }, { 157,-563 }, { 158,-563 },
 { 159,-563 }, { 160,-563 }, { 161,-563 }, { 162,-563 }, { 163,-563 },

 { 164,-563 }, { 165,-563 }, { 166,-563 }, { 167,-563 }, { 168,-563 },
 { 169,-563 }, { 170,-563 }, { 171,-563 }, { 172,-563 }, { 173,-563 },
 { 174,-563 }, { 175,-563 }, { 176,-563 }, { 177,-563 }, { 178,-563 },
 { 179,-563 }, { 180,-563 }, { 181,-563 }, { 182,-563 }, { 183,-563 },
 { 184,-563 }, { 185,-563 }, { 186,-563 }, { 187,-563 }, { 188,-563 },
 { 189,-563 }, { 190,-563 }, { 191,-563 }, { 192,-563 }, { 193,-563 },
 { 194,-563 }, { 195,-563 }, { 196,-563 }, { 197,-563 }, { 198,-563 },
 { 199,-563 }, { 200,-563 }, { 201,-563 }, { 202,-563 }, { 203,-563 },
 { 204,-563 }, { 205,-563 }, { 206,-563 }, { 207,-563 }, { 208,-563 },
 { 209,-563 }, { 210,-563 }, { 211,-563 }, { 212,-563 }, { 213,-563 },

 { 214,-563 }, { 215,-563 }, { 216,-563 }, { 217,-563 }, { 218,-563 },
 { 219,-563 }, { 220,-563 }, { 221,-563 }, { 222,-563 }, { 223,-563 },
 { 224,-563 }, { 225,-563 }, { 226,-563 }, { 227,-563 }, { 228,-563 },
 { 229,-563 }, { 230,-563 }, { 231,-563 }, { 232,-563 }, { 233,-563 },
 { 234,-563 }, { 235,-563 }, { 236,-563 }, { 237,-563 }, { 238,-563 },
 { 239,-563 }, { 240,-563 }, { 241,-563 }, { 242,-563 }, { 243,-563 },
 { 244,-563 }, { 245,-563 }, { 246,-563 }, { 247,-563 }, { 248,-563 },
 { 249,-563 }, { 250,-563 }, { 251,-563 }, { 252,-563 }, { 253,-563 },
 { 254,-563 }, { 255,-563 }, { 256,-563 }, {   0,   9 }, {   0,3190 },
 {   1,-3659 }, {   2,-3659 }, {   3,-3659 }, {   4,-3659 }, {   5,-3659 },

 {   6,-3659 }, {   7,-3659 }, {   8,-3659 }, {   9,-3401 }, {  10,-6838 },
 {  11,-3659 }, {  12,-3401 }, {  13,-6838 }, {  14,-3659 }, {  15,-3659 },
 {  16,-3659 }, {  17,-3659 }, {  18,-3659 }, {  19,-3659 }, {  20,-3659 },
 {  21,-3659 }, {  22,-3659 }, {  23,-3659 }, {  24,-3659 }, {  25,-3659 },
 {  26,-3659 }, {  27,-3659 }, {  28,-3659 }, {  29,-3659 }, {  30,-3659 },
 {  31,-3659 }, {  32,-3401 }, {  33,-3659 }, {  34,-3659 }, {  35,-3659 },
 {  36,-3659 }, {  37,-3659 }, {  38,-3659 }, {  39,-3659 }, {  40,-3659 },
 {  41,-3659 }, {  42,-3659 }, {  43,-3659 }, {  44,-3659 }, {  45,   0 },
 {  46,-3659 }, {  47,-3659 }, {  48,-3659 }, {  49,-3659 }, {  50,-3659 },
 {  51,-3659 }, {  52,-3659 }, {  53,-3659 }, {  54,-3659 }, {  55,-3659 },

 {  56,-3659 }, {  57,-3659 }, {  58,-3659 }, {  59,-3659 }, {  60,-3659 },
 {  61,-3659 }, {  62,-3659 }, {  63,-3659 }, {  64,-3659 }, {  65,-3659 },
 {  66,-3659 }, {  67,-3659 }, {  68,-3659 }, {  69,-3659 }, {  70,-3659 },
 {  71,-3659 }, {  72,-3659 }, {  73,-3659 }, {  74,-3659 }, {  75,-3659 },
 {  76,-3659 }, {  77,-3659 }, {  78,-3659 }, {  79,-3659 }, {  80,-3659 },
 {  81,-3659 }, {  82,-3659 }, {  83,-3659 }, {  84,-3659 }, {  85,-3659 },
 {  86,-3659 }, {  87,-3659 }, {  88,-3659 }, {  89,-3659 }, {  90,-3659 },
 {  91,-3659 }, {  92,-3659 }, {  93,-3659 }, {  94,-3659 }, {  95,-3659 },
 {  96,-3659 }, {  97,-3659 }, {  98,-3659 }, {  99,-3659 }, { 100,-3659 },
 { 101,-3659 }, { 102,-3659 }, { 103,-3659 }, { 104,-3659 }, { 105,-3659 },

 { 106,-3659 }, { 107,-3659 }, { 108,-3659 }, { 109,-3659 }, { 110,-3659 },
 { 111,-3659 }, { 112,-3659 }, { 113,-3659 }, { 114,-3659 }, { 115,-3659 },
 { 116,-3659 }, { 117,-3659 }, { 118,-3659 }, { 119,-3659 }, { 120,-3659 },
 { 121,-3659 }, { 122,-3659 }, { 123,-3659 }, { 124,-3659 }, { 125,-3659 },
 { 126,-3659 }, { 127,-3659 }, { 128,-3659 }, { 129,-3659 }, { 130,-3659 },
 { 131,-3659 }, { 132,-3659 }, { 133,-3659 }, { 134,-3659 }, { 135,-3659 },
 { 136,-3659 }, { 137,-3659 }, { 138,-3659 }, { 139,-3659 }, { 140,-3659 },
 { 141,-3659 }, { 142,-3659 }, { 143,-3659 }, { 144,-3659 }, { 145,-3659 },
 { 146,-3659 }, { 147,-3659 }, { 148,-3659 }, { 149,-3659 }, { 150,-3659 },
 { 151,-3659 }, { 152,-3659 }, { 153,-3659 }, { 154,-3659 }, { 155,-3659 },

 { 156,-3659 }, { 157,-3659 }, { 158,-3659 }, { 159,-3659 }, { 160,-3659 },
 { 161,-3659 }, { 162,-3659 }, { 163,-3659 }, { 164,-3659 }, { 165,-3659 },
 { 166,-3659 }, { 167,-3659 }, { 168,-3659 }, { 169,-3659 }, { 170,-3659 },
 { 171,-3659 }, { 172,-3659 }, { 173,-3659 }, { 174,-3659 }, { 175,-3659 },
 { 176,-3659 }, { 177,-3659 }, { 178,-3659 }, { 179,-3659 }, { 180,-3659 },
 { 181,-3659 }, { 182,-3659 }, { 183,-3659 }, { 184,-3659 }, { 185,-3659 },
 { 186,-3659 }, { 187,-3659 }, { 188,-3659 }, { 189,-3659 }, { 190,-3659 },
 { 191,-3659 }, { 192,-3659 }, { 193,-3659 }, { 194,-3659 }, { 195,-3659 },
 { 196,-3659 }, { 197,-3659 }, { 198,-3659 }, { 199,-3659 }, { 200,-3659 },
 { 201,-3659 }, { 202,-3659 }, { 203,-3659 }, { 204,-3659 }, { 205,-3659 },

 { 206,-3659 }, { 207,-3659 }, { 208,-3659 }, { 209,-3659 }, { 210,-3659 },
 { 211,-3659 }, { 212,-3659 }, { 213,-3659 }, { 214,-3659 }, { 215,-3659 },
 { 216,-3659 }, { 217,-3659 }, { 218,-3659 }, { 219,-3659 }, { 220,-3659 },
 { 221,-3659 }, { 222,-3659 }, { 223,-3659 }, { 224,-3659 }, { 225,-3659 },
 { 226,-3659 }, { 227,-3659 }, { 228,-3659 }, { 229,-3659 }, { 230,-3659 },
 { 231,-3659 }, { 232,-3659 }, { 233,-3659 }, { 234,-3659 }, { 235,-3659 },
 { 236,-3659 }, { 237,-3659 }, { 238,-3659 }, { 239,-3659 }, { 240,-3659 },
 { 241,-3659 }, { 242,-3659 }, { 243,-3659 }, { 244,-3659 }, { 245,-3659 },
 { 246,-3659 }, { 247,-3659 }, { 248,-3659 }, { 249,-3659 }, { 250,-3659 },
 { 251,-3659 }, { 252,-3659 }, { 253,-3659 }, { 254,-3659 }, { 255,-3659 },

 { 256,-3659 }, {   0,  16 }, {   0,2932 }, {   1,   0 }, {   2,   0 },
 {   3,   0 }, {   4,   0 }, {   5,   0 }, {   6,   0 }, {   7,   0 },
 {   8,   0 }, {   9, 258 }, {  10, 516 }, {  11,   0 }, {  12, 258 },
 {  13, 516 }, {  14,   0 }, {  15,   0 }, {  16,   0 }, {  17,   0 },
 {  18,   0 }, {  19,   0 }, {  20,   0 }, {  21,   0 }, {  22,   0 },
 {  23,   0 }, {  24,   0 }, {  25,   0 }, {  26,   0 }, {  27,   0 },
 {  28,   0 }, {  29,   0 }, {  30,   0 }, {  31,   0 }, {  32, 258 },
 {  33,   0 }, {  34,   0 }, {  35,   0 }, {  36,   0 }, {  37,   0 },
 {  38,   0 }, {  39,   0 }, {  40,   0 }, {  41,   0 }, {  42,   0 },
 {  43,   0 }, {  44,   0 }, {  45, 563 }, {  46,   0 }, {  47,   0 },

 {  48,   0 }, {  49,   0 }, {  50,   0 }, {  51,   0 }, {  52,   0 },
 {  53,   0 }, {  54,   0 }, {  55,   0 }, {  56,   0 }, {  57,   0 },
 {  58,   0 }, {  59,   0 }, {  60,   0 }, {  61,   0 }, {  62,   0 },
 {  63,   0 }, {  64,   0 }, {  65,   0 }, {  66,   0 }, {  67,   0 },
 {  68,   0 }, {  69,   0 }, {  70,   0 }, {  71,   0 }, {  72,   0 },
 {  73,   0 }, {  74,   0 }, {  75,   0 }, {  76,   0 }, {  77,   0 },
 {  78,   0 }, {  79,   0 }, {  80,   0 }, {  81,   0 }, {  82,   0 },
 {  83,   0 }, {  84,   0 }, {  85,   0 }, {  86,   0 }, {  87,   0 },
 {  88,   0 }, {  89,   0 }, {  90,   0 }, {  91,   0 }, {  92,   0 },
 {  93,   0 }, {  94,   0 }, {  95,   0 }, {  96,   0 }, {  97,   0 },

 {  98,   0 }, {  99,   0 }, { 100,   0 }, { 101,   0 }, { 102,   0 },
 { 103,   0 }, { 104,   0 }, { 105,   0 }, { 106,   0 }, { 107,   0 },
 { 108,   0 }, { 109,   0 }, { 110,   0 }, { 111,   0 }, { 112,   0 },
 { 113,   0 }, { 114,   0 }, { 115,   0 }, { 116,   0 }, { 117,   0 },
 { 118,   0 }, { 119,   0 }, { 120,   0 }, { 121,   0 }, { 122,   0 },
 { 123,   0 }, { 124,   0 }, { 125,   0 }, { 126,   0 }, { 127,   0 },
 { 128,   0 }, { 129,   0 }, { 130,   0 }, { 131,   0 }, { 132,   0 },
 { 133,   0 }, { 134,   0 }, { 135,   0 }, { 136,   0 }, { 137,   0 },
 { 138,   0 }, { 139,   0 }, { 140,   0 }, { 141,   0 }, { 142,   0 },
 { 143,   0 }, { 144,   0 }, { 145,   0 }, { 146,   0 }, { 147,   0 },

 { 148,   0 }, { 149,   0 }, { 150,   0 }, { 151,   0 }, { 152,   0 },
 { 153,   0 }, { 154,   0 }, { 155,   0 }, { 156,   0 }, { 157,   0 },
 { 158,   0 }, { 159,   0 }, { 160,   0 }, { 161,   0 }, { 162,   0 },
 { 163,   0 }, { 164,   0 }, { 165,   0 }, { 166,   0 }, { 167,   0 },
 { 168,   0 }, { 169,   0 }, { 170,   0 }, { 171,   0 }, { 172,   0 },
 { 173,   0 }, { 174,   0 }, { 175,   0 }, { 176,   0 }, { 177,   0 },
 { 178,   0 }, { 179,   0 }, { 180,   0 }, { 181,   0 }, { 182,   0 },
 { 183,   0 }, { 184,   0 }, { 185,   0 }, { 186,   0 }, { 187,   0 },
 { 188,   0 }, { 189,   0 }, { 190,   0 }, { 191,   0 }, { 192,   0 },
 { 193,   0 }, { 194,   0 }, { 195,   0 }, { 196,   0 }, { 197,   0 },

 { 198,   0 }, { 199,   0 }, { 200,   0 }, { 201,   0 }, { 202,   0 },
 { 203,   0 }, { 204,   0 }, { 205,   0 }, { 206,   0 }, { 207,   0 },
 { 208,   0 }, { 209,   0 }, { 210,   0 }, { 211,   0 }, { 212,   0 },
 { 213,   0 }, { 214,   0 }, { 215,   0 }, { 216,   0 }, { 217,   0 },
 { 218,   0 }, { 219,   0 }, { 220,   0 }, { 221,   0 }, { 222,   0 },
 { 223,   0 }, { 224,   0 }, { 225,   0 }, { 226,   0 }, { 227,   0 },
 { 228,   0 }, { 229,   0 }, { 230,   0 }, { 231,   0 }, { 232,   0 },
 { 233,   0 }, { 234,   0 }, { 235,   0 }, { 236,   0 }, { 237,   0 },
 { 238,   0 }, { 239,   0 }, { 240,   0 }, { 241,   0 }, { 242,   0 },
 { 243,   0 }, { 244,   0 }, { 245,   0 }, { 246,   0 }, { 247,   0 },

 { 248,   0 }, { 249,   0 }, { 250,   0 }, { 251,   0 }, { 252,   0 },
 { 253,   0 }, { 254,   0 }, { 255,   0 }, { 256,   0 }, {   0,  16 },
 {   0,2674 }, {   1,-258 }, {   2,-258 }, {   3,-258 }, {   4,-258 },
 {   5,-258 }, {   6,-258 }, {   7,-258 }, {   8,-258 }, {   9,   0 },
 {  10, 258 }, {  11,-258 }, {  12,   0 }, {  13, 258 }, {  14,-258 },
 {  15,-258 }, {  16,-258 }, {  17,-258 }, {  18,-258 }, {  19,-258 },
 {  20,-258 }, {  21,-258 }, {  22,-258 }, {  23,-258 }, {  24,-258 },
 {  25,-258 }, {  26,-258 }, {  27,-258 }, {  28,-258 }, {  29,-258 },
 {  30,-258 }, {  31,-258 }, {  32,   0 }, {  33,-258 }, {  34,-258 },
 {  35,-258 }, {  36,-258 }, {  37,-258 }, {  38,-258 }, {  39,-258 },

 {  40,-258 }, {  41,-258 }, {  42,-258 }, {  43,-258 }, {  44,-258 },
 {  45, 305 }, {  46,-258 }, {  47,-258 }, {  48,-258 }, {  49,-258 },
 {  50,-258 }, {  51,-258 }, {  52,-258 }, {  53,-258 }, {  54,-258 },
 {  55,-258 }, {  56,-258 }, {  57,-258 }, {  58,-258 }, {  59,-258 },
 {  60,-258 }, {  61,-258 }, {  62,-258 }, {  63,-258 }, {  64,-258 },
 {  65,-258 }, {  66,-258 }, {  67,-258 }, {  68,-258 }, {  69,-258 },
 {  70,-258 }, {  71,-258 }, {  72,-258 }, {  73,-258 }, {  74,-258 },
 {  75,-258 }, {  76,-258 }, {  77,-258 }, {  78,-258 }, {  79,-258 },
 {  80,-258 }, {  81,-258 }, {  82,-258 }, {  83,-258 }, {  84,-258 },
 {  85,-258 }, {  86,-258 }, {  87,-258 }, {  88,-258 }, {  89,-258 },

 {  90,-258 }, {  91,-258 }, {  92,-258 }, {  93,-258 }, {  94,-258 },
 {  95,-258 }, {  96,-258 }, {  97,-258 }, {  98,-258 }, {  99,-258 },
 { 100,-258 }, { 101,-258 }, { 102,-258 }, { 103,-258 }, { 104,-258 },
 { 105,-258 }, { 106,-258 }, { 107,-258 }, { 108,-258 }, { 109,-258 },
 { 110,-258 }, { 111,-258 }, { 112,-258 }, { 113,-258 }, { 114,-258 },
 { 115,-258 }, { 116,-258 }, { 117,-258 }, { 118,-258 }, { 119,-258 },
 { 120,-258 }, { 121,-258 }, { 122,-258 }, { 123,-258 }, { 124,-258 },
 { 125,-258 }, { 126,-258 }, { 127,-258 }, { 128,-258 }, { 129,-258 },
 { 130,-258 }, { 131,-258 }, { 132,-258 }, { 133,-258 }, { 134,-258 },
 { 135,-258 }, { 136,-258 }, { 137,-258 }, { 138,-258 }, { 139,-258 },

 { 140,-258 }, { 141,-258 }, { 142,-258 }, { 143,-258 }, { 144,-258 },
 { 145,-258 }, { 146,-258 }, { 147,-258 }, { 148,-258 }, { 149,-258 },
 { 150,-258 }, { 151,-258 }, { 152,-258 }, { 153,-258 }, { 154,-258 },
 { 155,-258 }, { 156,-258 }, { 157,-258 }, { 158,-258 }, { 159,-258 },
 { 160,-258 }, { 161,-258 }, { 162,-258 }, { 163,-258 }, { 164,-258 },
 { 165,-258 }, { 166,-258 }, { 167,-258 }, { 168,-258 }, { 169,-258 },
 { 170,-258 }, { 171,-258 }, { 172,-258 }, { 173,-258 }, { 174,-258 },
 { 175,-258 }, { 176,-258 }, { 177,-258 }, { 178,-258 }, { 179,-258 },
 { 180,-258 }, { 181,-258 }, { 182,-258 }, { 183,-258 }, { 184,-258 },
 { 185,-258 }, { 186,-258 }, { 187,-258 }, { 188,-258 }, { 189,-258 },

 { 190,-258 }, { 191,-258 }, { 192,-258 }, { 193,-258 }, { 194,-258 },
 { 195,-258 }, { 196,-258 }, { 197,-258 }, { 198,-258 }, { 199,-258 },
 { 200,-258 }, { 201,-258 }, { 202,-258 }, { 203,-258 }, { 204,-258 },
 { 205,-258 }, { 206,-258 }, { 207,-258 }, { 208,-258 }, { 209,-258 },
 { 210,-258 }, { 211,-258 }, { 212,-258 }, { 213,-258 }, { 214,-258 },
 { 215,-258 }, { 216,-258 }, { 217,-258 }, { 218,-258 }, { 219,-258 },
 { 220,-258 }, { 221,-258 }, { 222,-258 }, { 223,-258 }, { 224,-258 },
 { 225,-258 }, { 226,-258 }, { 227,-258 }, { 228,-258 }, { 229,-258 },
 { 230,-258 }, { 231,-258 }, { 232,-258 }, { 233,-258 }, { 234,-258 },
 { 235,-258 }, { 236,-258 }, { 237,-258 }, { 238,-258 }, { 239,-258 },

 { 240,-258 }, { 241,-258 }, { 242,-258 }, { 243,-258 }, { 244,-258 },
 { 245,-258 }, { 246,-258 }, { 247,-258 }, { 248,-258 }, { 249,-258 },
 { 250,-258 }, { 251,-258 }, { 252,-258 }, { 253,-258 }, { 254,-258 },
 { 255,-258 }, { 256,-258 }, {   0,  16 }, {   0,2416 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   9,-5375 }, {  10,-5375 }, {   0,   0 },
 {  12,-5375 }, {  13,-5375 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {  32,-5375 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  39,-11348 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  45,-11340 }, {   0,  16 },
 {   0,2369 }, {   1,-563 }, {   2,-563 }, {   3,-563 }, {   4,-563 },
 {   5,-563 }, {   6,-563 }, {   7,-563 }, {   8,-563 }, {   9,-305 },
 {  10, -47 }, {  11,-563 }, {  12,-305 }, {  13, -47 }, {  14,-563 },
 {  15,-563 }, {  16,-563 }, {  17,-563 }, {  18,-563 }, {  19,-563 },
 {  20,-563 }, {  21,-563 }, {  22,-563 }, {  23,-563 }, {  24,-563 },
 {  25,-563 }, {  26,-563 }, {  27,-563 }, {  28,-563 }, {  29,-563 },
 {  30,-563 }, {  31,-563 }, {  32,-305 }, {  33,-563 }, {  34,-563 },

 {  35,-563 }, {  36,-563 }, {  37,-563 }, {  38,-563 }, {  39,-563 },
 {  40,-563 }, {  41,-563 }, {  42,-563 }, {  43,-563 }, {  44,-563 },
 {  45,1853 }, {  46,-563 }, {  47,-563 }, {  48,-563 }, {  49,-563 },
 {  50,-563 }, {  51,-563 }, {  52,-563 }, {  53,-563 }, {  54,-563 },
 {  55,-563 }, {  56,-563 }, {  57,-563 }, {  58,-563 }, {  59,-563 },
 {  60,-563 }, {  61,-563 }, {  62,-563 }, {  63,-563 }, {  64,-563 },
 {  65,-563 }, {  66,-563 }, {  67,-563 }, {  68,-563 }, {  69,-563 },
 {  70,-563 }, {  71,-563 }, {  72,-563 }, {  73,-563 }, {  74,-563 },
 {  75,-563 }, {  76,-563 }, {  77,-563 }, {  78,-563 }, {  79,-563 },
 {  80,-563 }, {  81,-563 }, {  82,-563 }, {  83,-563 }, {  84,-563 },

 {  85,-563 }, {  86,-563 }, {  87,-563 }, {  88,-563 }, {  89,-563 },
 {  90,-563 }, {  91,-563 }, {  92,-563 }, {  93,-563 }, {  94,-563 },
 {  95,-563 }, {  96,-563 }, {  97,-563 }, {  98,-563 }, {  99,-563 },
 { 100,-563 }, { 101,-563 }, { 102,-563 }, { 103,-563 }, { 104,-563 },
 { 105,-563 }, { 106,-563 }, { 107,-563 }, { 108,-563 }, { 109,-563 },
 { 110,-563 }, { 111,-563 }, { 112,-563 }, { 113,-563 }, { 114,-563 },
 { 115,-563 }, { 116,-563 }, { 117,-563 }, { 118,-563 }, { 119,-563 },
 { 120,-563 }, { 121,-563 }, { 122,-563 }, { 123,-563 }, { 124,-563 },
 { 125,-563 }, { 126,-563 }, { 127,-563 }, { 128,-563 }, { 129,-563 },
 { 130,-563 }, { 131,-563 }, { 132,-563 }, { 133,-563 }, { 134,-563 },

 { 135,-563 }, { 136,-563 }, { 137,-563 }, { 138,-563 }, { 139,-563 },
 { 140,-563 }, { 141,-563 }, { 142,-563 }, { 143,-563 }, { 144,-563 },
 { 145,-563 }, { 146,-563 }, { 147,-563 }, { 148,-563 }, { 149,-563 },
 { 150,-563 }, { 151,-563 }, { 152,-563 }, { 153,-563 }, { 154,-563 },
 { 155,-563 }, { 156,-563 }, { 157,-563 }, { 158,-563 }, { 159,-563 },
 { 160,-563 }, { 161,-563 }, { 162,-563 }, { 163,-563 }, { 164,-563 },
 { 165,-563 }, { 166,-563 }, { 167,-563 }, { 168,-563 }, { 169,-563 },
 { 170,-563 }, { 171,-563 }, { 172,-563 }, { 173,-563 }, { 174,-563 },
 { 175,-563 }, { 176,-563 }, { 177,-563 }, { 178,-563 }, { 179,-563 },
 { 180,-563 }, { 181,-563 }, { 182,-563 }, { 183,-563 }, { 184,-563 },

 { 185,-563 }, { 186,-563 }, { 187,-563 }, { 188,-563 }, { 189,-563 },
 { 190,-563 }, { 191,-563 }, { 192,-563 }, { 193,-563 }, { 194,-563 },
 { 195,-563 }, { 196,-563 }, { 197,-563 }, { 198,-563 }, { 199,-563 },
 { 200,-563 }, { 201,-563 }, { 202,-563 }, { 203,-563 }, { 204,-563 },
 { 205,-563 }, { 206,-563 }, { 207,-563 }, { 208,-563 }, { 209,-563 },
 { 210,-563 }, { 211,-563 }, { 212,-563 }, { 213,-563 }, { 214,-563 },
 { 215,-563 }, { 216,-563 }, { 217,-563 }, { 218,-563 }, { 219,-563 },
 { 220,-563 }, { 221,-563 }, { 222,-563 }, { 223,-563 }, { 224,-563 },
 { 225,-563 }, { 226,-563 }, { 227,-563 }, { 228,-563 }, { 229,-563 },
 { 230,-563 }, { 231,-563 }, { 232,-563 }, { 233,-563 }, { 234,-563 },

 { 235,-563 }, { 236,-563 }, { 237,-563 }, { 238,-563 }, { 239,-563 },
 { 240,-563 }, { 241,-563 }, { 242,-563 }, { 243,-563 }, { 244,-563 },
 { 245,-563 }, { 246,-563 }, { 247,-563 }, { 248,-563 }, { 249,-563 },
 { 250,-563 }, { 251,-563 }, { 252,-563 }, { 253,-563 }, { 254,-563 },
 { 255,-563 }, { 256,-563 }, {   0,  16 }, {   0,2111 }, {   1,-3706 },
 {   2,-3706 }, {   3,-3706 }, {   4,-3706 }, {   5,-3706 }, {   6,-3706 },
 {   7,-3706 }, {   8,-3706 }, {   9,-3448 }, {  10,-6963 }, {  11,-3706 },
 {  12,-3448 }, {  13,-6963 }, {  14,-3706 }, {  15,-3706 }, {  16,-3706 },
 {  17,-3706 }, {  18,-3706 }, {  19,-3706 }, {  20,-3706 }, {  21,-3706 },
 {  22,-3706 }, {  23,-3706 }, {  24,-3706 }, {  25,-3706 }, {  26,-3706 },

 {  27,-3706 }, {  28,-3706 }, {  29,-3706 }, {  30,-3706 }, {  31,-3706 },
 {  32,-3448 }, {  33,-3706 }, {  34,-3706 }, {  35,-3706 }, {  36,-3706 },
 {  37,-3706 }, {  38,-3706 }, {  39,-3706 }, {  40,-3706 }, {  41,-3706 },
 {  42,-3706 }, {  43,-3706 }, {  44,-3706 }, {  45,   0 }, {  46,-3706 },
 {  47,-3706 }, {  48,-3706 }, {  49,-3706 }, {  50,-3706 }, {  51,-3706 },
 {  52,-3706 }, {  53,-3706 }, {  54,-3706 }, {  55,-3706 }, {  56,-3706 },
 {  57,-3706 }, {  58,-3706 }, {  59,-3706 }, {  60,-3706 }, {  61,-3706 },
 {  62,-3706 }, {  63,-3706 }, {  64,-3706 }, {  65,-3706 }, {  66,-3706 },
 {  67,-3706 }, {  68,-3706 }, {  69,-3706 }, {  70,-3706 }, {  71,-3706 },
 {  72,-3706 }, {  73,-3706 }, {  74,-3706 }, {  75,-3706 }, {  76,-3706 },

 {  77,-3706 }, {  78,-3706 }, {  79,-3706 }, {  80,-3706 }, {  81,-3706 },
 {  82,-3706 }, {  83,-3706 }, {  84,-3706 }, {  85,-3706 }, {  86,-3706 },
 {  87,-3706 }, {  88,-3706 }, {  89,-3706 }, {  90,-3706 }, {  91,-3706 },
 {  92,-3706 }, {  93,-3706 }, {  94,-3706 }, {  95,-3706 }, {  96,-3706 },
 {  97,-3706 }, {  98,-3706 }, {  99,-3706 }, { 100,-3706 }, { 101,-3706 },
 { 102,-3706 }, { 103,-3706 }, { 104,-3706 }, { 105,-3706 }, { 106,-3706 },
 { 107,-3706 }, { 108,-3706 }, { 109,-3706 }, { 110,-3706 }, { 111,-3706 },
 { 112,-3706 }, { 113,-3706 }, { 114,-3706 }, { 115,-3706 }, { 116,-3706 },
 { 117,-3706 }, { 118,-3706 }, { 119,-3706 }, { 120,-3706 }, { 121,-3706 },
 { 122,-3706 }, { 123,-3706 }, { 124,-3706 }, { 125,-3706 }, { 126,-3706 },

 { 127,-3706 }, { 128,-3706 }, { 129,-3706 }, { 130,-3706 }, { 131,-3706 },
 { 132,-3706 }, { 133,-3706 }, { 134,-3706 }, { 135,-3706 }, { 136,-3706 },
 { 137,-3706 }, { 138,-3706 }, { 139,-3706 }, { 140,-3706 }, { 141,-3706 },
 { 142,-3706 }, { 143,-3706 }, { 144,-3706 }, { 145,-3706 }, { 146,-3706 },
 { 147,-3706 }, { 148,-3706 }, { 149,-3706 }, { 150,-3706 }, { 151,-3706 },
 { 152,-3706 }, { 153,-3706 }, { 154,-3706 }, { 155,-3706 }, { 156,-3706 },
 { 157,-3706 }, { 158,-3706 }, { 159,-3706 }, { 160,-3706 }, { 161,-3706 },
 { 162,-3706 }, { 163,-3706 }, { 164,-3706 }, { 165,-3706 }, { 166,-3706 },
 { 167,-3706 }, { 168,-3706 }, { 169,-3706 }, { 170,-3706 }, { 171,-3706 },
 { 172,-3706 }, { 173,-3706 }, { 174,-3706 }, { 175,-3706 }, { 176,-3706 },

 { 177,-3706 }, { 178,-3706 }, { 179,-3706 }, { 180,-3706 }, { 181,-3706 },
 { 182,-3706 }, { 183,-3706 }, { 184,-3706 }, { 185,-3706 }, { 186,-3706 },
 { 187,-3706 }, { 188,-3706 }, { 189,-3706 }, { 190,-3706 }, { 191,-3706 },
 { 192,-3706 }, { 193,-3706 }, { 194,-3706 }, { 195,-3706 }, { 196,-3706 },
 { 197,-3706 }, { 198,-3706 }, { 199,-3706 }, { 200,-3706 }, { 201,-3706 },
 { 202,-3706 }, { 203,-3706 }, { 204,-3706 }, { 205,-3706 }, { 206,-3706 },
 { 207,-3706 }, { 208,-3706 }, { 209,-3706 }, { 210,-3706 }, { 211,-3706 },
 { 212,-3706 }, { 213,-3706 }, { 214,-3706 }, { 215,-3706 }, { 216,-3706 },
 { 217,-3706 }, { 218,-3706 }, { 219,-3706 }, { 220,-3706 }, { 221,-3706 },
 { 222,-3706 }, { 223,-3706 }, { 224,-3706 }, { 225,-3706 }, { 226,-3706 },

 { 227,-3706 }, { 228,-3706 }, { 229,-3706 }, { 230,-3706 }, { 231,-3706 },
 { 232,-3706 }, { 233,-3706 }, { 234,-3706 }, { 235,-3706 }, { 236,-3706 },
 { 237,-3706 }, { 238,-3706 }, { 239,-3706 }, { 240,-3706 }, { 241,-3706 },
 { 242,-3706 }, { 243,-3706 }, { 244,-3706 }, { 245,-3706 }, { 246,-3706 },
 { 247,-3706 }, { 248,-3706 }, { 249,-3706 }, { 250,-3706 }, { 251,-3706 },
 { 252,-3706 }, { 253,-3706 }, { 254,-3706 }, { 255,-3706 }, { 256,-3706 },
 {   0,  19 }, {   0,1853 }, {   1,   0 }, {   2,   0 }, {   3,   0 },
 {   4,   0 }, {   5,   0 }, {   6,   0 }, {   7,   0 }, {   8,   0 },
 {   9, 258 }, {  10, 516 }, {  11,   0 }, {  12, 258 }, {  13, 516 },
 {  14,   0 }, {  15,   0 }, {  16,   0 }, {  17,   0 }, {  18,   0 },

 {  19,   0 }, {  20,   0 }, {  21,   0 }, {  22,   0 }, {  23,   0 },
 {  24,   0 }, {  25,   0 }, {  26,   0 }, {  27,   0 }, {  28,   0 },
 {  29,   0 }, {  30,   0 }, {  31,   0 }, {  32, 258 }, {  33,   0 },
 {  34,   0 }, {  35,   0 }, {  36,   0 }, {  37,   0 }, {  38,   0 },
 {  39,   0 }, {  40,   0 }, {  41,   0 }, {  42,   0 }, {  43,   0 },
 {  44,   0 }, {  45, 563 }, {  46,   0 }, {  47,   0 }, {  48,   0 },
 {  49,   0 }, {  50,   0 }, {  51,   0 }, {  52,   0 }, {  53,   0 },
 {  54,   0 }, {  55,   0 }, {  56,   0 }, {  57,   0 }, {  58,   0 },
 {  59,   0 }, {  60,   0 }, {  61,   0 }, {  62,   0 }, {  63,   0 },
 {  64,   0 }, {  65,   0 }, {  66,   0 }, {  67,   0 }, {  68,   0 },

 {  69,   0 }, {  70,   0 }, {  71,   0 }, {  72,   0 }, {  73,   0 },
 {  74,   0 }, {  75,   0 }, {  76,   0 }, {  77,   0 }, {  78,   0 },
 {  79,   0 }, {  80,   0 }, {  81,   0 }, {  82,   0 }, {  83,   0 },
 {  84,   0 }, {  85,   0 }, {  86,   0 }, {  87,   0 }, {  88,   0 },
 {  89,   0 }, {  90,   0 }, {  91,   0 }, {  92,   0 }, {  93,   0 },
 {  94,   0 }, {  95,   0 }, {  96,   0 }, {  97,   0 }, {  98,   0 },
 {  99,   0 }, { 100,   0 }, { 101,   0 }, { 102,   0 }, { 103,   0 },
 { 104,   0 }, { 105,   0 }, { 106,   0 }, { 107,   0 }, { 108,   0 },
 { 109,   0 }, { 110,   0 }, { 111,   0 }, { 112,   0 }, { 113,   0 },
 { 114,   0 }, { 115,   0 }, { 116,   0 }, { 117,   0 }, { 118,   0 },

 { 119,   0 }, { 120,   0 }, { 121,   0 }, { 122,   0 }, { 123,   0 },
 { 124,   0 }, { 125,   0 }, { 126,   0 }, { 127,   0 }, { 128,   0 },
 { 129,   0 }, { 130,   0 }, { 131,   0 }, { 132,   0 }, { 133,   0 },
 { 134,   0 }, { 135,   0 }, { 136,   0 }, { 137,   0 }, { 138,   0 },
 { 139,   0 }, { 140,   0 }, { 141,   0 }, { 142,   0 }, { 143,   0 },
 { 144,   0 }, { 145,   0 }, { 146,   0 }, { 147,   0 }, { 148,   0 },
 { 149,   0 }, { 150,   0 }, { 151,   0 }, { 152,   0 }, { 153,   0 },
 { 154,   0 }, { 155,   0 }, { 156,   0 }, { 157,   0 }, { 158,   0 },
 { 159,   0 }, { 160,   0 }, { 161,   0 }, { 162,   0 }, { 163,   0 },
 { 164,   0 }, { 165,   0 }, { 166,   0 }, { 167,   0 }, { 168,   0 },

 { 169,   0 }, { 170,   0 }, { 171,   0 }, { 172,   0 }, { 173,   0 },
 { 174,   0 }, { 175,   0 }, { 176,   0 }, { 177,   0 }, { 178,   0 },
 { 179,   0 }, { 180,   0 }, { 181,   0 }, { 182,   0 }, { 183,   0 },
 { 184,   0 }, { 185,   0 }, { 186,   0 }, { 187,   0 }, { 188,   0 },
 { 189,   0 }, { 190,   0 }, { 191,   0 }, { 192,   0 }, { 193,   0 },
 { 194,   0 }, { 195,   0 }, { 196,   0 }, { 197,   0 }, { 198,   0 },
 { 199,   0 }, { 200,   0 }, { 201,   0 }, { 202,   0 }, { 203,   0 },
 { 204,   0 }, { 205,   0 }, { 206,   0 }, { 207,   0 }, { 208,   0 },
 { 209,   0 }, { 210,   0 }, { 211,   0 }, { 212,   0 }, { 213,   0 },
 { 214,   0 }, { 215,   0 }, { 216,   0 }, { 217,   0 }, { 218,   0 },

 { 219,   0 }, { 220,   0 }, { 221,   0 }, { 222,   0 }, { 223,   0 },
 { 224,   0 }, { 225,   0 }, { 226,   0 }, { 227,   0 }, { 228,   0 },
 { 229,   0 }, { 230,   0 }, { 231,   0 }, { 232,   0 }, { 233,   0 },
 { 234,   0 }, { 235,   0 }, { 236,   0 }, { 237,   0 }, { 238,   0 },
 { 239,   0 }, { 240,   0 }, { 241,   0 }, { 242,   0 }, { 243,   0 },
 { 244,   0 }, { 245,   0 }, { 246,   0 }, { 247,   0 }, { 248,   0 },
 { 249,   0 }, { 250,   0 }, { 251,   0 }, { 252,   0 }, { 253,   0 },
 { 254,   0 }, { 255,   0 }, { 256,   0 }, {   0,  19 }, {   0,1595 },
 {   1,-258 }, {   2,-258 }, {   3,-258 }, {   4,-258 }, {   5,-258 },
 {   6,-258 }, {   7,-258 }, {   8,-258 }, {   9,   0 }, {  10, 258 },

 {  11,-258 }, {  12,   0 }, {  13, 258 }, {  14,-258 }, {  15,-258 },
 {  16,-258 }, {  17,-258 }, {  18,-258 }, {  19,-258 }, {  20,-258 },
 {  21,-258 }, {  22,-258 }, {  23,-258 }, {  24,-258 }, {  25,-258 },
 {  26,-258 }, {  27,-258 }, {  28,-258 }, {  29,-258 }, {  30,-258 },
 {  31,-258 }, {  32,   0 }, {  33,-258 }, {  34,-258 }, {  35,-258 },
 {  36,-258 }, {  37,-258 }, {  38,-258 }, {  39,-258 }, {  40,-258 },
 {  41,-258 }, {  42,-258 }, {  43,-258 }, {  44,-258 }, {  45, 305 },
 {  46,-258 }, {  47,-258 }, {  48,-258 }, {  49,-258 }, {  50,-258 },
 {  51,-258 }, {  52,-258 }, {  53,-258 }, {  54,-258 }, {  55,-258 },
 {  56,-258 }, {  57,-258 }, {  58,-258 }, {  59,-258 }, {  60,-258 },

 {  61,-258 }, {  62,-258 }, {  63,-258 }, {  64,-258 }, {  65,-258 },
 {  66,-258 }, {  67,-258 }, {  68,-258 }, {  69,-258 }, {  70,-258 },
 {  71,-258 }, {  72,-258 }, {  73,-258 }, {  74,-258 }, {  75,-258 },
 {  76,-258 }, {  77,-258 }, {  78,-258 }, {  79,-258 }, {  80,-258 },
 {  81,-258 }, {  82,-258 }, {  83,-258 }, {  84,-258 }, {  85,-258 },
 {  86,-258 }, {  87,-258 }, {  88,-258 }, {  89,-258 }, {  90,-258 },
 {  91,-258 }, {  92,-258 }, {  93,-258 }, {  94,-258 }, {  95,-258 },
 {  96,-258 }, {  97,-258 }, {  98,-258 }, {  99,-258 }, { 100,-258 },
 { 101,-258 }, { 102,-258 }, { 103,-258 }, { 104,-258 }, { 105,-258 },
 { 106,-258 }, { 107,-258 }, { 108,-258 }, { 109,-258 }, { 110,-258 },

 { 111,-258 }, { 112,-258 }, { 113,-258 }, { 114,-258 }, { 115,-258 },
 { 116,-258 }, { 117,-258 }, { 118,-258 }, { 119,-258 }, { 120,-258 },
 { 121,-258 }, { 122,-258 }, { 123,-258 }, { 124,-258 }, { 125,-258 },
 { 126,-258 }, { 127,-258 }, { 128,-258 }, { 129,-258 }, { 130,-258 },
 { 131,-258 }, { 132,-258 }, { 133,-258 }, { 134,-258 }, { 135,-258 },
 { 136,-258 }, { 137,-258 }, { 138,-258 }, { 139,-258 }, { 140,-258 },
 { 141,-258 }, { 142,-258 }, { 143,-258 }, { 144,-258 }, { 145,-258 },
 { 146,-258 }, { 147,-258 }, { 148,-258 }, { 149,-258 }, { 150,-258 },
 { 151,-258 }, { 152,-258 }, { 153,-258 }, { 154,-258 }, { 155,-258 },
 { 156,-258 }, { 157,-258 }, { 158,-258 }, { 159,-258 }, { 160,-258 },

 { 161,-258 }, { 162,-258 }, { 163,-258 }, { 164,-258 }, { 165,-258 },
 { 166,-258 }, { 167,-258 }, { 168,-258 }, { 169,-258 }, { 170,-258 },
 { 171,-258 }, { 172,-258 }, { 173,-258 }, { 174,-258 }, { 175,-258 },
 { 176,-258 }, { 177,-258 }, { 178,-258 }, { 179,-258 }, { 180,-258 },
 { 181,-258 }, { 182,-258 }, { 183,-258 }, { 184,-258 }, { 185,-258 },
 { 186,-258 }, { 187,-258 }, { 188,-258 }, { 189,-258 }, { 190,-258 },
 { 191,-258 }, { 192,-258 }, { 193,-258 }, { 194,-258 }, { 195,-258 },
 { 196,-258 }, { 197,-258 }, { 198,-258 }, { 199,-258 }, { 200,-258 },
 { 201,-258 }, { 202,-258 }, { 203,-258 }, { 204,-258 }, { 205,-258 },
 { 206,-258 }, { 207,-258 }, { 208,-258 }, { 209,-258 }, { 210,-258 },

 { 211,-258 }, { 212,-258 }, { 213,-258 }, { 214,-258 }, { 215,-258 },
 { 216,-258 }, { 217,-258 }, { 218,-258 }, { 219,-258 }, { 220,-258 },
 { 221,-258 }, { 222,-258 }, { 223,-258 }, { 224,-258 }, { 225,-258 },
 { 226,-258 }, { 227,-258 }, { 228,-258 }, { 229,-258 }, { 230,-258 },
 { 231,-258 }, { 232,-258 }, { 233,-258 }, { 234,-258 }, { 235,-258 },
 { 236,-258 }, { 237,-258 }, { 238,-258 }, { 239,-258 }, { 240,-258 },
 { 241,-258 }, { 242,-258 }, { 243,-258 }, { 244,-258 }, { 245,-258 },
 { 246,-258 }, { 247,-258 }, { 248,-258 }, { 249,-258 }, { 250,-258 },
 { 251,-258 }, { 252,-258 }, { 253,-258 }, { 254,-258 }, { 255,-258 },
 { 256,-258 }, {   0,  19 }, {   0,1337 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   9,-6075 }, {  10,-6075 }, {   0,   0 }, {  12,-6075 },
 {  13,-6075 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  32,-6075 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  39,-12390 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  45,-12386 }, {   0,  19 }, {   0,1290 },
 {   1,-563 }, {   2,-563 }, {   3,-563 }, {   4,-563 }, {   5,-563 },

 {   6,-563 }, {   7,-563 }, {   8,-563 }, {   9,-305 }, {  10, -47 },
 {  11,-563 }, {  12,-305 }, {  13, -47 }, {  14,-563 }, {  15,-563 },
 {  16,-563 }, {  17,-563 }, {  18,-563 }, {  19,-563 }, {  20,-563 },
 {  21,-563 }, {  22,-563 }, {  23,-563 }, {  24,-563 }, {  25,-563 },
 {  26,-563 }, {  27,-563 }, {  28,-563 }, {  29,-563 }, {  30,-563 },
 {  31,-563 }, {  32,-305 }, {  33,-563 }, {  34,-563 }, {  35,-563 },
 {  36,-563 }, {  37,-563 }, {  38,-563 }, {  39,-563 }, {  40,-563 },
 {  41,-563 }, {  42,-563 }, {  43,-563 }, {  44,-563 }, {  45,1032 },
 {  46,-563 }, {  47,-563 }, {  48,-563 }, {  49,-563 }, {  50,-563 },
 {  51,-563 }, {  52,-563 }, {  53,-563 }, {  54,-563 }, {  55,-563 },

 {  56,-563 }, {  57,-563 }, {  58,-563 }, {  59,-563 }, {  60,-563 },
 {  61,-563 }, {  62,-563 }, {  63,-563 }, {  64,-563 }, {  65,-563 },
 {  66,-563 }, {  67,-563 }, {  68,-563 }, {  69,-563 }, {  70,-563 },
 {  71,-563 }, {  72,-563 }, {  73,-563 }, {  74,-563 }, {  75,-563 },
 {  76,-563 }, {  77,-563 }, {  78,-563 }, {  79,-563 }, {  80,-563 },
 {  81,-563 }, {  82,-563 }, {  83,-563 }, {  84,-563 }, {  85,-563 },
 {  86,-563 }, {  87,-563 }, {  88,-563 }, {  89,-563 }, {  90,-563 },
 {  91,-563 }, {  92,-563 }, {  93,-563 }, {  94,-563 }, {  95,-563 },
 {  96,-563 }, {  97,-563 }, {  98,-563 }, {  99,-563 }, { 100,-563 },
 { 101,-563 }, { 102,-563 }, { 103,-563 }, { 104,-563 }, { 105,-563 },

 { 106,-563 }, { 107,-563 }, { 108,-563 }, { 109,-563 }, { 110,-563 },
 { 111,-563 }, { 112,-563 }, { 113,-563 }, { 114,-563 }, { 115,-563 },
 { 116,-563 }, { 117,-563 }, { 118,-563 }, { 119,-563 }, { 120,-563 },
 { 121,-563 }, { 122,-563 }, { 123,-563 }, { 124,-563 }, { 125,-563 },
 { 126,-563 }, { 127,-563 }, { 128,-563 }, { 129,-563 }, { 130,-563 },
 { 131,-563 }, { 132,-563 }, { 133,-563 }, { 134,-563 }, { 135,-563 },
 { 136,-563 }, { 137,-563 }, { 138,-563 }, { 139,-563 }, { 140,-563 },
 { 141,-563 }, { 142,-563 }, { 143,-563 }, { 144,-563 }, { 145,-563 },
 { 146,-563 }, { 147,-563 }, { 148,-563 }, { 149,-563 }, { 150,-563 },
 { 151,-563 }, { 152,-563 }, { 153,-563 }, { 154,-563 }, { 155,-563 },

 { 156,-563 }, { 157,-563 }, { 158,-563 }, { 159,-563 }, { 160,-563 },
 { 161,-563 }, { 162,-563 }, { 163,-563 }, { 164,-563 }, { 165,-563 },
 { 166,-563 }, { 167,-563 }, { 168,-563 }, { 169,-563 }, { 170,-563 },
 { 171,-563 }, { 172,-563 }, { 173,-563 }, { 174,-563 }, { 175,-563 },
 { 176,-563 }, { 177,-563 }, { 178,-563 }, { 179,-563 }, { 180,-563 },
 { 181,-563 }, { 182,-563 }, { 183,-563 }, { 184,-563 }, { 185,-563 },
 { 186,-563 }, { 187,-563 }, { 188,-563 }, { 189,-563 }, { 190,-563 },
 { 191,-563 }, { 192,-563 }, { 193,-563 }, { 194,-563 }, { 195,-563 },
 { 196,-563 }, { 197,-563 }, { 198,-563 }, { 199,-563 }, { 200,-563 },
 { 201,-563 }, { 202,-563 }, { 203,-563 }, { 204,-563 }, { 205,-563 },

 { 206,-563 }, { 207,-563 }, { 208,-563 }, { 209,-563 }, { 210,-563 },
 { 211,-563 }, { 212,-563 }, { 213,-563 }, { 214,-563 }, { 215,-563 },
 { 216,-563 }, { 217,-563 }, { 218,-563 }, { 219,-563 }, { 220,-563 },
 { 221,-563 }, { 222,-563 }, { 223,-563 }, { 224,-563 }, { 225,-563 },
 { 226,-563 }, { 227,-563 }, { 228,-563 }, { 229,-563 }, { 230,-563 },
 { 231,-563 }, { 232,-563 }, { 233,-563 }, { 234,-563 }, { 235,-563 },
 { 236,-563 }, { 237,-563 }, { 238,-563 }, { 239,-563 }, { 240,-563 },
 { 241,-563 }, { 242,-563 }, { 243,-563 }, { 244,-563 }, { 245,-563 },
 { 246,-563 }, { 247,-563 }, { 248,-563 }, { 249,-563 }, { 250,-563 },
 { 251,-563 }, { 252,-563 }, { 253,-563 }, { 254,-563 }, { 255,-563 },

 { 256,-563 }, {   0,  19 }, {   0,1032 }, {   1,-3753 }, {   2,-3753 },
 {   3,-3753 }, {   4,-3753 }, {   5,-3753 }, {   6,-3753 }, {   7,-3753 },
 {   8,-3753 }, {   9,-3495 }, {  10,-7732 }, {  11,-3753 }, {  12,-3495 },
 {  13,-7732 }, {  14,-3753 }, {  15,-3753 }, {  16,-3753 }, {  17,-3753 },
 {  18,-3753 }, {  19,-3753 }, {  20,-3753 }, {  21,-3753 }, {  22,-3753 },
 {  23,-3753 }, {  24,-3753 }, {  25,-3753 }, {  26,-3753 }, {  27,-3753 },
 {  28,-3753 }, {  29,-3753 }, {  30,-3753 }, {  31,-3753 }, {  32,-3495 },
 {  33,-3753 }, {  34,-3753 }, {  35,-3753 }, {  36,-3753 }, {  37,-3753 },
 {  38,-3753 }, {  39,-3753 }, {  40,-3753 }, {  41,-3753 }, {  42,-3753 },
 {  43,-3753 }, {  44,-3753 }, {  45,   0 }, {  46,-3753 }, {  47,-3753 },

 {  48,-3753 }, {  49,-3753 }, {  50,-3753 }, {  51,-3753 }, {  52,-3753 },
 {  53,-3753 }, {  54,-3753 }, {  55,-3753 }, {  56,-3753 }, {  57,-3753 },
 {  58,-3753 }, {  59,-3753 }, {  60,-3753 }, {  61,-3753 }, {  62,-3753 },
 {  63,-3753 }, {  64,-3753 }, {  65,-3753 }, {  66,-3753 }, {  67,-3753 },
 {  68,-3753 }, {  69,-3753 }, {  70,-3753 }, {  71,-3753 }, {  72,-3753 },
 {  73,-3753 }, {  74,-3753 }, {  75,-3753 }, {  76,-3753 }, {  77,-3753 },
 {  78,-3753 }, {  79,-3753 }, {  80,-3753 }, {  81,-3753 }, {  82,-3753 },
 {  83,-3753 }, {  84,-3753 }, {  85,-3753 }, {  86,-3753 }, {  87,-3753 },
 {  88,-3753 }, {  89,-3753 }, {  90,-3753 }, {  91,-3753 }, {  92,-3753 },
 {  93,-3753 }, {  94,-3753 }, {  95,-3753 }, {  96,-3753 }, {  97,-3753 },

 {  98,-3753 }, {  99,-3753 }, { 100,-3753 }, { 101,-3753 }, { 102,-3753 },
 { 103,-3753 }, { 104,-3753 }, { 105,-3753 }, { 106,-3753 }, { 107,-3753 },
 { 108,-3753 }, { 109,-3753 }, { 110,-3753 }, { 111,-3753 }, { 112,-3753 },
 { 113,-3753 }, { 114,-3753 }, { 115,-3753 }, { 116,-3753 }, { 117,-3753 },
 { 118,-3753 }, { 119,-3753 }, { 120,-3753 }, { 121,-3753 }, { 122,-3753 },
 { 123,-3753 }, { 124,-3753 }, { 125,-3753 }, { 126,-3753 }, { 127,-3753 },
 { 128,-3753 }, { 129,-3753 }, { 130,-3753 }, { 131,-3753 }, { 132,-3753 },
 { 133,-3753 }, { 134,-3753 }, { 135,-3753 }, { 136,-3753 }, { 137,-3753 },
 { 138,-3753 }, { 139,-3753 }, { 140,-3753 }, { 141,-3753 }, { 142,-3753 },
 { 143,-3753 }, { 144,-3753 }, { 145,-3753 }, { 146,-3753 }, { 147,-3753 },

 { 148,-3753 }, { 149,-3753 }, { 150,-3753 }, { 151,-3753 }, { 152,-3753 },
 { 153,-3753 }, { 154,-3753 }, { 155,-3753 }, { 156,-3753 }, { 157,-3753 },
 { 158,-3753 }, { 159,-3753 }, { 160,-3753 }, { 161,-3753 }, { 162,-3753 },
 { 163,-3753 }, { 164,-3753 }, { 165,-3753 }, { 166,-3753 }, { 167,-3753 },
 { 168,-3753 }, { 169,-3753 }, { 170,-3753 }, { 171,-3753 }, { 172,-3753 },
 { 173,-3753 }, { 174,-3753 }, { 175,-3753 }, { 176,-3753 }, { 177,-3753 },
 { 178,-3753 }, { 179,-3753 }, { 180,-3753 }, { 181,-3753 }, { 182,-3753 },
 { 183,-3753 }, { 184,-3753 }, { 185,-3753 }, { 186,-3753 }, { 187,-3753 },
 { 188,-3753 }, { 189,-3753 }, { 190,-3753 }, { 191,-3753 }, { 192,-3753 },
 { 193,-3753 }, { 194,-3753 }, { 195,-3753 }, { 196,-3753 }, { 197,-3753 },

 { 198,-3753 }, { 199,-3753 }, { 200,-3753 }, { 201,-3753 }, { 202,-3753 },
 { 203,-3753 }, { 204,-3753 }, { 205,-3753 }, { 206,-3753 }, { 207,-3753 },
 { 208,-3753 }, { 209,-3753 }, { 210,-3753 }, { 211,-3753 }, { 212,-3753 },
 { 213,-3753 }, { 214,-3753 }, { 215,-3753 }, { 216,-3753 }, { 217,-3753 },
 { 218,-3753 }, { 219,-3753 }, { 220,-3753 }, { 221,-3753 }, { 222,-3753 },
 { 223,-3753 }, { 224,-3753 }, { 225,-3753 }, { 226,-3753 }, { 227,-3753 },
 { 228,-3753 }, { 229,-3753 }, { 230,-3753 }, { 231,-3753 }, { 232,-3753 },
 { 233,-3753 }, { 234,-3753 }, { 235,-3753 }, { 236,-3753 }, { 237,-3753 },
 { 238,-3753 }, { 239,-3753 }, { 240,-3753 }, { 241,-3753 }, { 242,-3753 },
 { 243,-3753 }, { 244,-3753 }, { 245,-3753 }, { 246,-3753 }, { 247,-3753 },

 { 248,-3753 }, { 249,-3753 }, { 250,-3753 }, { 251,-3753 }, { 252,-3753 },
 { 253,-3753 }, { 254,-3753 }, { 255,-3753 }, { 256,-3753 }, {   0,   9 },
 {   0, 774 }, {   1,-3237 }, {   2,-3237 }, {   3,-3237 }, {   4,-3237 },
 {   5,-3237 }, {   6,-3237 }, {   7,-3237 }, {   8,-3237 }, {   9,-2979 },
 {  10,-2721 }, {  11,-3237 }, {  12,-2979 }, {  13,-2721 }, {  14,-3237 },
 {  15,-3237 }, {  16,-3237 }, {  17,-3237 }, {  18,-3237 }, {  19,-3237 },
 {  20,-3237 }, {  21,-3237 }, {  22,-3237 }, {  23,-3237 }, {  24,-3237 },
 {  25,-3237 }, {  26,-3237 }, {  27,-3237 }, {  28,-3237 }, {  29,-3237 },
 {  30,-3237 }, {  31,-3237 }, {  32,-2979 }, {  33,-3237 }, {  34,-3237 },
 {  35,-3237 }, {  36,-3237 }, {  37,-3237 }, {  38,-3237 }, {  39,-3237 },

 {  40,-3237 }, {  41,-3237 }, {  42,-3237 }, {  43,-3237 }, {  44,-3237 },
 {  45,   0 }, {  46,-3237 }, {  47,-3237 }, {  48,-3237 }, {  49,-3237 },
 {  50,-3237 }, {  51,-3237 }, {  52,-3237 }, {  53,-3237 }, {  54,-3237 },
 {  55,-3237 }, {  56,-3237 }, {  57,-3237 }, {  58,-3237 }, {  59,-3237 },
 {  60,-3237 }, {  61,-3237 }, {  62,-3237 }, {  63,-3237 }, {  64,-3237 },
 {  65,-3237 }, {  66,-3237 }, {  67,-3237 }, {  68,-3237 }, {  69,-3237 },
 {  70,-3237 }, {  71,-3237 }, {  72,-3237 }, {  73,-3237 }, {  74,-3237 },
 {  75,-3237 }, {  76,-3237 }, {  77,-3237 }, {  78,-3237 }, {  79,-3237 },
 {  80,-3237 }, {  81,-3237 }, {  82,-3237 }, {  83,-3237 }, {  84,-3237 },
 {  85,-3237 }, {  86,-3237 }, {  87,-3237 }, {  88,-3237 }, {  89,-3237 },

 {  90,-3237 }, {  91,-3237 }, {  92,-3237 }, {  93,-3237 }, {  94,-3237 },
 {  95,-3237 }, {  96,-3237 }, {  97,-3237 }, {  98,-3237 }, {  99,-3237 },
 { 100,-3237 }, { 101,-3237 }, { 102,-3237 }, { 103,-3237 }, { 104,-3237 },
 { 105,-3237 }, { 106,-3237 }, { 107,-3237 }, { 108,-3237 }, { 109,-3237 },
 { 110,-3237 }, { 111,-3237 }, { 112,-3237 }, { 113,-3237 }, { 114,-3237 },
 { 115,-3237 }, { 116,-3237 }, { 117,-3237 }, { 118,-3237 }, { 119,-3237 },
 { 120,-3237 }, { 121,-3237 }, { 122,-3237 }, { 123,-3237 }, { 124,-3237 },
 { 125,-3237 }, { 126,-3237 }, { 127,-3237 }, { 128,-3237 }, { 129,-3237 },
 { 130,-3237 }, { 131,-3237 }, { 132,-3237 }, { 133,-3237 }, { 134,-3237 },
 { 135,-3237 }, { 136,-3237 }, { 137,-3237 }, { 138,-3237 }, { 139,-3237 },

 { 140,-3237 }, { 141,-3237 }, { 142,-3237 }, { 143,-3237 }, { 144,-3237 },
 { 145,-3237 }, { 146,-3237 }, { 147,-3237 }, { 148,-3237 }, { 149,-3237 },
 { 150,-3237 }, { 151,-3237 }, { 152,-3237 }, { 153,-3237 }, { 154,-3237 },
 { 155,-3237 }, { 156,-3237 }, { 157,-3237 }, { 158,-3237 }, { 159,-3237 },
 { 160,-3237 }, { 161,-3237 }, { 162,-3237 }, { 163,-3237 }, { 164,-3237 },
 { 165,-3237 }, { 166,-3237 }, { 167,-3237 }, { 168,-3237 }, { 169,-3237 },
 { 170,-3237 }, { 171,-3237 }, { 172,-3237 }, { 173,-3237 }, { 174,-3237 },
 { 175,-3237 }, { 176,-3237 }, { 177,-3237 }, { 178,-3237 }, { 179,-3237 },
 { 180,-3237 }, { 181,-3237 }, { 182,-3237 }, { 183,-3237 }, { 184,-3237 },
 { 185,-3237 }, { 186,-3237 }, { 187,-3237 }, { 188,-3237 }, { 189,-3237 },

 { 190,-3237 }, { 191,-3237 }, { 192,-3237 }, { 193,-3237 }, { 194,-3237 },
 { 195,-3237 }, { 196,-3237 }, { 197,-3237 }, { 198,-3237 }, { 199,-3237 },
 { 200,-3237 }, { 201,-3237 }, { 202,-3237 }, { 203,-3237 }, { 204,-3237 },
 { 205,-3237 }, { 206,-3237 }, { 207,-3237 }, { 208,-3237 }, { 209,-3237 },
 { 210,-3237 }, { 211,-3237 }, { 212,-3237 }, { 213,-3237 }, { 214,-3237 },
 { 215,-3237 }, { 216,-3237 }, { 217,-3237 }, { 218,-3237 }, { 219,-3237 },
 { 220,-3237 }, { 221,-3237 }, { 222,-3237 }, { 223,-3237 }, { 224,-3237 },
 { 225,-3237 }, { 226,-3237 }, { 227,-3237 }, { 228,-3237 }, { 229,-3237 },
 { 230,-3237 }, { 231,-3237 }, { 232,-3237 }, { 233,-3237 }, { 234,-3237 },
 { 235,-3237 }, { 236,-3237 }, { 237,-3237 }, { 238,-3237 }, { 239,-3237 },

 { 240,-3237 }, { 241,-3237 }, { 242,-3237 }, { 243,-3237 }, { 244,-3237 },
 { 245,-3237 }, { 246,-3237 }, { 247,-3237 }, { 248,-3237 }, { 249,-3237 },
 { 250,-3237 }, { 251,-3237 }, { 252,-3237 }, { 253,-3237 }, { 254,-3237 },
 { 255,-3237 }, { 256,-3237 }, {   0,  16 }, {   0, 516 }, {   1,-2416 },
 {   2,-2416 }, {   3,-2416 }, {   4,-2416 }, {   5,-2416 }, {   6,-2416 },
 {   7,-2416 }, {   8,-2416 }, {   9,-2158 }, {  10,-1900 }, {  11,-2416 },
 {  12,-2158 }, {  13,-1900 }, {  14,-2416 }, {  15,-2416 }, {  16,-2416 },
 {  17,-2416 }, {  18,-2416 }, {  19,-2416 }, {  20,-2416 }, {  21,-2416 },
 {  22,-2416 }, {  23,-2416 }, {  24,-2416 }, {  25,-2416 }, {  26,-2416 },
 {  27,-2416 }, {  28,-2416 }, {  29,-2416 }, {  30,-2416 }, {  31,-2416 },

 {  32,-2158 }, {  33,-2416 }, {  34,-2416 }, {  35,-2416 }, {  36,-2416 },
 {  37,-2416 }, {  38,-2416 }, {  39,-2416 }, {  40,-2416 }, {  41,-2416 },
 {  42,-2416 }, {  43,-2416 }, {  44,-2416 }, {  45,   0 }, {  46,-2416 },
 {  47,-2416 }, {  48,-2416 }, {  49,-2416 }, {  50,-2416 }, {  51,-2416 },
 {  52,-2416 }, {  53,-2416 }, {  54,-2416 }, {  55,-2416 }, {  56,-2416 },
 {  57,-2416 }, {  58,-2416 }, {  59,-2416 }, {  60,-2416 }, {  61,-2416 },
 {  62,-2416 }, {  63,-2416 }, {  64,-2416 }, {  65,-2416 }, {  66,-2416 },
 {  67,-2416 }, {  68,-2416 }, {  69,-2416 }, {  70,-2416 }, {  71,-2416 },
 {  72,-2416 }, {  73,-2416 }, {  74,-2416 }, {  75,-2416 }, {  76,-2416 },
 {  77,-2416 }, {  78,-2416 }, {  79,-2416 }, {  80,-2416 }, {  81,-2416 },

 {  82,-2416 }, {  83,-2416 }, {  84,-2416 }, {  85,-2416 }, {  86,-2416 },
 {  87,-2416 }, {  88,-2416 }, {  89,-2416 }, {  90,-2416 }, {  91,-2416 },
 {  92,-2416 }, {  93,-2416 }, {  94,-2416 }, {  95,-2416 }, {  96,-2416 },
 {  97,-2416 }, {  98,-2416 }, {  99,-2416 }, { 100,-2416 }, { 101,-2416 },
 { 102,-2416 }, { 103,-2416 }, { 104,-2416 }, { 105,-2416 }, { 106,-2416 },
 { 107,-2416 }, { 108,-2416 }, { 109,-2416 }, { 110,-2416 }, { 111,-2416 },
 { 112,-2416 }, { 113,-2416 }, { 114,-2416 }, { 115,-2416 }, { 116,-2416 },
 { 117,-2416 }, { 118,-2416 }, { 119,-2416 }, { 120,-2416 }, { 121,-2416 },
 { 122,-2416 }, { 123,-2416 }, { 124,-2416 }, { 125,-2416 }, { 126,-2416 },
 { 127,-2416 }, { 128,-2416 }, { 129,-2416 }, { 130,-2416 }, { 131,-2416 },

 { 132,-2416 }, { 133,-2416 }, { 134,-2416 }, { 135,-2416 }, { 136,-2416 },
 { 137,-2416 }, { 138,-2416 }, { 139,-2416 }, { 140,-2416 }, { 141,-2416 },
 { 142,-2416 }, { 143,-2416 }, { 144,-2416 }, { 145,-2416 }, { 146,-2416 },
 { 147,-2416 }, { 148,-2416 }, { 149,-2416 }, { 150,-2416 }, { 151,-2416 },
 { 152,-2416 }, { 153,-2416 }, { 154,-2416 }, { 155,-2416 }, { 156,-2416 },
 { 157,-2416 }, { 158,-2416 }, { 159,-2416 }, { 160,-2416 }, { 161,-2416 },
 { 162,-2416 }, { 163,-2416 }, { 164,-2416 }, { 165,-2416 }, { 166,-2416 },
 { 167,-2416 }, { 168,-2416 }, { 169,-2416 }, { 170,-2416 }, { 171,-2416 },
 { 172,-2416 }, { 173,-2416 }, { 174,-2416 }, { 175,-2416 }, { 176,-2416 },
 { 177,-2416 }, { 178,-2416 }, { 179,-2416 }, { 180,-2416 }, { 181,-2416 },

 { 182,-2416 }, { 183,-2416 }, { 184,-2416 }, { 185,-2416 }, { 186,-2416 },
 { 187,-2416 }, { 188,-2416 }, { 189,-2416 }, { 190,-2416 }, { 191,-2416 },
 { 192,-2416 }, { 193,-2416 }, { 194,-2416 }, { 195,-2416 }, { 196,-2416 },
 { 197,-2416 }, { 198,-2416 }, { 199,-2416 }, { 200,-2416 }, { 201,-2416 },
 { 202,-2416 }, { 203,-2416 }, { 204,-2416 }, { 205,-2416 }, { 206,-2416 },
 { 207,-2416 }, { 208,-2416 }, { 209,-2416 }, { 210,-2416 }, { 211,-2416 },
 { 212,-2416 }, { 213,-2416 }, { 214,-2416 }, { 215,-2416 }, { 216,-2416 },
 { 217,-2416 }, { 218,-2416 }, { 219,-2416 }, { 220,-2416 }, { 221,-2416 },
 { 222,-2416 }, { 223,-2416 }, { 224,-2416 }, { 225,-2416 }, { 226,-2416 },
 { 227,-2416 }, { 228,-2416 }, { 229,-2416 }, { 230,-2416 }, { 231,-2416 },

 { 232,-2416 }, { 233,-2416 }, { 234,-2416 }, { 235,-2416 }, { 236,-2416 },
 { 237,-2416 }, { 238,-2416 }, { 239,-2416 }, { 240,-2416 }, { 241,-2416 },
 { 242,-2416 }, { 243,-2416 }, { 244,-2416 }, { 245,-2416 }, { 246,-2416 },
 { 247,-2416 }, { 248,-2416 }, { 249,-2416 }, { 250,-2416 }, { 251,-2416 },
 { 252,-2416 }, { 253,-2416 }, { 254,-2416 }, { 255,-2416 }, { 256,-2416 },
 {   0,  19 }, {   0, 258 }, {   1,-1595 }, {   2,-1595 }, {   3,-1595 },
 {   4,-1595 }, {   5,-1595 }, {   6,-1595 }, {   7,-1595 }, {   8,-1595 },
 {   9,-1337 }, {  10,-1079 }, {  11,-1595 }, {  12,-1337 }, {  13,-1079 },
 {  14,-1595 }, {  15,-1595 }, {  16,-1595 }, {  17,-1595 }, {  18,-1595 },
 {  19,-1595 }, {  20,-1595 }, {  21,-1595 }, {  22,-1595 }, {  23,-1595 },

 {  24,-1595 }, {  25,-1595 }, {  26,-1595 }, {  27,-1595 }, {  28,-1595 },
 {  29,-1595 }, {  30,-1595 }, {  31,-1595 }, {  32,-1337 }, {  33,-1595 },
 {  34,-1595 }, {  35,-1595 }, {  36,-1595 }, {  37,-1595 }, {  38,-1595 },
 {  39,-1595 }, {  40,-1595 }, {  41,-1595 }, {  42,-1595 }, {  43,-1595 },
 {  44,-1595 }, {  45,   0 }, {  46,-1595 }, {  47,-1595 }, {  48,-1595 },
 {  49,-1595 }, {  50,-1595 }, {  51,-1595 }, {  52,-1595 }, {  53,-1595 },
 {  54,-1595 }, {  55,-1595 }, {  56,-1595 }, {  57,-1595 }, {  58,-1595 },
 {  59,-1595 }, {  60,-1595 }, {  61,-1595 }, {  62,-1595 }, {  63,-1595 },
 {  64,-1595 }, {  65,-1595 }, {  66,-1595 }, {  67,-1595 }, {  68,-1595 },
 {  69,-1595 }, {  70,-1595 }, {  71,-1595 }, {  72,-1595 }, {  73,-1595 },

 {  74,-1595 }, {  75,-1595 }, {  76,-1595 }, {  77,-1595 }, {  78,-1595 },
 {  79,-1595 }, {  80,-1595 }, {  81,-1595 }, {  82,-1595 }, {  83,-1595 },
 {  84,-1595 }, {  85,-1595 }, {  86,-1595 }, {  87,-1595 }, {  88,-1595 },
 {  89,-1595 }, {  90,-1595 }, {  91,-1595 }, {  92,-1595 }, {  93,-1595 },
 {  94,-1595 }, {  95,-1595 }, {  96,-1595 }, {  97,-1595 }, {  98,-1595 },
 {  99,-1595 }, { 100,-1595 }, { 101,-1595 }, { 102,-1595 }, { 103,-1595 },
 { 104,-1595 }, { 105,-1595 }, { 106,-1595 }, { 107,-1595 }, { 108,-1595 },
 { 109,-1595 }, { 110,-1595 }, { 111,-1595 }, { 112,-1595 }, { 113,-1595 },
 { 114,-1595 }, { 115,-1595 }, { 116,-1595 }, { 117,-1595 }, { 118,-1595 },
 { 119,-1595 }, { 120,-1595 }, { 121,-1595 }, { 122,-1595 }, { 123,-1595 },

 { 124,-1595 }, { 125,-1595 }, { 126,-1595 }, { 127,-1595 }, { 128,-1595 },
 { 129,-1595 }, { 130,-1595 }, { 131,-1595 }, { 132,-1595 }, { 133,-1595 },
 { 134,-1595 }, { 135,-1595 }, { 136,-1595 }, { 137,-1595 }, { 138,-1595 },
 { 139,-1595 }, { 140,-1595 }, { 141,-1595 }, { 142,-1595 }, { 143,-1595 },
 { 144,-1595 }, { 145,-1595 }, { 146,-1595 }, { 147,-1595 }, { 148,-1595 },
 { 149,-1595 }, { 150,-1595 }, { 151,-1595 }, { 152,-1595 }, { 153,-1595 },
 { 154,-1595 }, { 155,-1595 }, { 156,-1595 }, { 157,-1595 }, { 158,-1595 },
 { 159,-1595 }, { 160,-1595 }, { 161,-1595 }, { 162,-1595 }, { 163,-1595 },
 { 164,-1595 }, { 165,-1595 }, { 166,-1595 }, { 167,-1595 }, { 168,-1595 },
 { 169,-1595 }, { 170,-1595 }, { 171,-1595 }, { 172,-1595 }, { 173,-1595 },

 { 174,-1595 }, { 175,-1595 }, { 176,-1595 }, { 177,-1595 }, { 178,-1595 },
 { 179,-1595 }, { 180,-1595 }, { 181,-1595 }, { 182,-1595 }, { 183,-1595 },
 { 184,-1595 }, { 185,-1595 }, { 186,-1595 }, { 187,-1595 }, { 188,-1595 },
 { 189,-1595 }, { 190,-1595 }, { 191,-1595 }, { 192,-1595 }, { 193,-1595 },
 { 194,-1595 }, { 195,-1595 }, { 196,-1595 }, { 197,-1595 }, { 198,-1595 },
 { 199,-1595 }, { 200,-1595 }, { 201,-1595 }, { 202,-1595 }, { 203,-1595 },
 { 204,-1595 }, { 205,-1595 }, { 206,-1595 }, { 207,-1595 }, { 208,-1595 },
 { 209,-1595 }, { 210,-1595 }, { 211,-1595 }, { 212,-1595 }, { 213,-1595 },
 { 214,-1595 }, { 215,-1595 }, { 216,-1595 }, { 217,-1595 }, { 218,-1595 },
 { 219,-1595 }, { 220,-1595 }, { 221,-1595 }, { 222,-1595 }, { 223,-1595 },

 { 224,-1595 }, { 225,-1595 }, { 226,-1595 }, { 227,-1595 }, { 228,-1595 },
 { 229,-1595 }, { 230,-1595 }, { 231,-1595 }, { 232,-1595 }, { 233,-1595 },
 { 234,-1595 }, { 235,-1595 }, { 236,-1595 }, { 237,-1595 }, { 238,-1595 },
 { 239,-1595 }, { 240,-1595 }, { 241,-1595 }, { 242,-1595 }, { 243,-1595 },
 { 244,-1595 }, { 245,-1595 }, { 246,-1595 }, { 247,-1595 }, { 248,-1595 },
 { 249,-1595 }, { 250,-1595 }, { 251,-1595 }, { 252,-1595 }, { 253,-1595 },
 { 254,-1595 }, { 255,-1595 }, { 256,-1595 }, { 257,  44 }, {   1,   0 },
    };

static yyconst struct yy_trans_info *yy_start_state_list[13] =
    {
    &yy_transition[1],
    &yy_transition[3],
    &yy_transition[261],
    &yy_transition[519],
    &yy_transition[777],
    &yy_transition[1035],
    &yy_transition[1293],
    &yy_transition[1551],
    &yy_transition[1809],
    &yy_transition[2067],
    &yy_transition[2325],
    &yy_transition[2583],
    &yy_transition[2841],
    } ;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
#line 1 "scan.l"

#line 11 "scan.l"

int			backslash_quote = BACKSLASH_QUOTE_SAFE_ENCODING;
bool		escape_string_warning = true;
bool		standard_conforming_strings = true;

/*
 * Set the type of yyextra.  All state variables used by the scanner should
 * be in yyextra, *not* statically allocated.
 */
#define YY_EXTRA_TYPE core_yy_extra_type *

/*
 * Each call to core_yylex must set yylloc to the location of the found token
 * (expressed as a byte offset from the start of the input text).
 * When we parse a token that requires multiple lexer rules to process,
 * this should be done in the first such rule, else yylloc will point
 * into the middle of the token.
 */
#define SET_YYLLOC()  (*(yylloc) = yytext - yyextra->scanbuf)

/*
 * Advance yylloc by the given number of bytes.
 */
#define ADVANCE_YYLLOC(delta)  ( *(yylloc) += (delta) )

#define startlit()	( yyextra->literallen = 0 )
static void addlit(char *ytext, int yleng, core_yyscan_t yyscanner);
static void addlitchar(unsigned char ychar, core_yyscan_t yyscanner);
static char *litbufdup(core_yyscan_t yyscanner);
static void truncate_identifier(char *ident, int len, bool warn);
static int process_integer_literal(const char *token, YYSTYPE *lval);
static char *downcase_truncate_identifier(const char *ident, int len, bool warn);
static char *downcase_identifier(const char *ident, int len, bool warn, bool truncate);
#define yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define YY_NO_INPUT 1
/*
 * We use exclusive states for quoted strings, extended comments,
 * and to eliminate parsing troubles for numeric strings.
 * Exclusive states:
 *  <xb> bit string literal
 *  <xc> extended C-style comments
 *  <xd> delimited identifiers (double-quoted identifiers)
 *  <xh> hexadecimal numeric string
 *  <xq> standard quoted strings
 *  <xe> extended quoted strings (support backslash escape sequences)
 *  <xdolq> $foo$ quoted strings
 *  <xui> quoted identifier with Unicode escapes
 *  <xuiend> end of a quoted identifier with Unicode escapes, UESCAPE can follow
 *  <xus> quoted string with Unicode escapes
 *  <xusend> end of a quoted string with Unicode escapes, UESCAPE can follow
 *  <xeu> Unicode surrogate pair in extended quoted string
 *
 * Remember to add an <<EOF>> case whenever you add a new exclusive state!
 * The default one is probably not the right thing.
 */





/*
 * In order to make the world safe for Windows and Mac clients as well as
 * Unix ones, we accept either \n or \r as a newline.  A DOS-style \r\n
 * sequence will be seen as two successive newlines, but that doesn't cause
 * any problems.  Comments that start with -- and extend to the next
 * newline are treated as equivalent to a single whitespace character.
 *
 * NOTE a fine point: if there is no newline following --, we will absorb
 * everything to the end of the input as a comment.  This is correct.  Older
 * versions of Postgres failed to recognize -- as a comment if the input
 * did not end with a newline.
 *
 * XXX perhaps \f (formfeed) should be treated as a newline as well?
 *
 * XXX if you change the set of whitespace characters, fix scanner_isspace()
 * to agree, and see also the plpgsql lexer.
 */
/*
 * SQL requires at least one newline in the whitespace separating
 * string literals that are to be concatenated.  Silly, but who are we
 * to argue?  Note that {whitespace_with_newline} should not have * after
 * it, whereas {whitespace} should generally have a * after it...
 */
/*
 * To ensure that {quotecontinue} can be scanned without having to back up
 * if the full pattern isn't matched, we include trailing whitespace in
 * {quotestop}.  This matches all cases where {quotecontinue} fails to match,
 * except for {quote} followed by whitespace and just one "-" (not two,
 * which would start a {comment}).  To cover that we have {quotefail}.
 * The actions for {quotestop} and {quotefail} must throw back characters
 * beyond the quote proper.
 */
/* Bit string
 * It is tempting to scan the string for only those characters
 * which are allowed. However, this leads to silently swallowed
 * characters if illegal characters are included in the string.
 * For example, if xbinside is [01] then B'ABCD' is interpreted
 * as a zero-length string, and the ABCD' is lost!
 * Better to pass the string forward and let the input routines
 * validate the contents.
 */
/* Hexadecimal number */
/* Extended quote
 * xqdouble implements embedded quote, ''''
 */
/* Double quote
 * Allows embedded spaces and other special characters into identifiers.
 */
/* C-style comments
 *
 * The "extended comment" syntax closely resembles allowable operator syntax.
 * The tricky part here is to get lex to recognize a string starting with
 * slash-star as a comment, when interpreting it as an operator would produce
 * a longer match --- remember lex will prefer a longer match!  Also, if we
 * have something like plus-slash-star, lex will think this is a 3-character
 * operator whereas we want to see it as a + operator and a comment start.
 * The solution is two-fold:
 * 1. append {op_chars}* to xcstart so that it matches as much text as
 *    {operator} would. Then the tie-breaker (first matching rule of same
 *    length) ensures xcstart wins.  We put back the extra stuff with yyless()
 *    in case it contains a star-slash that should terminate the comment.
 * 2. In the operator rule, check for slash-star within the operator, and
 *    if found throw it back with yyless().  This handles the plus-slash-star
 *    problem.
 * Dash-dash comments have similar interactions with the operator rule.
 */
/* Assorted special-case operators and operator-like tokens */
/*
 * "self" is the set of chars that should be returned as single-character
 * tokens.  "op_chars" is the set of chars that can make up "Op" tokens,
 * which can be one or more characters long (but if a single-char token
 * appears in the "self" set, it is not to be returned as an Op).  Note
 * that the sets overlap, but each has some chars that are not in the other.
 *
 * If you change either set, adjust the character lists appearing in the
 * rule for "operator"!
 */
/* we no longer allow unary minus in numbers.
 * instead we pass it separately to parser. there it gets
 * coerced via doNegate() -- Leon aug 20 1999
 *
 * {decimalfail} is used because we would like "1..10" to lex as 1, dot_dot, 10.
 *
 * {realfail1} and {realfail2} are added to prevent the need for scanner
 * backup when the {real} rule fails to match completely.
 */
#line 4305 "scan.cpp"

#define INITIAL 0
#define xb 1
#define xc 2
#define xd 3
#define xh 4
#define xq 5

#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
#include <unistd.h>
#endif

#ifndef YY_EXTRA_TYPE
#define YY_EXTRA_TYPE void *
#endif

/* Holds the entire state of the reentrant scanner. */
struct yyguts_t
    {

    /* User-defined. Not touched by flex. */
    YY_EXTRA_TYPE yyextra_r;

    /* The rest are the same as the globals declared in the non-reentrant scanner. */
    FILE *yyin_r, *yyout_r;
    size_t yy_buffer_stack_top; /**< index of top of stack. */
    size_t yy_buffer_stack_max; /**< capacity of stack. */
    YY_BUFFER_STATE * yy_buffer_stack; /**< Stack as an array. */
    char yy_hold_char;
    yy_size_t yy_n_chars;
    yy_size_t yyleng_r;
    char *yy_c_buf_p;
    int yy_init;
    int yy_start;
    int yy_did_buffer_switch_on_eof;
    int yy_start_stack_ptr;
    int yy_start_stack_depth;
    int *yy_start_stack;
    yy_state_type yy_last_accepting_state;
    char* yy_last_accepting_cpos;

    int yylineno_r;
    int yy_flex_debug_r;

    char *yytext_r;
    int yy_more_flag;
    int yy_more_len;

    YYSTYPE * yylval_r;

    YYLTYPE * yylloc_r;

    }; /* end struct yyguts_t */

static int yy_init_globals (yyscan_t yyscanner );

    /* This must go here because YYSTYPE and YYLTYPE are included
     * from bison output in section 1.*/
    #    define yylval yyg->yylval_r
    
    #    define yylloc yyg->yylloc_r
    
int core_yylex_init (yyscan_t* scanner);

int core_yylex_init_extra (YY_EXTRA_TYPE user_defined,yyscan_t* scanner);

/* Accessor methods to globals.
   These are made visible to non-reentrant scanners for convenience. */

int core_yylex_destroy (yyscan_t yyscanner );

int core_yyget_debug (yyscan_t yyscanner );

void core_yyset_debug (int debug_flag ,yyscan_t yyscanner );

YY_EXTRA_TYPE core_yyget_extra (yyscan_t yyscanner );

void core_yyset_extra (YY_EXTRA_TYPE user_defined ,yyscan_t yyscanner );

FILE *core_yyget_in (yyscan_t yyscanner );

void core_yyset_in  (FILE * in_str ,yyscan_t yyscanner );

FILE *core_yyget_out (yyscan_t yyscanner );

void core_yyset_out  (FILE * out_str ,yyscan_t yyscanner );

yy_size_t core_yyget_leng (yyscan_t yyscanner );

char *core_yyget_text (yyscan_t yyscanner );

int core_yyget_lineno (yyscan_t yyscanner );

void core_yyset_lineno (int line_number ,yyscan_t yyscanner );

YYSTYPE * core_yyget_lval (yyscan_t yyscanner );

void core_yyset_lval (YYSTYPE * yylval_param ,yyscan_t yyscanner );

       YYLTYPE *core_yyget_lloc (yyscan_t yyscanner );
    
        void core_yyset_lloc (YYLTYPE * yylloc_param ,yyscan_t yyscanner );
    
/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int core_yywrap (yyscan_t yyscanner );
#else
extern int core_yywrap (yyscan_t yyscanner );
#endif
#endif

#ifndef yytext_ptr
static void yy_flex_strncpy (char *,yyconst char *,int ,yyscan_t yyscanner);
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * ,yyscan_t yyscanner);
#endif

#ifndef YY_NO_INPUT

#ifdef __cplusplus
static int yyinput (yyscan_t yyscanner );
#else
static int input (yyscan_t yyscanner );
#endif

#endif

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#define YY_READ_BUF_SIZE 8192
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */
#define ECHO fwrite( yytext, yyleng, 1, yyout )
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
		{ \
		int c = '*'; \
		yy_size_t n; \
		for ( n = 0; n < max_size && \
			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
			buf[n] = (char) c; \
		if ( c == '\n' ) \
			buf[n++] = (char) c; \
		if ( c == EOF && ferror( yyin ) ) \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
		result = n; \
		} \
	else \
		{ \
		errno=0; \
		while ( (result = fread(buf, 1, max_size, yyin))==0 && ferror(yyin)) \
			{ \
			if( errno != EINTR) \
				{ \
				YY_FATAL_ERROR( "input in flex scanner failed" ); \
				break; \
				} \
			errno=0; \
			clearerr(yyin); \
			} \
		}\
\

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) yy_fatal_error( msg , yyscanner)
#endif

/* end tables serialization structures and prototypes */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1

extern int core_yylex \
               (YYSTYPE * yylval_param,YYLTYPE * yylloc_param ,yyscan_t yyscanner);

#define YY_DECL int core_yylex \
               (YYSTYPE * yylval_param, YYLTYPE * yylloc_param , yyscan_t yyscanner)
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK break;
#endif

#define YY_RULE_SETUP \
	YY_USER_ACTION

/** The main scanner function which does all the work.
 */
YY_DECL
{
	register yy_state_type yy_current_state;
	register char *yy_cp, *yy_bp;
	register int yy_act;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

#line 243 "scan.l"


#line 4552 "scan.cpp"

    yylval = yylval_param;

    yylloc = yylloc_param;

	if ( !yyg->yy_init )
		{
		yyg->yy_init = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! yyg->yy_start )
			yyg->yy_start = 1;	/* first start state */

		if ( ! yyin )
			yyin = stdin;

		if ( ! yyout )
			yyout = stdout;

		if ( ! YY_CURRENT_BUFFER ) {
			core_yyensure_buffer_stack (yyscanner);
			YY_CURRENT_BUFFER_LVALUE =
				core_yy_create_buffer(yyin,YY_BUF_SIZE ,yyscanner);
		}

		core_yy_load_buffer_state(yyscanner );
		}

	while ( 1 )		/* loops until end-of-file is reached */
		{
		yy_cp = yyg->yy_c_buf_p;

		/* Support of yytext. */
		*yy_cp = yyg->yy_hold_char;

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = yy_start_state_list[yyg->yy_start];
yy_match:
		{
		register yyconst struct yy_trans_info *yy_trans_info;

		register YY_CHAR yy_c;

		for ( yy_c = YY_SC_TO_UI(*yy_cp);
		      (yy_trans_info = &yy_current_state[(unsigned int) yy_c])->
		yy_verify == yy_c;
		      yy_c = YY_SC_TO_UI(*++yy_cp) )
			yy_current_state += yy_trans_info->yy_nxt;
		}

yy_find_action:
		yy_act = yy_current_state[-1].yy_nxt;

		YY_DO_BEFORE_ACTION;

do_action:	/* This label is used only to access EOF actions. */

		switch ( yy_act )
	{ /* beginning of action switch */
case 1:
/* rule 1 can match eol */
YY_RULE_SETUP
#line 245 "scan.l"
{
					/* ignore */
				}
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 249 "scan.l"
{
                    SET_YYLLOC();
					yyextra->xcdepth = 0;
					BEGIN(xc);
					/* Put back any characters past slash-star; see above */
					yyless(2);
				}
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 257 "scan.l"
{
					(yyextra->xcdepth)++;
					/* Put back any characters past slash-star; see above */
					yyless(2);
				}
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 263 "scan.l"
{
					if (yyextra->xcdepth <= 0)
						BEGIN(INITIAL);
					else
						(yyextra->xcdepth)--;
				}
	YY_BREAK
case 5:
/* rule 5 can match eol */
YY_RULE_SETUP
#line 270 "scan.l"
{
					/* ignore */
				}
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 274 "scan.l"
{
					/* ignore */
				}
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 278 "scan.l"
{
					/* ignore */
				}
	YY_BREAK
case YY_STATE_EOF(xc):
#line 282 "scan.l"
{ yyerror("unterminated /* comment"); }
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 284 "scan.l"
{
					/* Binary bit type.
					 * At some point we should simply pass the string
					 * forward to the parser and label it there.
					 * In the meantime, place a leading "b" on the string
					 * to mark it for the input routine as a binary string.
					 */
                    SET_YYLLOC();
					BEGIN(xb);
					startlit();
					addlitchar('b', yyscanner);
				}
	YY_BREAK
case 9:
/* rule 9 can match eol */
#line 297 "scan.l"
case 10:
/* rule 10 can match eol */
YY_RULE_SETUP
#line 297 "scan.l"
{
					yyless(1);
					BEGIN(INITIAL);
					yylval->str = litbufdup(yyscanner);
					return BCONST;
				}
	YY_BREAK
case 11:
/* rule 11 can match eol */
#line 304 "scan.l"
case 12:
/* rule 12 can match eol */
YY_RULE_SETUP
#line 304 "scan.l"
{
					addlit(yytext, yyleng, yyscanner);
				}
	YY_BREAK
case 13:
/* rule 13 can match eol */
#line 308 "scan.l"
case 14:
/* rule 14 can match eol */
YY_RULE_SETUP
#line 308 "scan.l"
{
					/* ignore */
				}
	YY_BREAK
case YY_STATE_EOF(xb):
#line 311 "scan.l"
{ yyerror("unterminated bit string literal"); }
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 313 "scan.l"
{
					/* Hexadecimal bit type.
					 * At some point we should simply pass the string
					 * forward to the parser and label it there.
					 * In the meantime, place a leading "x" on the string
					 * to mark it for the input routine as a hex string.
					 */
					SET_YYLLOC();
					BEGIN(xh);
					startlit();
					addlitchar('x', yyscanner);
				}
	YY_BREAK
case 16:
/* rule 16 can match eol */
#line 326 "scan.l"
case 17:
/* rule 17 can match eol */
YY_RULE_SETUP
#line 326 "scan.l"
{
					yyless(1);
					BEGIN(INITIAL);
					yylval->str = litbufdup(yyscanner);
					return XCONST;
				}
	YY_BREAK
case YY_STATE_EOF(xh):
#line 332 "scan.l"
{ yyerror("unterminated hexadecimal string literal"); }
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 334 "scan.l"
{
					yyextra->warn_on_first_escape = true;
					yyextra->saw_non_ascii = false;
					SET_YYLLOC();
					if (yyextra->standard_conforming_strings)
						BEGIN(xq);
					
					startlit();
				}
	YY_BREAK
case 19:
/* rule 19 can match eol */
#line 345 "scan.l"
case 20:
/* rule 20 can match eol */
YY_RULE_SETUP
#line 345 "scan.l"
{
					yyless(1);
					BEGIN(INITIAL);
					/*
					 * check that the data remains valid if it might have been
					 * made invalid by unescaping any chars.
					 */
					if (yyextra->saw_non_ascii) {
						//TODO:We should fix this non ascii
					}
					yylval->str = litbufdup(yyscanner);
					return SCONST;
				}
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 359 "scan.l"
{
					addlitchar('\'', yyscanner);
				}
	YY_BREAK
case 22:
/* rule 22 can match eol */
YY_RULE_SETUP
#line 363 "scan.l"
{
					addlit(yytext, yyleng, yyscanner);
				}
	YY_BREAK
case 23:
/* rule 23 can match eol */
YY_RULE_SETUP
#line 367 "scan.l"
{
					/* ignore */
				}
	YY_BREAK
case YY_STATE_EOF(xq):
#line 371 "scan.l"
{ yyerror("unterminated quoted string"); }
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 373 "scan.l"
{
					SET_YYLLOC();
					BEGIN(xd);
					startlit();
				}
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 379 "scan.l"
{
					char	   *ident;

					BEGIN(INITIAL);
					if (yyextra->literallen == 0)
						yyerror("zero-length delimited identifier");
					ident = litbufdup(yyscanner);
					if (yyextra->literallen >= NAMEDATALEN)
						truncate_identifier(ident, yyextra->literallen, true);
					yylval->str = ident;
					return IDENT;
				}
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 392 "scan.l"
{
					addlitchar('"', yyscanner);
				}
	YY_BREAK
case 27:
/* rule 27 can match eol */
YY_RULE_SETUP
#line 396 "scan.l"
{
					addlit(yytext, yyleng, yyscanner);
				}
	YY_BREAK
case YY_STATE_EOF(xd):
#line 400 "scan.l"
{ yyerror("unterminated quoted identifier"); }
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 402 "scan.l"
{
					SET_YYLLOC();
					return DOT_DOT;
				}
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 407 "scan.l"
{
					SET_YYLLOC();
					return GREATER_EQUALS;
				}
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 412 "scan.l"
{
					/* We accept both "<>" and "!=" as meaning NOT_EQUALS */
					SET_YYLLOC();
					return NOT_EQUALS;
				}
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 418 "scan.l"
{
					/* We accept both "<>" and "!=" as meaning NOT_EQUALS */
					SET_YYLLOC();
					return NOT_EQUALS;
				}
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 424 "scan.l"
{
					SET_YYLLOC();
					return yytext[0];
				}				
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 429 "scan.l"
{
					/*
					 * Check for embedded slash-star or dash-dash; those
					 * are comment starts, so operator must stop there.
					 * Note that slash-star or dash-dash at the first
					 * character will match a prior rule, not this one.
					 */
					int			nchars = yyleng;
					char	   *slashstar = strstr(yytext, "/*");
					char	   *dashdash = strstr(yytext, "--");

					if (slashstar && dashdash)
					{
						/* if both appear, take the first one */
						if (slashstar > dashdash)
							slashstar = dashdash;
					}
					else if (!slashstar)
						slashstar = dashdash;
					if (slashstar)
						nchars = slashstar - yytext;

					/*
					 * For SQL compatibility, '+' and '-' cannot be the
					 * last char of a multi-char operator unless the operator
					 * contains chars that are not in SQL operators.
					 * The idea is to lex '=-' as two operators, but not
					 * to forbid operator names like '?-' that could not be
					 * sequences of SQL operators.
					 */
					while (nchars > 1 &&
						   (yytext[nchars - 1] == '+' ||
							yytext[nchars - 1] == '-'))
					{
						int			ic;

						for (ic = nchars - 2; ic >= 0; ic--)
						{
							if (strchr("~!@#^&|`?%", yytext[ic]))
								break;
						}
						if (ic >= 0)
							break; /* found a char that makes it OK */
						nchars--; /* else remove the +/-, and check again */
					}

					SET_YYLLOC();

					if (nchars < yyleng)
					{
						/* Strip the unwanted chars from the token */
						yyless(nchars);
						/*
						 * If what we have left is only one char, and it's
						 * one of the characters matching "self", then
						 * return it as a character token the same way
						 * that the "self" rule would have.
						 */
						if (nchars == 1 &&
							strchr(",()[].;:+-*/%^<>=", yytext[0]))
							return yytext[0];
					}

					/*
					 * Complain if operator is too long.  Unlike the case
					 * for identifiers, we make this an error not a notice-
					 * and-truncate, because the odds are we are looking at
					 * a syntactic mistake anyway.
					 */
					if (nchars >= NAMEDATALEN)
						yyerror("operator too long");

					yylval->str = strdup(yytext);
					return Op;
				}
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 505 "scan.l"
{
					SET_YYLLOC();
					yylval->ival = atol(yytext + 1);
					return PARAM;
				}
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 511 "scan.l"
{
					SET_YYLLOC();
					return process_integer_literal(yytext, yylval);
				}
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 515 "scan.l"
{
					SET_YYLLOC();
					yylval->str = strdup(yytext);
					return FCONST;
				}
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 520 "scan.l"
{
					/* throw back the .., and treat as integer */
					yyless(yyleng - 2);
					SET_YYLLOC();
					return process_integer_literal(yytext, yylval);
				}
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 526 "scan.l"
{
					SET_YYLLOC();
					yylval->str = strdup(yytext);
					return FCONST;
				}
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 531 "scan.l"
{
					/*
					 * throw back the [Ee], and treat as {decimal}.  Note
					 * that it is possible the input is actually {integer},
					 * but since this case will almost certainly lead to a
					 * syntax error anyway, we don't bother to distinguish.
					 */
					yyless(yyleng - 1);
					SET_YYLLOC();
					yylval->str = strdup(yytext);
					return FCONST;
				}
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 543 "scan.l"
{
					/* throw back the [Ee][+-], and proceed as above */
					yyless(yyleng - 2);
					SET_YYLLOC();
					yylval->str = strdup(yytext);
					return FCONST;
				}
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 552 "scan.l"
{
					const ScanKeyword *keyword;
					char	   *ident;

					SET_YYLLOC();

					/* Is it a keyword? */
					keyword = ScanKeywordLookup(yytext,
												yyextra->keywords,
												yyextra->num_keywords);
					if (keyword != NULL)
					{
						yylval->keyword = keyword->name;
						return keyword->value;
					}

					/*
					 * No.  Convert the identifier to lower case, and truncate
					 * if necessary.
					 */
					ident = downcase_truncate_identifier(yytext, yyleng, true);
					yylval->str = ident;
					return IDENT;
				}
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 577 "scan.l"
{
					SET_YYLLOC();
					return yytext[0];
				}
	YY_BREAK
case YY_STATE_EOF(INITIAL):
#line 582 "scan.l"
{
					SET_YYLLOC();
					yyterminate();
				}
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 586 "scan.l"
YY_FATAL_ERROR( "flex scanner jammed" );
	YY_BREAK
#line 5119 "scan.cpp"

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - yyg->yytext_ptr) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = yyg->yy_hold_char;
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * core_yylex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			yyg->yy_n_chars = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( yyg->yy_c_buf_p <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			yyg->yy_c_buf_p = yyg->yytext_ptr + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state( yyscanner );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state , yyscanner);

			yy_bp = yyg->yytext_ptr + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++yyg->yy_c_buf_p;
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = yyg->yy_c_buf_p;
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer( yyscanner ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				yyg->yy_did_buffer_switch_on_eof = 0;

				if ( core_yywrap(yyscanner ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					yyg->yy_c_buf_p = yyg->yytext_ptr + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! yyg->yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				yyg->yy_c_buf_p =
					yyg->yytext_ptr + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state( yyscanner );

				yy_cp = yyg->yy_c_buf_p;
				yy_bp = yyg->yytext_ptr + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				yyg->yy_c_buf_p =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars];

				yy_current_state = yy_get_previous_state( yyscanner );

				yy_cp = yyg->yy_c_buf_p;
				yy_bp = yyg->yytext_ptr + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
} /* end of core_yylex */

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
static int yy_get_next_buffer (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	register char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	register char *source = yyg->yytext_ptr;
	register int number_to_move, i;
	int ret_val;

	if ( yyg->yy_c_buf_p > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( yyg->yy_c_buf_p - yyg->yytext_ptr - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) (yyg->yy_c_buf_p - yyg->yytext_ptr) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars = 0;

	else
		{
			yy_size_t num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = YY_CURRENT_BUFFER;

			int yy_c_buf_p_offset =
				(int) (yyg->yy_c_buf_p - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				yy_size_t new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					core_yyrealloc((void *) b->yy_ch_buf,b->yy_buf_size + 2 ,yyscanner );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = 0;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			yyg->yy_c_buf_p = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
						number_to_move - 1;

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			yyg->yy_n_chars, num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars;
		}

	if ( yyg->yy_n_chars == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			core_yyrestart(yyin  ,yyscanner);
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	if ((yy_size_t) (yyg->yy_n_chars + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
		/* Extend the array by 50%, plus the number we really need. */
		yy_size_t new_size = yyg->yy_n_chars + number_to_move + (yyg->yy_n_chars >> 1);
		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) core_yyrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size ,yyscanner );
		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
	}

	yyg->yy_n_chars += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars + 1] = YY_END_OF_BUFFER_CHAR;

	yyg->yytext_ptr = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

    static yy_state_type yy_get_previous_state (yyscan_t yyscanner)
{
	register yy_state_type yy_current_state;
	register char *yy_cp;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	yy_current_state = yy_start_state_list[yyg->yy_start];

	for ( yy_cp = yyg->yytext_ptr + YY_MORE_ADJ; yy_cp < yyg->yy_c_buf_p; ++yy_cp )
		{
		yy_current_state += yy_current_state[(*yy_cp ? YY_SC_TO_UI(*yy_cp) : 256)].yy_nxt;
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state , yyscan_t yyscanner)
{
	register int yy_is_jam;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner; /* This var may be unused depending upon options. */

	register int yy_c = 256;
	register yyconst struct yy_trans_info *yy_trans_info;

	yy_trans_info = &yy_current_state[(unsigned int) yy_c];
	yy_current_state += yy_trans_info->yy_nxt;
	yy_is_jam = (yy_trans_info->yy_verify != yy_c);

	return yy_is_jam ? 0 : yy_current_state;
}

#ifndef YY_NO_INPUT
#ifdef __cplusplus
    static int yyinput (yyscan_t yyscanner)
#else
    static int input  (yyscan_t yyscanner)
#endif

{
	int c;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	*yyg->yy_c_buf_p = yyg->yy_hold_char;

	if ( *yyg->yy_c_buf_p == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( yyg->yy_c_buf_p < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] )
			/* This was really a NUL. */
			*yyg->yy_c_buf_p = '\0';

		else
			{ /* need more input */
			yy_size_t offset = yyg->yy_c_buf_p - yyg->yytext_ptr;
			++yyg->yy_c_buf_p;

			switch ( yy_get_next_buffer( yyscanner ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					core_yyrestart(yyin ,yyscanner);

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( core_yywrap(yyscanner ) )
						return 0;

					if ( ! yyg->yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput(yyscanner);
#else
					return input(yyscanner);
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					yyg->yy_c_buf_p = yyg->yytext_ptr + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) yyg->yy_c_buf_p;	/* cast for 8-bit char's */
	*yyg->yy_c_buf_p = '\0';	/* preserve yytext */
	yyg->yy_hold_char = *++yyg->yy_c_buf_p;

	return c;
}
#endif	/* ifndef YY_NO_INPUT */

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * @param yyscanner The scanner object.
 * @note This function does not reset the start condition to @c INITIAL .
 */
    void core_yyrestart  (FILE * input_file , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if ( ! YY_CURRENT_BUFFER ){
        core_yyensure_buffer_stack (yyscanner);
		YY_CURRENT_BUFFER_LVALUE =
            core_yy_create_buffer(yyin,YY_BUF_SIZE ,yyscanner);
	}

	core_yy_init_buffer(YY_CURRENT_BUFFER,input_file ,yyscanner);
	core_yy_load_buffer_state(yyscanner );
}

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * @param yyscanner The scanner object.
 */
    void core_yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	/* TODO. We should be able to replace this entire function body
	 * with
	 *		core_yypop_buffer_state();
	 *		core_yypush_buffer_state(new_buffer);
     */
	core_yyensure_buffer_stack (yyscanner);
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*yyg->yy_c_buf_p = yyg->yy_hold_char;
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = yyg->yy_c_buf_p;
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars;
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	core_yy_load_buffer_state(yyscanner );

	/* We don't actually know whether we did this switch during
	 * EOF (core_yywrap()) processing, but the only time this flag
	 * is looked at is after core_yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	yyg->yy_did_buffer_switch_on_eof = 1;
}

static void core_yy_load_buffer_state  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	yyg->yy_n_chars = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	yyg->yytext_ptr = yyg->yy_c_buf_p = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
	yyg->yy_hold_char = *yyg->yy_c_buf_p;
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * @param yyscanner The scanner object.
 * @return the allocated buffer state.
 */
    YY_BUFFER_STATE core_yy_create_buffer  (FILE * file, int  size , yyscan_t yyscanner)
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) core_yyalloc(sizeof( struct yy_buffer_state ) ,yyscanner );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in core_yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) core_yyalloc(b->yy_buf_size + 2 ,yyscanner );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in core_yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	core_yy_init_buffer(b,file ,yyscanner);

	return b;
}

/** Destroy the buffer.
 * @param b a buffer created with core_yy_create_buffer()
 * @param yyscanner The scanner object.
 */
    void core_yy_delete_buffer (YY_BUFFER_STATE  b , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		core_yyfree((void *) b->yy_ch_buf ,yyscanner );

	core_yyfree((void *) b ,yyscanner );
}

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a core_yyrestart() or at EOF.
 */
    static void core_yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file , yyscan_t yyscanner)

{
	int oerrno = errno;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	core_yy_flush_buffer(b ,yyscanner);

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then core_yy_init_buffer was _probably_
     * called from core_yyrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

        b->yy_is_interactive = 0;
    
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * @param yyscanner The scanner object.
 */
    void core_yy_flush_buffer (YY_BUFFER_STATE  b , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		core_yy_load_buffer_state(yyscanner );
}

/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  @param yyscanner The scanner object.
 */
void core_yypush_buffer_state (YY_BUFFER_STATE new_buffer , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if (new_buffer == NULL)
		return;

	core_yyensure_buffer_stack(yyscanner);

	/* This block is copied from core_yy_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*yyg->yy_c_buf_p = yyg->yy_hold_char;
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = yyg->yy_c_buf_p;
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars;
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		yyg->yy_buffer_stack_top++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from core_yy_switch_to_buffer. */
	core_yy_load_buffer_state(yyscanner );
	yyg->yy_did_buffer_switch_on_eof = 1;
}

/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  @param yyscanner The scanner object.
 */
void core_yypop_buffer_state (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if (!YY_CURRENT_BUFFER)
		return;

	core_yy_delete_buffer(YY_CURRENT_BUFFER ,yyscanner);
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if (yyg->yy_buffer_stack_top > 0)
		--yyg->yy_buffer_stack_top;

	if (YY_CURRENT_BUFFER) {
		core_yy_load_buffer_state(yyscanner );
		yyg->yy_did_buffer_switch_on_eof = 1;
	}
}

/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
static void core_yyensure_buffer_stack (yyscan_t yyscanner)
{
	yy_size_t num_to_alloc;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if (!yyg->yy_buffer_stack) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
		num_to_alloc = 1;
		yyg->yy_buffer_stack = (struct yy_buffer_state**)core_yyalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								, yyscanner);
		if ( ! yyg->yy_buffer_stack )
			YY_FATAL_ERROR( "out of dynamic memory in core_yyensure_buffer_stack()" );
								  
		memset(yyg->yy_buffer_stack, 0, num_to_alloc * sizeof(struct yy_buffer_state*));
				
		yyg->yy_buffer_stack_max = num_to_alloc;
		yyg->yy_buffer_stack_top = 0;
		return;
	}

	if (yyg->yy_buffer_stack_top >= (yyg->yy_buffer_stack_max) - 1){

		/* Increase the buffer to prepare for a possible push. */
		int grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = yyg->yy_buffer_stack_max + grow_size;
		yyg->yy_buffer_stack = (struct yy_buffer_state**)core_yyrealloc
								(yyg->yy_buffer_stack,
								num_to_alloc * sizeof(struct yy_buffer_state*)
								, yyscanner);
		if ( ! yyg->yy_buffer_stack )
			YY_FATAL_ERROR( "out of dynamic memory in core_yyensure_buffer_stack()" );

		/* zero only the new slots.*/
		memset(yyg->yy_buffer_stack + yyg->yy_buffer_stack_max, 0, grow_size * sizeof(struct yy_buffer_state*));
		yyg->yy_buffer_stack_max = num_to_alloc;
	}
}

/** Setup the input buffer state to scan directly from a user-specified character buffer.
 * @param base the character buffer
 * @param size the size in bytes of the character buffer
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object. 
 */
YY_BUFFER_STATE core_yy_scan_buffer  (char * base, yy_size_t  size , yyscan_t yyscanner)
{
	YY_BUFFER_STATE b;
    
	if ( size < 2 ||
	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
	     base[size-1] != YY_END_OF_BUFFER_CHAR )
		/* They forgot to leave room for the EOB's. */
		return 0;

	b = (YY_BUFFER_STATE) core_yyalloc(sizeof( struct yy_buffer_state ) ,yyscanner );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in core_yy_scan_buffer()" );

	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = 0;
	b->yy_n_chars = b->yy_buf_size;
	b->yy_is_interactive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = YY_BUFFER_NEW;

	core_yy_switch_to_buffer(b ,yyscanner );

	return b;
}

/** Setup the input buffer state to scan a string. The next call to core_yylex() will
 * scan from a @e copy of @a str.
 * @param yystr a NUL-terminated string to scan
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object.
 * @note If you want to scan bytes that may contain NUL values, then use
 *       core_yy_scan_bytes() instead.
 */
YY_BUFFER_STATE core_yy_scan_string (yyconst char * yystr , yyscan_t yyscanner)
{
    
	return core_yy_scan_bytes(yystr,strlen(yystr) ,yyscanner);
}

/** Setup the input buffer state to scan the given bytes. The next call to core_yylex() will
 * scan from a @e copy of @a bytes.
 * @param bytes the byte buffer to scan
 * @param len the number of bytes in the buffer pointed to by @a bytes.
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object.
 */
YY_BUFFER_STATE core_yy_scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len , yyscan_t yyscanner)
{
	YY_BUFFER_STATE b;
	char *buf;
	yy_size_t n, i;
    
	/* Get memory for full buffer, including space for trailing EOB's. */
	n = _yybytes_len + 2;
	buf = (char *) core_yyalloc(n ,yyscanner );
	if ( ! buf )
		YY_FATAL_ERROR( "out of dynamic memory in core_yy_scan_bytes()" );

	for ( i = 0; i < _yybytes_len; ++i )
		buf[i] = yybytes[i];

	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;

	b = core_yy_scan_buffer(buf,n ,yyscanner);
	if ( ! b )
		YY_FATAL_ERROR( "bad buffer in core_yy_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */
	b->yy_is_our_buffer = 1;

	return b;
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

static void yy_fatal_error (yyconst char* msg , yyscan_t yyscanner)
{
    	(void) fprintf( stderr, "%s\n", msg );
	exit( YY_EXIT_FAILURE );
}

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		yytext[yyleng] = yyg->yy_hold_char; \
		yyg->yy_c_buf_p = yytext + yyless_macro_arg; \
		yyg->yy_hold_char = *yyg->yy_c_buf_p; \
		*yyg->yy_c_buf_p = '\0'; \
		yyleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/** Get the user-defined data for this scanner.
 * @param yyscanner The scanner object.
 */
YY_EXTRA_TYPE core_yyget_extra  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyextra;
}

/** Get the current line number.
 * @param yyscanner The scanner object.
 */
int core_yyget_lineno  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    
        if (! YY_CURRENT_BUFFER)
            return 0;
    
    return yylineno;
}

/** Get the current column number.
 * @param yyscanner The scanner object.
 */
int core_yyget_column  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    
        if (! YY_CURRENT_BUFFER)
            return 0;
    
    return yycolumn;
}

/** Get the input stream.
 * @param yyscanner The scanner object.
 */
FILE *core_yyget_in  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyin;
}

/** Get the output stream.
 * @param yyscanner The scanner object.
 */
FILE *core_yyget_out  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyout;
}

/** Get the length of the current token.
 * @param yyscanner The scanner object.
 */
yy_size_t core_yyget_leng  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyleng;
}

/** Get the current token.
 * @param yyscanner The scanner object.
 */

char *core_yyget_text  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yytext;
}

/** Set the user-defined data. This data is never touched by the scanner.
 * @param user_defined The data to be associated with this scanner.
 * @param yyscanner The scanner object.
 */
void core_yyset_extra (YY_EXTRA_TYPE  user_defined , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yyextra = user_defined ;
}

/** Set the current line number.
 * @param line_number
 * @param yyscanner The scanner object.
 */
void core_yyset_lineno (int  line_number , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

        /* lineno is only valid if an input buffer exists. */
        if (! YY_CURRENT_BUFFER )
           yy_fatal_error( "core_yyset_lineno called with no buffer" , yyscanner); 
    
    yylineno = line_number;
}

/** Set the current column.
 * @param line_number
 * @param yyscanner The scanner object.
 */
void core_yyset_column (int  column_no , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

        /* column is only valid if an input buffer exists. */
        if (! YY_CURRENT_BUFFER )
           yy_fatal_error( "core_yyset_column called with no buffer" , yyscanner); 
    
    yycolumn = column_no;
}

/** Set the input stream. This does not discard the current
 * input buffer.
 * @param in_str A readable stream.
 * @param yyscanner The scanner object.
 * @see core_yy_switch_to_buffer
 */
void core_yyset_in (FILE *  in_str , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yyin = in_str ;
}

void core_yyset_out (FILE *  out_str , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yyout = out_str ;
}

int core_yyget_debug  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yy_flex_debug;
}

void core_yyset_debug (int  bdebug , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yy_flex_debug = bdebug ;
}

/* Accessor methods for yylval and yylloc */

YYSTYPE * core_yyget_lval  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yylval;
}

void core_yyset_lval (YYSTYPE *  yylval_param , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yylval = yylval_param;
}

YYLTYPE *core_yyget_lloc  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yylloc;
}
    
void core_yyset_lloc (YYLTYPE *  yylloc_param , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yylloc = yylloc_param;
}
    
/* User-visible API */

/* core_yylex_init is special because it creates the scanner itself, so it is
 * the ONLY reentrant function that doesn't take the scanner as the last argument.
 * That's why we explicitly handle the declaration, instead of using our macros.
 */

int core_yylex_init(yyscan_t* ptr_yy_globals)

{
    if (ptr_yy_globals == NULL){
        errno = EINVAL;
        return 1;
    }

    *ptr_yy_globals = (yyscan_t) core_yyalloc ( sizeof( struct yyguts_t ), NULL );

    if (*ptr_yy_globals == NULL){
        errno = ENOMEM;
        return 1;
    }

    /* By setting to 0xAA, we expose bugs in yy_init_globals. Leave at 0x00 for releases. */
    memset(*ptr_yy_globals,0x00,sizeof(struct yyguts_t));

    return yy_init_globals ( *ptr_yy_globals );
}

/* core_yylex_init_extra has the same functionality as core_yylex_init, but follows the
 * convention of taking the scanner as the last argument. Note however, that
 * this is a *pointer* to a scanner, as it will be allocated by this call (and
 * is the reason, too, why this function also must handle its own declaration).
 * The user defined value in the first argument will be available to core_yyalloc in
 * the yyextra field.
 */

int core_yylex_init_extra(YY_EXTRA_TYPE yy_user_defined,yyscan_t* ptr_yy_globals )

{
    struct yyguts_t dummy_yyguts;

    core_yyset_extra (yy_user_defined, &dummy_yyguts);

    if (ptr_yy_globals == NULL){
        errno = EINVAL;
        return 1;
    }
	
    *ptr_yy_globals = (yyscan_t) core_yyalloc ( sizeof( struct yyguts_t ), &dummy_yyguts );
	
    if (*ptr_yy_globals == NULL){
        errno = ENOMEM;
        return 1;
    }
    
    /* By setting to 0xAA, we expose bugs in
    yy_init_globals. Leave at 0x00 for releases. */
    memset(*ptr_yy_globals,0x00,sizeof(struct yyguts_t));
    
    core_yyset_extra (yy_user_defined, *ptr_yy_globals);
    
    return yy_init_globals ( *ptr_yy_globals );
}

static int yy_init_globals (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    /* Initialization is the same as for the non-reentrant scanner.
     * This function is called from core_yylex_destroy(), so don't allocate here.
     */

    yyg->yy_buffer_stack = 0;
    yyg->yy_buffer_stack_top = 0;
    yyg->yy_buffer_stack_max = 0;
    yyg->yy_c_buf_p = (char *) 0;
    yyg->yy_init = 0;
    yyg->yy_start = 0;

    yyg->yy_start_stack_ptr = 0;
    yyg->yy_start_stack_depth = 0;
    yyg->yy_start_stack =  NULL;

/* Defined in main.c */
#ifdef YY_STDINIT
    yyin = stdin;
    yyout = stdout;
#else
    yyin = (FILE *) 0;
    yyout = (FILE *) 0;
#endif

    /* For future reference: Set errno on error, since we are called by
     * core_yylex_init()
     */
    return 0;
}

/* core_yylex_destroy is for both reentrant and non-reentrant scanners. */
int core_yylex_destroy  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

    /* Pop the buffer stack, destroying each element. */
	while(YY_CURRENT_BUFFER){
		core_yy_delete_buffer(YY_CURRENT_BUFFER ,yyscanner );
		YY_CURRENT_BUFFER_LVALUE = NULL;
		core_yypop_buffer_state(yyscanner);
	}

	/* Destroy the stack itself. */
	core_yyfree(yyg->yy_buffer_stack ,yyscanner);
	yyg->yy_buffer_stack = NULL;

    /* Destroy the start condition stack. */
        core_yyfree(yyg->yy_start_stack ,yyscanner );
        yyg->yy_start_stack = NULL;

    /* Reset the globals. This is important in a non-reentrant scanner so the next time
     * core_yylex() is called, initialization will occur. */
    yy_init_globals( yyscanner);

    /* Destroy the main struct (reentrant only). */
    core_yyfree ( yyscanner , yyscanner );
    yyscanner = NULL;
    return 0;
}

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, yyconst char * s2, int n , yyscan_t yyscanner)
{
	register int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * s , yyscan_t yyscanner)
{
	register int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

#define YYTABLES_NAME "yytables"

#line 586 "scan.l"



/*
 * Arrange access to yyextra for subroutines of the main core_yylex() function.
 * We expect each subroutine to have a yyscanner parameter.  Rather than
 * use the yyget_xxx functions, which might or might not get inlined by the
 * compiler, we cheat just a bit and cast yyscanner to the right type.
 */
#undef yyextra
#define yyextra  (((struct yyguts_t *) yyscanner)->yyextra_r)

/* Likewise for a couple of other things we need. */
#undef yylloc
#define yylloc	(((struct yyguts_t *) yyscanner)->yylloc_r)
#undef yyleng
#define yyleng	(((struct yyguts_t *) yyscanner)->yyleng_r)

/*
 * truncate_identifier() --- truncate an identifier to NAMEDATALEN-1 bytes.
 *
 * The given string is modified in-place, if necessary.  A warning is
 * issued if requested.
 *
 * We require the caller to pass in the string length since this saves a
 * strlen() call in some common usages.
 */
void
truncate_identifier(char *ident, int len, bool warn)
{
	if (len >= NAMEDATALEN)
	{
		ident[len] = '\0';
	}
}

static int
process_integer_literal(const char *token, YYSTYPE *lval)
{
	long		val;
	char	   *endptr;

	errno = 0;
	val = strtol(token, &endptr, 10);
	if (*endptr != '\0' || errno == ERANGE
#ifdef HAVE_LONG_INT_64
	/* if long > 32 bits, check for overflow of int4 */
		|| val != (long) ((int) val)
#endif
		)
	{
		/* integer too large, treat it as a float */
		lval->str = strdup(token);
		return FCONST;
	}
	lval->ival = val;
	return ICONST;
}

/*
 * downcase_truncate_identifier() --- do appropriate downcasing and
 * truncation of an unquoted identifier.  Optionally warn of truncation.
 *
 * Returns a palloc'd string containing the adjusted identifier.
 *
 * Note: in some usages the passed string is not null-terminated.
 *
 * Note: the API of this function is designed to allow for downcasing
 * transformations that increase the string length, but we don't yet
 * support that.  If you want to implement it, you'll need to fix
 * SplitIdentifierString() in utils/adt/varlena.c.
 */
char *
downcase_truncate_identifier(const char *ident, int len, bool warn)
{
	return downcase_identifier(ident, len, warn, true);
}

/*
 * a workhorse for downcase_truncate_identifier
 */
char *
downcase_identifier(const char *ident, int len, bool warn, bool truncate)
{
	char	   *result;
	int			i;

	result = malloc(len + 1);

	/*
	 * SQL99 specifies Unicode-aware case normalization, which we don't yet
	 * have the infrastructure for.  Instead we use tolower() to provide a
	 * locale-aware translation.  However, there are some locales where this
	 * is not right either (eg, Turkish may do strange things with 'i' and
	 * 'I').  Our current compromise is to use tolower() for characters with
	 * the high bit set, as long as they aren't part of a multi-byte
	 * character, and use an ASCII-only downcasing for 7-bit characters.
	 */
	for (i = 0; i < len; i++)
	{
		unsigned char ch = (unsigned char) ident[i];

		if (ch >= 'A' && ch <= 'Z')
			ch += 'a' - 'A';
		
		result[i] = (char) ch;
	}
	result[i] = '\0';

	if (i >= NAMEDATALEN && truncate)
		truncate_identifier(result, i, warn);

	return result;
}

/*
 * scanner_yyerror
 *		Report a lexer or grammar error.
 *
 * The message's cursor position is whatever YYLLOC was last set to,
 * ie, the start of the current token if called within core_yylex(), or the
 * most recently lexed token if called from the grammar.
 * This is OK for syntax error messages from the Bison parser, because Bison
 * parsers report error as soon as the first unparsable token is reached.
 * Beware of using yyerror for other purposes, as the cursor position might
 * be misleading!
 */
void
scanner_yyerror(const char *message, core_yyscan_t yyscanner)
{
	const char *loc = yyextra->scanbuf + *yylloc;

	printf("msg:%s\n",msg);
}

/*
 * Called before any actual parsing is done
 */
core_yyscan_t
scanner_init(const char *str,
			 core_yy_extra_type *yyext,
			 const ScanKeyword *keywords,
			 int num_keywords)
{
	Size		slen = strlen(str);
	yyscan_t	scanner;

	if (core_yylex_init(&scanner) != 0)
		printf("core_yylex_init() failed:");

	core_yyset_extra(yyext, scanner);

	yyext->keywords = keywords;
	yyext->num_keywords = num_keywords;

	yyext->backslash_quote = backslash_quote;
	yyext->escape_string_warning = escape_string_warning;
	yyext->standard_conforming_strings = standard_conforming_strings;

	/*
	 * Make a scan buffer with special termination needed by flex.
	 */
	yyext->scanbuf = (char *) malloc(slen + 2);
	yyext->scanbuflen = slen;
	memcpy(yyext->scanbuf, str, slen);
	yyext->scanbuf[slen] = yyext->scanbuf[slen + 1] = YY_END_OF_BUFFER_CHAR;
	core_yy_scan_buffer(yyext->scanbuf,slen + 2,scanner);

	/* initialize literal buffer to a reasonable but expansible size */
	yyext->literalalloc = 1024;
	yyext->literalbuf = (char *) malloc(yyext->literalalloc);
	yyext->literallen = 0;

	return scanner;
}


/*
 * Called after parsing is done to clean up after scanner_init()
 */
void
scanner_finish(core_yyscan_t yyscanner)
{
	/*
	 * We don't bother to call core_yylex_destroy(), because all it would do is
	 * pfree a small amount of control storage.  It's cheaper to leak the
	 * storage until the parsing context is destroyed.  The amount of space
	 * involved is usually negligible compared to the output parse tree
	 * anyway.
	 *
	 * We do bother to pfree the scanbuf and literal buffer, but only if they
	 * represent a nontrivial amount of space.  The 8K cutoff is arbitrary.
	 */
	if (yyextra->scanbuflen >= 8192)
		free(yyextra->scanbuf);
	if (yyextra->literalalloc >= 8192)
		free(yyextra->literalbuf);
}


char* remalloc(char* buf,int originLen,int len) {
	char* newBuf = malloc(len);
	memcpy(newBuf,buf,originLen);
	free(buf);
	return newBuf;
}

static void
addlit(char *ytext, int yleng, core_yyscan_t yyscanner)
{
	/* enlarge buffer if needed */
	if ((yyextra->literallen + yleng) >= yyextra->literalalloc)
	{
		do
		{
			yyextra->literalalloc *= 2;
		} while ((yyextra->literallen + yleng) >= yyextra->literalalloc);
		yyextra->literalbuf = (char *) remalloc(yyextra->literalbuf,yyextra->literallen,
												yyextra->literalalloc);
	}
	/* append new data */
	memcpy(yyextra->literalbuf + yyextra->literallen, ytext, yleng);
	yyextra->literallen += yleng;
}


static void
addlitchar(unsigned char ychar, core_yyscan_t yyscanner)
{
	/* enlarge buffer if needed */
	if ((yyextra->literallen + 1) >= yyextra->literalalloc)
	{
		yyextra->literalalloc *= 2;
		yyextra->literalbuf = (char *) remalloc(yyextra->literalbuf,yyextra->literallen,
												yyextra->literalalloc);
	}
	/* append new data */
	yyextra->literalbuf[yyextra->literallen] = ychar;
	yyextra->literallen += 1;
}


/*
 * Create a palloc'd copy of literalbuf, adding a trailing null.
 */
static char *
litbufdup(core_yyscan_t yyscanner)
{
	int			llen = yyextra->literallen;
	char	   *newBuf;

	newBuf = malloc(llen + 1);
	memcpy(newBuf, yyextra->literalbuf, llen);
	newBuf[llen] = '\0';
	return newBuf;
}

